{"ast":null,"code":"import { CRUD_GET_ONE_SUCCESS, CRUD_GET_LIST_SUCCESS } from '../../../../actions/dataActions';\nimport { DELETE, DELETE_MANY } from '../../../../dataFetchActions';\n\nvar totalReducer = function totalReducer(previousState, action) {\n  if (previousState === void 0) {\n    previousState = 0;\n  }\n\n  if (action.type === CRUD_GET_ONE_SUCCESS) {\n    return previousState === 0 ? 1 : previousState;\n  }\n\n  if (action.type === CRUD_GET_LIST_SUCCESS) {\n    return action.payload.total;\n  }\n\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === DELETE) {\n      return previousState - 1;\n    }\n\n    if (action.meta.fetch === DELETE_MANY) {\n      return previousState - action.payload.ids.length;\n    }\n  }\n\n  return previousState;\n};\n\nexport default totalReducer;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/reducer/admin/resource/list/total.js"],"names":["CRUD_GET_ONE_SUCCESS","CRUD_GET_LIST_SUCCESS","DELETE","DELETE_MANY","totalReducer","previousState","action","type","payload","total","meta","optimistic","fetch","ids","length"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,qBAA/B,QAA6D,iCAA7D;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,8BAApC;;AACA,IAAIC,YAAY,GAAG,SAAfA,YAAe,CAAUC,aAAV,EAAyBC,MAAzB,EAAiC;AAChD,MAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAG,CAAhB;AAAoB;;AACpD,MAAIC,MAAM,CAACC,IAAP,KAAgBP,oBAApB,EAA0C;AACtC,WAAOK,aAAa,KAAK,CAAlB,GAAsB,CAAtB,GAA0BA,aAAjC;AACH;;AACD,MAAIC,MAAM,CAACC,IAAP,KAAgBN,qBAApB,EAA2C;AACvC,WAAOK,MAAM,CAACE,OAAP,CAAeC,KAAtB;AACH;;AACD,MAAIH,MAAM,CAACI,IAAP,IAAeJ,MAAM,CAACI,IAAP,CAAYC,UAA/B,EAA2C;AACvC,QAAIL,MAAM,CAACI,IAAP,CAAYE,KAAZ,KAAsBV,MAA1B,EAAkC;AAC9B,aAAOG,aAAa,GAAG,CAAvB;AACH;;AACD,QAAIC,MAAM,CAACI,IAAP,CAAYE,KAAZ,KAAsBT,WAA1B,EAAuC;AACnC,aAAOE,aAAa,GAAGC,MAAM,CAACE,OAAP,CAAeK,GAAf,CAAmBC,MAA1C;AACH;AACJ;;AACD,SAAOT,aAAP;AACH,CAjBD;;AAkBA,eAAeD,YAAf","sourcesContent":["import { CRUD_GET_ONE_SUCCESS, CRUD_GET_LIST_SUCCESS, } from '../../../../actions/dataActions';\nimport { DELETE, DELETE_MANY } from '../../../../dataFetchActions';\nvar totalReducer = function (previousState, action) {\n    if (previousState === void 0) { previousState = 0; }\n    if (action.type === CRUD_GET_ONE_SUCCESS) {\n        return previousState === 0 ? 1 : previousState;\n    }\n    if (action.type === CRUD_GET_LIST_SUCCESS) {\n        return action.payload.total;\n    }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === DELETE) {\n            return previousState - 1;\n        }\n        if (action.meta.fetch === DELETE_MANY) {\n            return previousState - action.payload.ids.length;\n        }\n    }\n    return previousState;\n};\nexport default totalReducer;\n"]},"metadata":{},"sourceType":"module"}