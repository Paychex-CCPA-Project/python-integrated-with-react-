{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { addField, translate, ReferenceInputController } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Labeled from './Labeled';\nimport ReferenceError from './ReferenceError';\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var allowEmpty = _a.allowEmpty,\n      basePath = _a.basePath,\n      choices = _a.choices,\n      className = _a.className,\n      component = _a.component,\n      crudGetMatching = _a.crudGetMatching,\n      crudGetOne = _a.crudGetOne,\n      defaultValue = _a.defaultValue,\n      filter = _a.filter,\n      filterToQuery = _a.filterToQuery,\n      formClassName = _a.formClassName,\n      initializeForm = _a.initializeForm,\n      input = _a.input,\n      isRequired = _a.isRequired,\n      label = _a.label,\n      locale = _a.locale,\n      meta = _a.meta,\n      onChange = _a.onChange,\n      optionValue = _a.optionValue,\n      optionText = _a.optionText,\n      perPage = _a.perPage,\n      record = _a.record,\n      reference = _a.reference,\n      referenceSource = _a.referenceSource,\n      resource = _a.resource,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      sort = _a.sort,\n      source = _a.source,\n      textAlign = _a.textAlign,\n      translate = _a.translate,\n      translateChoice = _a.translateChoice,\n      validation = _a.validation,\n      rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"choices\", \"className\", \"component\", \"crudGetMatching\", \"crudGetOne\", \"defaultValue\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"locale\", \"meta\", \"onChange\", \"optionValue\", \"optionText\", \"perPage\", \"record\", \"reference\", \"referenceSource\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n\n  return rest;\n};\n\nexport var ReferenceInputView = function ReferenceInputView(_a) {\n  var allowEmpty = _a.allowEmpty,\n      basePath = _a.basePath,\n      children = _a.children,\n      choices = _a.choices,\n      classes = _a.classes,\n      className = _a.className,\n      error = _a.error,\n      input = _a.input,\n      isRequired = _a.isRequired,\n      isLoading = _a.isLoading,\n      label = _a.label,\n      meta = _a.meta,\n      onChange = _a.onChange,\n      resource = _a.resource,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      source = _a.source,\n      translate = _a.translate,\n      warning = _a.warning,\n      rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"classes\", \"className\", \"error\", \"input\", \"isRequired\", \"isLoading\", \"label\", \"meta\", \"onChange\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"translate\", \"warning\"]);\n\n  if (isLoading) {\n    return React.createElement(Labeled, {\n      label: label,\n      source: source,\n      resource: resource,\n      className: className,\n      isRequired: isRequired\n    }, React.createElement(LinearProgress, null));\n  }\n\n  if (error) {\n    return React.createElement(ReferenceError, {\n      label: label,\n      error: error\n    });\n  }\n\n  return React.cloneElement(children, __assign({\n    allowEmpty: allowEmpty,\n    classes: classes,\n    className: className,\n    input: input,\n    isRequired: isRequired,\n    label: label,\n    resource: resource,\n    meta: __assign({}, meta, {\n      helperText: warning || false\n    }),\n    source: source,\n    choices: choices,\n    basePath: basePath,\n    onChange: onChange,\n    setFilter: setFilter,\n    setPagination: setPagination,\n    setSort: setSort,\n    translateChoice: false\n  }, sanitizeRestProps(rest)));\n};\nReferenceInputView.propTypes = {\n  allowEmpty: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  choices: PropTypes.array,\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  error: PropTypes.string,\n  input: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  onChange: PropTypes.func,\n  resource: PropTypes.string.isRequired,\n  setFilter: PropTypes.func,\n  setPagination: PropTypes.func,\n  setSort: PropTypes.func,\n  source: PropTypes.string,\n  translate: PropTypes.func.isRequired,\n  warning: PropTypes.string\n};\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using the `CRUD_GET_MATCHING` REST method), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n */\n\nexport var ReferenceInput = function ReferenceInput(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceInput> only accepts a single child');\n  }\n\n  return React.createElement(ReferenceInputController, __assign({}, props), function (controllerProps) {\n    return React.createElement(ReferenceInputView, __assign({}, props, __assign({\n      children: children\n    }, controllerProps)));\n  });\n};\nReferenceInput.propTypes = {\n  allowEmpty: PropTypes.bool.isRequired,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  classes: PropTypes.object,\n  filter: PropTypes.object,\n  filterToQuery: PropTypes.func.isRequired,\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  onChange: PropTypes.func,\n  perPage: PropTypes.number,\n  record: PropTypes.object,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string.isRequired,\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  source: PropTypes.string,\n  translate: PropTypes.func.isRequired\n};\nReferenceInput.defaultProps = {\n  allowEmpty: false,\n  filter: {},\n  filterToQuery: function filterToQuery(searchText) {\n    return {\n      q: searchText\n    };\n  },\n  perPage: 25,\n  sort: {\n    field: 'id',\n    order: 'DESC'\n  }\n};\nvar EnhancedReferenceInput = compose(addField, translate)(ReferenceInput);\nexport default EnhancedReferenceInput;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-ui-materialui/esm/input/ReferenceInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","React","PropTypes","compose","addField","translate","ReferenceInputController","LinearProgress","Labeled","ReferenceError","sanitizeRestProps","_a","allowEmpty","basePath","choices","className","component","crudGetMatching","crudGetOne","defaultValue","filter","filterToQuery","formClassName","initializeForm","input","isRequired","label","locale","meta","onChange","optionValue","optionText","perPage","record","reference","referenceSource","resource","setFilter","setPagination","setSort","sort","source","textAlign","translateChoice","validation","rest","ReferenceInputView","children","classes","error","isLoading","warning","createElement","cloneElement","helperText","propTypes","bool","string","element","array","object","func","ReferenceInput","props","Children","count","Error","controllerProps","number","shape","field","order","oneOf","defaultProps","searchText","q","EnhancedReferenceInput"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { addField, translate, ReferenceInputController } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Labeled from './Labeled';\nimport ReferenceError from './ReferenceError';\nvar sanitizeRestProps = function (_a) {\n    var allowEmpty = _a.allowEmpty, basePath = _a.basePath, choices = _a.choices, className = _a.className, component = _a.component, crudGetMatching = _a.crudGetMatching, crudGetOne = _a.crudGetOne, defaultValue = _a.defaultValue, filter = _a.filter, filterToQuery = _a.filterToQuery, formClassName = _a.formClassName, initializeForm = _a.initializeForm, input = _a.input, isRequired = _a.isRequired, label = _a.label, locale = _a.locale, meta = _a.meta, onChange = _a.onChange, optionValue = _a.optionValue, optionText = _a.optionText, perPage = _a.perPage, record = _a.record, reference = _a.reference, referenceSource = _a.referenceSource, resource = _a.resource, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, sort = _a.sort, source = _a.source, textAlign = _a.textAlign, translate = _a.translate, translateChoice = _a.translateChoice, validation = _a.validation, rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"choices\", \"className\", \"component\", \"crudGetMatching\", \"crudGetOne\", \"defaultValue\", \"filter\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"locale\", \"meta\", \"onChange\", \"optionValue\", \"optionText\", \"perPage\", \"record\", \"reference\", \"referenceSource\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"source\", \"textAlign\", \"translate\", \"translateChoice\", \"validation\"]);\n    return rest;\n};\nexport var ReferenceInputView = function (_a) {\n    var allowEmpty = _a.allowEmpty, basePath = _a.basePath, children = _a.children, choices = _a.choices, classes = _a.classes, className = _a.className, error = _a.error, input = _a.input, isRequired = _a.isRequired, isLoading = _a.isLoading, label = _a.label, meta = _a.meta, onChange = _a.onChange, resource = _a.resource, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, source = _a.source, translate = _a.translate, warning = _a.warning, rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"classes\", \"className\", \"error\", \"input\", \"isRequired\", \"isLoading\", \"label\", \"meta\", \"onChange\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"translate\", \"warning\"]);\n    if (isLoading) {\n        return (React.createElement(Labeled, { label: label, source: source, resource: resource, className: className, isRequired: isRequired },\n            React.createElement(LinearProgress, null)));\n    }\n    if (error) {\n        return React.createElement(ReferenceError, { label: label, error: error });\n    }\n    return React.cloneElement(children, __assign({ allowEmpty: allowEmpty,\n        classes: classes,\n        className: className,\n        input: input,\n        isRequired: isRequired,\n        label: label,\n        resource: resource, meta: __assign({}, meta, { helperText: warning || false }), source: source,\n        choices: choices,\n        basePath: basePath,\n        onChange: onChange,\n        setFilter: setFilter,\n        setPagination: setPagination,\n        setSort: setSort, translateChoice: false }, sanitizeRestProps(rest)));\n};\nReferenceInputView.propTypes = {\n    allowEmpty: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    choices: PropTypes.array,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    error: PropTypes.string,\n    input: PropTypes.object.isRequired,\n    isLoading: PropTypes.bool,\n    label: PropTypes.string,\n    meta: PropTypes.object,\n    onChange: PropTypes.func,\n    resource: PropTypes.string.isRequired,\n    setFilter: PropTypes.func,\n    setPagination: PropTypes.func,\n    setSort: PropTypes.func,\n    source: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n    warning: PropTypes.string,\n};\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using the `CRUD_GET_MATCHING` REST method), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n */\nexport var ReferenceInput = function (_a) {\n    var children = _a.children, props = __rest(_a, [\"children\"]);\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceInput> only accepts a single child');\n    }\n    return (React.createElement(ReferenceInputController, __assign({}, props), function (controllerProps) { return (React.createElement(ReferenceInputView, __assign({}, props, __assign({ children: children }, controllerProps)))); }));\n};\nReferenceInput.propTypes = {\n    allowEmpty: PropTypes.bool.isRequired,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    filter: PropTypes.object,\n    filterToQuery: PropTypes.func.isRequired,\n    input: PropTypes.object.isRequired,\n    label: PropTypes.string,\n    meta: PropTypes.object,\n    onChange: PropTypes.func,\n    perPage: PropTypes.number,\n    record: PropTypes.object,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n};\nReferenceInput.defaultProps = {\n    allowEmpty: false,\n    filter: {},\n    filterToQuery: function (searchText) { return ({ q: searchText }); },\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\nvar EnhancedReferenceInput = compose(addField, translate)(ReferenceInput);\nexport default EnhancedReferenceInput;\n"]},"metadata":{},"sourceType":"module"}