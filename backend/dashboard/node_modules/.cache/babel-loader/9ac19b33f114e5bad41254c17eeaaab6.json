{"ast":null,"code":"import _toPath from 'lodash-es/toPath';\n\nfunction createDeleteInWithCleanUp(structure) {\n  var shouldDeleteDefault = function shouldDeleteDefault(structure) {\n    return function (state, path) {\n      return structure.getIn(state, path) !== undefined;\n    };\n  };\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      getIn = structure.getIn,\n      deleteIn = structure.deleteIn,\n      setIn = structure.setIn;\n  return function () {\n    var shouldDelete = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : shouldDeleteDefault;\n\n    var deleteInWithCleanUp = function deleteInWithCleanUp(state, path) {\n      if (path[path.length - 1] === ']') {\n        // array path\n        var pathTokens = _toPath(path);\n\n        pathTokens.pop();\n        var parent = getIn(state, pathTokens.join('.'));\n        return parent ? setIn(state, path) : state;\n      }\n\n      var result = state;\n\n      if (shouldDelete(structure)(state, path)) {\n        result = deleteIn(state, path);\n      }\n\n      var dotIndex = path.lastIndexOf('.');\n\n      if (dotIndex > 0) {\n        var parentPath = path.substring(0, dotIndex);\n\n        if (parentPath[parentPath.length - 1] !== ']') {\n          var _parent = getIn(result, parentPath);\n\n          if (deepEqual(_parent, empty)) {\n            return deleteInWithCleanUp(result, parentPath);\n          }\n        }\n      }\n\n      return result;\n    };\n\n    return deleteInWithCleanUp;\n  };\n}\n\nexport default createDeleteInWithCleanUp;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/redux-form/es/deleteInWithCleanUp.js"],"names":["_toPath","createDeleteInWithCleanUp","structure","shouldDeleteDefault","state","path","getIn","undefined","deepEqual","empty","deleteIn","setIn","shouldDelete","arguments","length","deleteInWithCleanUp","pathTokens","pop","parent","join","result","dotIndex","lastIndexOf","parentPath","substring","_parent"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;;AAGA,SAASC,yBAAT,CAAmCC,SAAnC,EAA8C;AAC5C,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BD,SAA7B,EAAwC;AAChE,WAAO,UAAUE,KAAV,EAAiBC,IAAjB,EAAuB;AAC5B,aAAOH,SAAS,CAACI,KAAV,CAAgBF,KAAhB,EAAuBC,IAAvB,MAAiCE,SAAxC;AACD,KAFD;AAGD,GAJD;;AAMA,MAAIC,SAAS,GAAGN,SAAS,CAACM,SAA1B;AAAA,MACIC,KAAK,GAAGP,SAAS,CAACO,KADtB;AAAA,MAEIH,KAAK,GAAGJ,SAAS,CAACI,KAFtB;AAAA,MAGII,QAAQ,GAAGR,SAAS,CAACQ,QAHzB;AAAA,MAIIC,KAAK,GAAGT,SAAS,CAACS,KAJtB;AAOA,SAAO,YAAY;AACjB,QAAIC,YAAY,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBN,SAAzC,GAAqDM,SAAS,CAAC,CAAD,CAA9D,GAAoEV,mBAAvF;;AAEA,QAAIY,mBAAmB,GAAG,SAASA,mBAAT,CAA6BX,KAA7B,EAAoCC,IAApC,EAA0C;AAClE,UAAIA,IAAI,CAACA,IAAI,CAACS,MAAL,GAAc,CAAf,CAAJ,KAA0B,GAA9B,EAAmC;AACjC;AACA,YAAIE,UAAU,GAAGhB,OAAO,CAACK,IAAD,CAAxB;;AACAW,QAAAA,UAAU,CAACC,GAAX;AACA,YAAIC,MAAM,GAAGZ,KAAK,CAACF,KAAD,EAAQY,UAAU,CAACG,IAAX,CAAgB,GAAhB,CAAR,CAAlB;AACA,eAAOD,MAAM,GAAGP,KAAK,CAACP,KAAD,EAAQC,IAAR,CAAR,GAAwBD,KAArC;AACD;;AAED,UAAIgB,MAAM,GAAGhB,KAAb;;AAEA,UAAIQ,YAAY,CAACV,SAAD,CAAZ,CAAwBE,KAAxB,EAA+BC,IAA/B,CAAJ,EAA0C;AACxCe,QAAAA,MAAM,GAAGV,QAAQ,CAACN,KAAD,EAAQC,IAAR,CAAjB;AACD;;AAED,UAAIgB,QAAQ,GAAGhB,IAAI,CAACiB,WAAL,CAAiB,GAAjB,CAAf;;AACA,UAAID,QAAQ,GAAG,CAAf,EAAkB;AAChB,YAAIE,UAAU,GAAGlB,IAAI,CAACmB,SAAL,CAAe,CAAf,EAAkBH,QAAlB,CAAjB;;AACA,YAAIE,UAAU,CAACA,UAAU,CAACT,MAAX,GAAoB,CAArB,CAAV,KAAsC,GAA1C,EAA+C;AAC7C,cAAIW,OAAO,GAAGnB,KAAK,CAACc,MAAD,EAASG,UAAT,CAAnB;;AACA,cAAIf,SAAS,CAACiB,OAAD,EAAUhB,KAAV,CAAb,EAA+B;AAC7B,mBAAOM,mBAAmB,CAACK,MAAD,EAASG,UAAT,CAA1B;AACD;AACF;AACF;;AACD,aAAOH,MAAP;AACD,KA1BD;;AA4BA,WAAOL,mBAAP;AACD,GAhCD;AAiCD;;AAED,eAAed,yBAAf","sourcesContent":["import _toPath from 'lodash-es/toPath';\n\n\nfunction createDeleteInWithCleanUp(structure) {\n  var shouldDeleteDefault = function shouldDeleteDefault(structure) {\n    return function (state, path) {\n      return structure.getIn(state, path) !== undefined;\n    };\n  };\n\n  var deepEqual = structure.deepEqual,\n      empty = structure.empty,\n      getIn = structure.getIn,\n      deleteIn = structure.deleteIn,\n      setIn = structure.setIn;\n\n\n  return function () {\n    var shouldDelete = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : shouldDeleteDefault;\n\n    var deleteInWithCleanUp = function deleteInWithCleanUp(state, path) {\n      if (path[path.length - 1] === ']') {\n        // array path\n        var pathTokens = _toPath(path);\n        pathTokens.pop();\n        var parent = getIn(state, pathTokens.join('.'));\n        return parent ? setIn(state, path) : state;\n      }\n\n      var result = state;\n\n      if (shouldDelete(structure)(state, path)) {\n        result = deleteIn(state, path);\n      }\n\n      var dotIndex = path.lastIndexOf('.');\n      if (dotIndex > 0) {\n        var parentPath = path.substring(0, dotIndex);\n        if (parentPath[parentPath.length - 1] !== ']') {\n          var _parent = getIn(result, parentPath);\n          if (deepEqual(_parent, empty)) {\n            return deleteInWithCleanUp(result, parentPath);\n          }\n        }\n      }\n      return result;\n    };\n\n    return deleteInWithCleanUp;\n  };\n}\n\nexport default createDeleteInWithCleanUp;"]},"metadata":{},"sourceType":"module"}