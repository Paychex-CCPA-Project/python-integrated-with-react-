{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Component, isValidElement } from 'react';\nimport { connect } from 'react-redux';\nimport { parse, stringify } from 'query-string';\nimport { push as pushAction } from 'react-router-redux';\nimport compose from 'recompose/compose';\nimport { createSelector } from 'reselect';\nimport inflection from 'inflection';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport pickBy from 'lodash/pickBy';\nimport removeEmpty from '../util/removeEmpty';\nimport queryReducer, { SET_SORT, SET_PAGE, SET_PER_PAGE, SET_FILTER, SORT_DESC } from '../reducer/admin/resource/list/queryReducer';\nimport { crudGetList as crudGetListAction } from '../actions/dataActions';\nimport { changeListParams as changeListParamsAction, setListSelectedIds as setListSelectedIdsAction, toggleListItem as toggleListItemAction } from '../actions/listActions';\nimport withTranslate from '../i18n/translate';\nimport removeKey from '../util/removeKey';\nimport checkMinimumRequiredProps from './checkMinimumRequiredProps';\n/**\n * List page component\n *\n * The <List> component renders the list layout (title, buttons, filters, pagination),\n * and fetches the list of records from the REST API.\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * In Redux terms, <List> is a connected component, and <Datagrid> is a dumb component.\n *\n * Props:\n *   - title\n *   - perPage\n *   - sort\n *   - filter (the permanent filter to apply to the query)\n *   - actions\n *   - filters (a React Element used to display the filter form)\n *   - pagination\n *\n * @example\n *     const PostFilter = (props) => (\n *         <Filter {...props}>\n *             <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *             <TextInput label=\"Title\" source=\"title\" />\n *         </Filter>\n *     );\n *     export const PostList = (props) => (\n *         <List {...props}\n *             title=\"List of posts\"\n *             sort={{ field: 'published_at' }}\n *             filter={{ is_published: true }}\n *             filters={<PostFilter />}\n *         >\n *             <Datagrid>\n *                 <TextField source=\"id\" />\n *                 <TextField source=\"title\" />\n *                 <EditButton />\n *             </Datagrid>\n *         </List>\n *     );\n */\n\nvar UnconnectedListController =\n/** @class */\nfunction (_super) {\n  __extends(UnconnectedListController, _super);\n\n  function UnconnectedListController() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {};\n    _this.setFilters = debounce(function (filters) {\n      if (isEqual(filters, _this.getFilterValues())) {\n        return;\n      } // fix for redux-form bug with onChange and enableReinitialize\n\n\n      var filtersWithoutEmpty = removeEmpty(filters);\n\n      _this.changeParams({\n        type: SET_FILTER,\n        payload: filtersWithoutEmpty\n      });\n    }, _this.props.debounce);\n\n    _this.setSort = function (sort) {\n      return _this.changeParams({\n        type: SET_SORT,\n        payload: {\n          sort: sort\n        }\n      });\n    };\n\n    _this.setPage = function (page) {\n      return _this.changeParams({\n        type: SET_PAGE,\n        payload: page\n      });\n    };\n\n    _this.setPerPage = function (perPage) {\n      return _this.changeParams({\n        type: SET_PER_PAGE,\n        payload: perPage\n      });\n    };\n\n    _this.showFilter = function (filterName, defaultValue) {\n      var _a, _b;\n\n      _this.setState((_a = {}, _a[filterName] = true, _a));\n\n      if (typeof defaultValue !== 'undefined') {\n        _this.setFilters(__assign({}, _this.getFilterValues(), (_b = {}, _b[filterName] = defaultValue, _b)));\n      }\n    };\n\n    _this.hideFilter = function (filterName) {\n      var _a;\n\n      _this.setState((_a = {}, _a[filterName] = false, _a));\n\n      var newFilters = removeKey(_this.getFilterValues(), filterName);\n\n      _this.setFilters(newFilters);\n    };\n\n    _this.handleSelect = function (ids) {\n      _this.props.setSelectedIds(_this.props.resource, ids);\n    };\n\n    _this.handleUnselectItems = function () {\n      _this.props.setSelectedIds(_this.props.resource, []);\n    };\n\n    _this.handleToggleItem = function (id) {\n      _this.props.toggleItem(_this.props.resource, id);\n    };\n\n    return _this;\n  }\n\n  UnconnectedListController.prototype.componentDidMount = function () {\n    if (this.props.filter && isValidElement(this.props.filter)) {\n      throw new Error('<List> received a React element as `filter` props. If you intended to set the list filter elements, use the `filters` (with an s) prop instead. The `filter` prop is internal and should not be set by the developer.');\n    }\n\n    if (!this.props.query.page && !(this.props.ids || []).length && this.props.params.page > 1 && this.props.total > 0) {\n      this.setPage(this.props.params.page - 1);\n      return;\n    }\n\n    this.updateData();\n\n    if (Object.keys(this.props.query).length > 0) {\n      this.props.changeListParams(this.props.resource, this.props.query);\n    }\n  };\n\n  UnconnectedListController.prototype.componentWillUnmount = function () {\n    this.setFilters.cancel();\n  };\n\n  UnconnectedListController.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.version !== this.props.version || nextProps.resource !== this.props.resource || !isEqual(nextProps.query, this.props.query) || !isEqual(nextProps.filter, this.props.filter) || !isEqual(nextProps.sort, this.props.sort) || !isEqual(nextProps.perPage, this.props.perPage)) {\n      this.updateData(nextProps);\n    }\n  };\n\n  UnconnectedListController.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    if (nextProps.className === this.props.className && nextProps.translate === this.props.translate && nextProps.isLoading === this.props.isLoading && nextProps.version === this.props.version && nextState === this.state && nextProps.data === this.props.data && nextProps.selectedIds === this.props.selectedIds && nextProps.total === this.props.total && nextProps.permissions === this.props.permissions) {\n      return false;\n    }\n\n    return true;\n  };\n  /**\n   * Merge list params from 4 different sources:\n   *   - the query string\n   *   - the params stored in the state (from previous navigation)\n   *   - the props passed to the List component\n   */\n\n\n  UnconnectedListController.prototype.getQuery = function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var query = Object.keys(props.query).length > 0 ? props.query : hasCustomParams(props.params) ? __assign({}, props.params) : {\n      filter: props.filterDefaultValues || {}\n    };\n\n    if (!query.sort) {\n      query.sort = props.sort.field;\n      query.order = props.sort.order;\n    }\n\n    query.perPage = parseInt( // @ts-ignore\n    query.perPage ? query.perPage : props.perPage, 10); // @ts-ignore\n\n    query.page = query.page ? parseInt(query.page, 10) : 1;\n    return query;\n  };\n\n  UnconnectedListController.prototype.getFilterValues = function () {\n    var query = this.getQuery();\n    return query.filter || {};\n  };\n\n  UnconnectedListController.prototype.updateData = function (props) {\n    if (props === void 0) {\n      props = this.props;\n    }\n\n    var query = this.getQuery(props);\n    var sort = query.sort,\n        order = query.order,\n        _a = query.page,\n        page = _a === void 0 ? 1 : _a,\n        perPage = query.perPage,\n        filter = query.filter;\n    var pagination = {\n      page: page,\n      perPage: perPage\n    };\n    this.props.crudGetList(this.props.resource, pagination, {\n      field: sort,\n      order: order\n    }, __assign({}, filter, props.filter));\n  };\n\n  UnconnectedListController.prototype.changeParams = function (action) {\n    var newParams = queryReducer(this.getQuery(), action);\n    this.props.push(__assign({}, this.props.location, {\n      search: \"?\" + stringify(__assign({}, newParams, {\n        filter: JSON.stringify(newParams.filter)\n      }))\n    }));\n    this.props.changeListParams(this.props.resource, newParams);\n  };\n\n  UnconnectedListController.prototype.render = function () {\n    var _a = this.props,\n        basePath = _a.basePath,\n        children = _a.children,\n        resource = _a.resource,\n        hasCreate = _a.hasCreate,\n        data = _a.data,\n        ids = _a.ids,\n        loadedOnce = _a.loadedOnce,\n        total = _a.total,\n        isLoading = _a.isLoading,\n        translate = _a.translate,\n        version = _a.version,\n        selectedIds = _a.selectedIds;\n    var query = this.getQuery();\n    var resourceName = translate(\"resources.\" + resource + \".name\", {\n      smart_count: 2,\n      _: inflection.humanize(inflection.pluralize(resource))\n    });\n    var defaultTitle = translate('ra.page.list', {\n      name: resourceName\n    });\n    return children({\n      basePath: basePath,\n      currentSort: {\n        field: query.sort,\n        order: query.order\n      },\n      data: data,\n      defaultTitle: defaultTitle,\n      displayedFilters: this.state,\n      filterValues: this.getFilterValues(),\n      hasCreate: hasCreate,\n      hideFilter: this.hideFilter,\n      ids: ids,\n      isLoading: isLoading,\n      loadedOnce: loadedOnce,\n      onSelect: this.handleSelect,\n      onToggleItem: this.handleToggleItem,\n      onUnselectItems: this.handleUnselectItems,\n      page: (typeof query.page === 'string' ? parseInt(query.page, 10) : query.page) || 1,\n      perPage: (typeof query.perPage === 'string' ? parseInt(query.perPage, 10) : query.perPage) || 10,\n      resource: resource,\n      selectedIds: selectedIds,\n      setFilters: this.setFilters,\n      setPage: this.setPage,\n      setPerPage: this.setPerPage,\n      setSort: this.setSort,\n      showFilter: this.showFilter,\n      translate: translate,\n      total: total,\n      version: version\n    });\n  };\n\n  UnconnectedListController.defaultProps = {\n    debounce: 500,\n    filter: {},\n    perPage: 10,\n    sort: {\n      field: 'id',\n      order: SORT_DESC\n    }\n  };\n  return UnconnectedListController;\n}(Component);\n\nexport { UnconnectedListController };\n/**\n * Check if user has already set custom sort, page, or filters for this list\n *\n * User params come from the Redux store as the params props. By default,\n * this object is:\n *\n * { filter: {}, order: null, page: 1, perPage: null, sort: null }\n *\n * To check if the user has custom params, we must compare the params\n * to these initial values.\n *\n * @param {object} params\n */\n\nvar hasCustomParams = function hasCustomParams(params) {\n  return params && (params.filter && Object.keys(params.filter).length > 0 || params.order != null || params.page !== 1 || params.perPage != null || params.sort != null);\n};\n\nvar injectedProps = ['basePath', 'currentSort', 'data', 'defaultTitle', 'displayedFilters', 'filterValues', 'hasCreate', 'hideFilter', 'ids', 'isLoading', 'loadedOnce', 'onSelect', 'onToggleItem', 'onUnselectItems', 'page', 'perPage', 'refresh', 'resource', 'selectedIds', 'setFilters', 'setPage', 'setPerPage', 'setSort', 'showFilter', 'total', 'translate', 'version'];\n/**\n * Select the props injected by the ListController\n * to be passed to the List children need\n * This is an implementation of pick()\n */\n\nexport var getListControllerProps = function getListControllerProps(props) {\n  return injectedProps.reduce(function (acc, key) {\n    var _a;\n\n    return __assign({}, acc, (_a = {}, _a[key] = props[key], _a));\n  }, {});\n};\n/**\n * Select the props not injected by the ListController\n * to be used inside the List children to sanitize props injected by List\n * This is an implementation of omit()\n */\n\nexport var sanitizeListRestProps = function sanitizeListRestProps(props) {\n  return Object.keys(props).filter(function (propName) {\n    return !injectedProps.includes(propName);\n  }).reduce(function (acc, key) {\n    var _a;\n\n    return __assign({}, acc, (_a = {}, _a[key] = props[key], _a));\n  }, {});\n};\nvar validQueryParams = ['page', 'perPage', 'sort', 'order', 'filter'];\n\nvar getLocationPath = function getLocationPath(props) {\n  return props.location.pathname;\n};\n\nvar getLocationSearch = function getLocationSearch(props) {\n  return props.location.search;\n};\n\nvar selectQuery = createSelector(getLocationPath, getLocationSearch, function (path, search) {\n  var query = pickBy(parse(search), function (v, k) {\n    return validQueryParams.indexOf(k) !== -1;\n  });\n\n  if (query.filter && typeof query.filter === 'string') {\n    try {\n      query.filter = JSON.parse(query.filter);\n    } catch (err) {\n      delete query.filter;\n    }\n  }\n\n  return query;\n});\n\nfunction mapStateToProps(state, props) {\n  var resourceState = state.admin.resources[props.resource];\n  return {\n    query: selectQuery(props),\n    params: resourceState.list.params,\n    ids: resourceState.list.ids,\n    loadedOnce: resourceState.list.loadedOnce,\n    selectedIds: resourceState.list.selectedIds,\n    total: resourceState.list.total,\n    data: resourceState.data,\n    isLoading: state.admin.loading > 0,\n    version: state.admin.ui.viewVersion\n  };\n}\n\nvar ListController = compose(checkMinimumRequiredProps('List', ['basePath', 'location', 'resource']), connect(mapStateToProps, {\n  crudGetList: crudGetListAction,\n  changeListParams: changeListParamsAction,\n  setSelectedIds: setListSelectedIdsAction,\n  toggleItem: toggleListItemAction,\n  push: pushAction\n}), withTranslate)(UnconnectedListController);\nexport default ListController;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/controller/ListController.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","Component","isValidElement","connect","parse","stringify","push","pushAction","compose","createSelector","inflection","debounce","isEqual","pickBy","removeEmpty","queryReducer","SET_SORT","SET_PAGE","SET_PER_PAGE","SET_FILTER","SORT_DESC","crudGetList","crudGetListAction","changeListParams","changeListParamsAction","setListSelectedIds","setListSelectedIdsAction","toggleListItem","toggleListItemAction","withTranslate","removeKey","checkMinimumRequiredProps","UnconnectedListController","_super","_this","state","setFilters","filters","getFilterValues","filtersWithoutEmpty","changeParams","type","payload","props","setSort","sort","setPage","page","setPerPage","perPage","showFilter","filterName","defaultValue","_a","_b","setState","hideFilter","newFilters","handleSelect","ids","setSelectedIds","resource","handleUnselectItems","handleToggleItem","id","toggleItem","componentDidMount","filter","Error","query","params","total","updateData","keys","componentWillUnmount","cancel","componentWillReceiveProps","nextProps","version","shouldComponentUpdate","nextState","className","translate","isLoading","data","selectedIds","permissions","getQuery","hasCustomParams","filterDefaultValues","field","order","parseInt","pagination","action","newParams","location","search","JSON","render","basePath","children","hasCreate","loadedOnce","resourceName","smart_count","_","humanize","pluralize","defaultTitle","name","currentSort","displayedFilters","filterValues","onSelect","onToggleItem","onUnselectItems","defaultProps","injectedProps","getListControllerProps","reduce","acc","key","sanitizeListRestProps","propName","includes","validQueryParams","getLocationPath","pathname","getLocationSearch","selectQuery","path","v","k","indexOf","err","mapStateToProps","resourceState","admin","resources","list","loading","ui","viewVersion","ListController"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Component, isValidElement, } from 'react';\nimport { connect } from 'react-redux';\nimport { parse, stringify } from 'query-string';\nimport { push as pushAction } from 'react-router-redux';\nimport compose from 'recompose/compose';\nimport { createSelector } from 'reselect';\nimport inflection from 'inflection';\nimport debounce from 'lodash/debounce';\nimport isEqual from 'lodash/isEqual';\nimport pickBy from 'lodash/pickBy';\nimport removeEmpty from '../util/removeEmpty';\nimport queryReducer, { SET_SORT, SET_PAGE, SET_PER_PAGE, SET_FILTER, SORT_DESC, } from '../reducer/admin/resource/list/queryReducer';\nimport { crudGetList as crudGetListAction } from '../actions/dataActions';\nimport { changeListParams as changeListParamsAction, setListSelectedIds as setListSelectedIdsAction, toggleListItem as toggleListItemAction, } from '../actions/listActions';\nimport withTranslate from '../i18n/translate';\nimport removeKey from '../util/removeKey';\nimport checkMinimumRequiredProps from './checkMinimumRequiredProps';\n/**\n * List page component\n *\n * The <List> component renders the list layout (title, buttons, filters, pagination),\n * and fetches the list of records from the REST API.\n * It then delegates the rendering of the list of records to its child component.\n * Usually, it's a <Datagrid>, responsible for displaying a table with one row for each post.\n *\n * In Redux terms, <List> is a connected component, and <Datagrid> is a dumb component.\n *\n * Props:\n *   - title\n *   - perPage\n *   - sort\n *   - filter (the permanent filter to apply to the query)\n *   - actions\n *   - filters (a React Element used to display the filter form)\n *   - pagination\n *\n * @example\n *     const PostFilter = (props) => (\n *         <Filter {...props}>\n *             <TextInput label=\"Search\" source=\"q\" alwaysOn />\n *             <TextInput label=\"Title\" source=\"title\" />\n *         </Filter>\n *     );\n *     export const PostList = (props) => (\n *         <List {...props}\n *             title=\"List of posts\"\n *             sort={{ field: 'published_at' }}\n *             filter={{ is_published: true }}\n *             filters={<PostFilter />}\n *         >\n *             <Datagrid>\n *                 <TextField source=\"id\" />\n *                 <TextField source=\"title\" />\n *                 <EditButton />\n *             </Datagrid>\n *         </List>\n *     );\n */\nvar UnconnectedListController = /** @class */ (function (_super) {\n    __extends(UnconnectedListController, _super);\n    function UnconnectedListController() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {};\n        _this.setFilters = debounce(function (filters) {\n            if (isEqual(filters, _this.getFilterValues())) {\n                return;\n            }\n            // fix for redux-form bug with onChange and enableReinitialize\n            var filtersWithoutEmpty = removeEmpty(filters);\n            _this.changeParams({ type: SET_FILTER, payload: filtersWithoutEmpty });\n        }, _this.props.debounce);\n        _this.setSort = function (sort) { return _this.changeParams({ type: SET_SORT, payload: { sort: sort } }); };\n        _this.setPage = function (page) { return _this.changeParams({ type: SET_PAGE, payload: page }); };\n        _this.setPerPage = function (perPage) {\n            return _this.changeParams({ type: SET_PER_PAGE, payload: perPage });\n        };\n        _this.showFilter = function (filterName, defaultValue) {\n            var _a, _b;\n            _this.setState((_a = {}, _a[filterName] = true, _a));\n            if (typeof defaultValue !== 'undefined') {\n                _this.setFilters(__assign({}, _this.getFilterValues(), (_b = {}, _b[filterName] = defaultValue, _b)));\n            }\n        };\n        _this.hideFilter = function (filterName) {\n            var _a;\n            _this.setState((_a = {}, _a[filterName] = false, _a));\n            var newFilters = removeKey(_this.getFilterValues(), filterName);\n            _this.setFilters(newFilters);\n        };\n        _this.handleSelect = function (ids) {\n            _this.props.setSelectedIds(_this.props.resource, ids);\n        };\n        _this.handleUnselectItems = function () {\n            _this.props.setSelectedIds(_this.props.resource, []);\n        };\n        _this.handleToggleItem = function (id) {\n            _this.props.toggleItem(_this.props.resource, id);\n        };\n        return _this;\n    }\n    UnconnectedListController.prototype.componentDidMount = function () {\n        if (this.props.filter && isValidElement(this.props.filter)) {\n            throw new Error('<List> received a React element as `filter` props. If you intended to set the list filter elements, use the `filters` (with an s) prop instead. The `filter` prop is internal and should not be set by the developer.');\n        }\n        if (!this.props.query.page &&\n            !(this.props.ids || []).length &&\n            this.props.params.page > 1 &&\n            this.props.total > 0) {\n            this.setPage(this.props.params.page - 1);\n            return;\n        }\n        this.updateData();\n        if (Object.keys(this.props.query).length > 0) {\n            this.props.changeListParams(this.props.resource, this.props.query);\n        }\n    };\n    UnconnectedListController.prototype.componentWillUnmount = function () {\n        this.setFilters.cancel();\n    };\n    UnconnectedListController.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.version !== this.props.version ||\n            nextProps.resource !== this.props.resource ||\n            !isEqual(nextProps.query, this.props.query) ||\n            !isEqual(nextProps.filter, this.props.filter) ||\n            !isEqual(nextProps.sort, this.props.sort) ||\n            !isEqual(nextProps.perPage, this.props.perPage)) {\n            this.updateData(nextProps);\n        }\n    };\n    UnconnectedListController.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (nextProps.className === this.props.className &&\n            nextProps.translate === this.props.translate &&\n            nextProps.isLoading === this.props.isLoading &&\n            nextProps.version === this.props.version &&\n            nextState === this.state &&\n            nextProps.data === this.props.data &&\n            nextProps.selectedIds === this.props.selectedIds &&\n            nextProps.total === this.props.total &&\n            nextProps.permissions === this.props.permissions) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Merge list params from 4 different sources:\n     *   - the query string\n     *   - the params stored in the state (from previous navigation)\n     *   - the props passed to the List component\n     */\n    UnconnectedListController.prototype.getQuery = function (props) {\n        if (props === void 0) { props = this.props; }\n        var query = Object.keys(props.query).length > 0\n            ? props.query\n            : hasCustomParams(props.params)\n                ? __assign({}, props.params) : { filter: props.filterDefaultValues || {} };\n        if (!query.sort) {\n            query.sort = props.sort.field;\n            query.order = props.sort.order;\n        }\n        query.perPage = parseInt(\n        // @ts-ignore\n        query.perPage ? query.perPage : props.perPage, 10);\n        // @ts-ignore\n        query.page = query.page ? parseInt(query.page, 10) : 1;\n        return query;\n    };\n    UnconnectedListController.prototype.getFilterValues = function () {\n        var query = this.getQuery();\n        return query.filter || {};\n    };\n    UnconnectedListController.prototype.updateData = function (props) {\n        if (props === void 0) { props = this.props; }\n        var query = this.getQuery(props);\n        var sort = query.sort, order = query.order, _a = query.page, page = _a === void 0 ? 1 : _a, perPage = query.perPage, filter = query.filter;\n        var pagination = {\n            page: page,\n            perPage: perPage,\n        };\n        this.props.crudGetList(this.props.resource, pagination, { field: sort, order: order }, __assign({}, filter, props.filter));\n    };\n    UnconnectedListController.prototype.changeParams = function (action) {\n        var newParams = queryReducer(this.getQuery(), action);\n        this.props.push(__assign({}, this.props.location, { search: \"?\" + stringify(__assign({}, newParams, { filter: JSON.stringify(newParams.filter) })) }));\n        this.props.changeListParams(this.props.resource, newParams);\n    };\n    UnconnectedListController.prototype.render = function () {\n        var _a = this.props, basePath = _a.basePath, children = _a.children, resource = _a.resource, hasCreate = _a.hasCreate, data = _a.data, ids = _a.ids, loadedOnce = _a.loadedOnce, total = _a.total, isLoading = _a.isLoading, translate = _a.translate, version = _a.version, selectedIds = _a.selectedIds;\n        var query = this.getQuery();\n        var resourceName = translate(\"resources.\" + resource + \".name\", {\n            smart_count: 2,\n            _: inflection.humanize(inflection.pluralize(resource)),\n        });\n        var defaultTitle = translate('ra.page.list', {\n            name: resourceName,\n        });\n        return children({\n            basePath: basePath,\n            currentSort: {\n                field: query.sort,\n                order: query.order,\n            },\n            data: data,\n            defaultTitle: defaultTitle,\n            displayedFilters: this.state,\n            filterValues: this.getFilterValues(),\n            hasCreate: hasCreate,\n            hideFilter: this.hideFilter,\n            ids: ids,\n            isLoading: isLoading,\n            loadedOnce: loadedOnce,\n            onSelect: this.handleSelect,\n            onToggleItem: this.handleToggleItem,\n            onUnselectItems: this.handleUnselectItems,\n            page: (typeof query.page === 'string'\n                ? parseInt(query.page, 10)\n                : query.page) || 1,\n            perPage: (typeof query.perPage === 'string'\n                ? parseInt(query.perPage, 10)\n                : query.perPage) || 10,\n            resource: resource,\n            selectedIds: selectedIds,\n            setFilters: this.setFilters,\n            setPage: this.setPage,\n            setPerPage: this.setPerPage,\n            setSort: this.setSort,\n            showFilter: this.showFilter,\n            translate: translate,\n            total: total,\n            version: version,\n        });\n    };\n    UnconnectedListController.defaultProps = {\n        debounce: 500,\n        filter: {},\n        perPage: 10,\n        sort: {\n            field: 'id',\n            order: SORT_DESC,\n        },\n    };\n    return UnconnectedListController;\n}(Component));\nexport { UnconnectedListController };\n/**\n * Check if user has already set custom sort, page, or filters for this list\n *\n * User params come from the Redux store as the params props. By default,\n * this object is:\n *\n * { filter: {}, order: null, page: 1, perPage: null, sort: null }\n *\n * To check if the user has custom params, we must compare the params\n * to these initial values.\n *\n * @param {object} params\n */\nvar hasCustomParams = function (params) {\n    return params &&\n        ((params.filter && Object.keys(params.filter).length > 0) ||\n            params.order != null ||\n            params.page !== 1 ||\n            params.perPage != null ||\n            params.sort != null);\n};\nvar injectedProps = [\n    'basePath',\n    'currentSort',\n    'data',\n    'defaultTitle',\n    'displayedFilters',\n    'filterValues',\n    'hasCreate',\n    'hideFilter',\n    'ids',\n    'isLoading',\n    'loadedOnce',\n    'onSelect',\n    'onToggleItem',\n    'onUnselectItems',\n    'page',\n    'perPage',\n    'refresh',\n    'resource',\n    'selectedIds',\n    'setFilters',\n    'setPage',\n    'setPerPage',\n    'setSort',\n    'showFilter',\n    'total',\n    'translate',\n    'version',\n];\n/**\n * Select the props injected by the ListController\n * to be passed to the List children need\n * This is an implementation of pick()\n */\nexport var getListControllerProps = function (props) {\n    return injectedProps.reduce(function (acc, key) {\n        var _a;\n        return (__assign({}, acc, (_a = {}, _a[key] = props[key], _a)));\n    }, {});\n};\n/**\n * Select the props not injected by the ListController\n * to be used inside the List children to sanitize props injected by List\n * This is an implementation of omit()\n */\nexport var sanitizeListRestProps = function (props) {\n    return Object.keys(props)\n        .filter(function (propName) { return !injectedProps.includes(propName); })\n        .reduce(function (acc, key) {\n        var _a;\n        return (__assign({}, acc, (_a = {}, _a[key] = props[key], _a)));\n    }, {});\n};\nvar validQueryParams = ['page', 'perPage', 'sort', 'order', 'filter'];\nvar getLocationPath = function (props) { return props.location.pathname; };\nvar getLocationSearch = function (props) { return props.location.search; };\nvar selectQuery = createSelector(getLocationPath, getLocationSearch, function (path, search) {\n    var query = pickBy(parse(search), function (v, k) { return validQueryParams.indexOf(k) !== -1; });\n    if (query.filter && typeof query.filter === 'string') {\n        try {\n            query.filter = JSON.parse(query.filter);\n        }\n        catch (err) {\n            delete query.filter;\n        }\n    }\n    return query;\n});\nfunction mapStateToProps(state, props) {\n    var resourceState = state.admin.resources[props.resource];\n    return {\n        query: selectQuery(props),\n        params: resourceState.list.params,\n        ids: resourceState.list.ids,\n        loadedOnce: resourceState.list.loadedOnce,\n        selectedIds: resourceState.list.selectedIds,\n        total: resourceState.list.total,\n        data: resourceState.data,\n        isLoading: state.admin.loading > 0,\n        version: state.admin.ui.viewVersion,\n    };\n}\nvar ListController = compose(checkMinimumRequiredProps('List', ['basePath', 'location', 'resource']), connect(mapStateToProps, {\n    crudGetList: crudGetListAction,\n    changeListParams: changeListParamsAction,\n    setSelectedIds: setListSelectedIdsAction,\n    toggleItem: toggleListItemAction,\n    push: pushAction,\n}), withTranslate)(UnconnectedListController);\nexport default ListController;\n"]},"metadata":{},"sourceType":"module"}