{"ast":null,"code":"function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar splice = function splice(array, index, removeNum, value) {\n  array = array || [];\n\n  if (index < array.length) {\n    if (value === undefined && !removeNum) {\n      // inserting undefined\n      var _copy2 = [].concat(_toConsumableArray(array));\n\n      _copy2.splice(index, 0, true); // temporary placeholder\n\n\n      _copy2[index] = undefined; // set to undefined\n\n      return _copy2;\n    }\n\n    if (value != null) {\n      var _copy3 = [].concat(_toConsumableArray(array));\n\n      _copy3.splice(index, removeNum, value); // removing and adding\n\n\n      return _copy3;\n    }\n\n    var _copy = [].concat(_toConsumableArray(array));\n\n    _copy.splice(index, removeNum); // removing\n\n\n    return _copy;\n  }\n\n  if (removeNum) {\n    // trying to remove non-existant item: return original array\n    return array;\n  } // trying to add outside of range: just set value\n\n\n  var copy = [].concat(_toConsumableArray(array));\n  copy[index] = value;\n  return copy;\n};\n\nexport default splice;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/redux-form/es/structure/plain/splice.js"],"names":["_toConsumableArray","arr","Array","isArray","i","arr2","length","from","splice","array","index","removeNum","value","undefined","_copy2","concat","_copy3","_copy","copy"],"mappings":"AAAA,SAASA,kBAAT,CAA4BC,GAA5B,EAAiC;AAAE,MAAIC,KAAK,CAACC,OAAN,CAAcF,GAAd,CAAJ,EAAwB;AAAE,SAAK,IAAIG,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAGH,KAAK,CAACD,GAAG,CAACK,MAAL,CAA5B,EAA0CF,CAAC,GAAGH,GAAG,CAACK,MAAlD,EAA0DF,CAAC,EAA3D,EAA+D;AAAEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUH,GAAG,CAACG,CAAD,CAAb;AAAmB;;AAAC,WAAOC,IAAP;AAAc,GAA7H,MAAmI;AAAE,WAAOH,KAAK,CAACK,IAAN,CAAWN,GAAX,CAAP;AAAyB;AAAE;;AAEnM,IAAIO,MAAM,GAAG,SAASA,MAAT,CAAgBC,KAAhB,EAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,KAAzC,EAAgD;AAC3DH,EAAAA,KAAK,GAAGA,KAAK,IAAI,EAAjB;;AAEA,MAAIC,KAAK,GAAGD,KAAK,CAACH,MAAlB,EAA0B;AACxB,QAAIM,KAAK,KAAKC,SAAV,IAAuB,CAACF,SAA5B,EAAuC;AACrC;AACA,UAAIG,MAAM,GAAG,GAAGC,MAAH,CAAUf,kBAAkB,CAACS,KAAD,CAA5B,CAAb;;AACAK,MAAAA,MAAM,CAACN,MAAP,CAAcE,KAAd,EAAqB,CAArB,EAAwB,IAAxB,EAHqC,CAGN;;;AAC/BI,MAAAA,MAAM,CAACJ,KAAD,CAAN,GAAgBG,SAAhB,CAJqC,CAIV;;AAC3B,aAAOC,MAAP;AACD;;AACD,QAAIF,KAAK,IAAI,IAAb,EAAmB;AACjB,UAAII,MAAM,GAAG,GAAGD,MAAH,CAAUf,kBAAkB,CAACS,KAAD,CAA5B,CAAb;;AACAO,MAAAA,MAAM,CAACR,MAAP,CAAcE,KAAd,EAAqBC,SAArB,EAAgCC,KAAhC,EAFiB,CAEuB;;;AACxC,aAAOI,MAAP;AACD;;AACD,QAAIC,KAAK,GAAG,GAAGF,MAAH,CAAUf,kBAAkB,CAACS,KAAD,CAA5B,CAAZ;;AACAQ,IAAAA,KAAK,CAACT,MAAN,CAAaE,KAAb,EAAoBC,SAApB,EAdwB,CAcQ;;;AAChC,WAAOM,KAAP;AACD;;AACD,MAAIN,SAAJ,EAAe;AACb;AACA,WAAOF,KAAP;AACD,GAvB0D,CAwB3D;;;AACA,MAAIS,IAAI,GAAG,GAAGH,MAAH,CAAUf,kBAAkB,CAACS,KAAD,CAA5B,CAAX;AACAS,EAAAA,IAAI,CAACR,KAAD,CAAJ,GAAcE,KAAd;AACA,SAAOM,IAAP;AACD,CA5BD;;AA8BA,eAAeV,MAAf","sourcesContent":["function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar splice = function splice(array, index, removeNum, value) {\n  array = array || [];\n\n  if (index < array.length) {\n    if (value === undefined && !removeNum) {\n      // inserting undefined\n      var _copy2 = [].concat(_toConsumableArray(array));\n      _copy2.splice(index, 0, true); // temporary placeholder\n      _copy2[index] = undefined; // set to undefined\n      return _copy2;\n    }\n    if (value != null) {\n      var _copy3 = [].concat(_toConsumableArray(array));\n      _copy3.splice(index, removeNum, value); // removing and adding\n      return _copy3;\n    }\n    var _copy = [].concat(_toConsumableArray(array));\n    _copy.splice(index, removeNum); // removing\n    return _copy;\n  }\n  if (removeNum) {\n    // trying to remove non-existant item: return original array\n    return array;\n  }\n  // trying to add outside of range: just set value\n  var copy = [].concat(_toConsumableArray(array));\n  copy[index] = value;\n  return copy;\n};\n\nexport default splice;"]},"metadata":{},"sourceType":"module"}