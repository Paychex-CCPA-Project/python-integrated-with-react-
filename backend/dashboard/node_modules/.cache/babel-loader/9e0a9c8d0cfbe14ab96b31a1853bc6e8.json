{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport debounce from 'lodash/debounce';\nimport compose from 'recompose/compose';\nimport { createSelector } from 'reselect';\nimport isEqual from 'lodash/isEqual';\nimport { crudGetManyAccumulate as crudGetManyAccumulateAction, crudGetMatchingAccumulate as crudGetMatchingAccumulateAction } from '../../actions/accumulateActions';\nimport { getPossibleReferences, getPossibleReferenceValues, getReferenceResource } from '../../reducer';\nimport { getStatusForInput as getDataStatus } from './referenceDataStatus';\nimport withTranslate from '../../i18n/translate';\n\nvar defaultReferenceSource = function defaultReferenceSource(resource, source) {\n  return resource + \"@\" + source;\n};\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using the `CRUD_GET_MATCHING` REST method), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n */\n\n\nvar UnconnectedReferenceInputController =\n/** @class */\nfunction (_super) {\n  __extends(UnconnectedReferenceInputController, _super);\n\n  function UnconnectedReferenceInputController(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.setFilter = function (filter) {\n      if (filter !== _this.state.filter) {\n        _this.setState({\n          filter: _this.props.filterToQuery(filter)\n        }, _this.fetchOptions);\n      }\n    };\n\n    _this.setPagination = function (pagination) {\n      if (pagination !== _this.state.pagination) {\n        _this.setState({\n          pagination: pagination\n        }, _this.fetchOptions);\n      }\n    };\n\n    _this.setSort = function (sort) {\n      if (sort !== _this.state.sort) {\n        _this.setState({\n          sort: sort\n        }, _this.fetchOptions);\n      }\n    };\n\n    _this.fetchReference = function (props) {\n      if (props === void 0) {\n        props = _this.props;\n      }\n\n      var crudGetManyAccumulate = props.crudGetManyAccumulate,\n          input = props.input,\n          reference = props.reference;\n      var id = input.value;\n\n      if (id) {\n        crudGetManyAccumulate(reference, [id]);\n      }\n    };\n\n    _this.fetchOptions = function (props) {\n      if (props === void 0) {\n        props = _this.props;\n      }\n\n      var crudGetMatchingAccumulate = props.crudGetMatchingAccumulate,\n          filterFromProps = props.filter,\n          reference = props.reference,\n          referenceSource = props.referenceSource,\n          resource = props.resource,\n          source = props.source;\n      var _a = _this.state,\n          pagination = _a.pagination,\n          sort = _a.sort,\n          filter = _a.filter;\n      crudGetMatchingAccumulate(reference, referenceSource(resource, source), pagination, sort, __assign({}, filterFromProps, filter));\n    };\n\n    var perPage = props.perPage,\n        sort = props.sort,\n        filter = props.filter;\n    _this.state = {\n      pagination: {\n        page: 1,\n        perPage: perPage\n      },\n      sort: sort,\n      filter: filter\n    };\n    _this.debouncedSetFilter = debounce(_this.setFilter.bind(_this), 500);\n    return _this;\n  }\n\n  UnconnectedReferenceInputController.prototype.componentDidMount = function () {\n    this.fetchReferenceAndOptions(this.props);\n  };\n\n  UnconnectedReferenceInputController.prototype.componentWillReceiveProps = function (nextProps) {\n    if ((this.props.record || {\n      id: undefined\n    }).id !== (nextProps.record || {\n      id: undefined\n    }).id) {\n      this.fetchReferenceAndOptions(nextProps);\n    } else if (this.props.input.value !== nextProps.input.value) {\n      this.fetchReference(nextProps);\n    } else if (!isEqual(nextProps.filter, this.props.filter) || !isEqual(nextProps.sort, this.props.sort) || nextProps.perPage !== this.props.perPage) {\n      this.setState(function (state) {\n        return {\n          filter: nextProps.filter,\n          pagination: __assign({}, state.pagination, {\n            perPage: nextProps.perPage\n          }),\n          sort: nextProps.sort\n        };\n      }, this.fetchOptions);\n    }\n  };\n\n  UnconnectedReferenceInputController.prototype.fetchReferenceAndOptions = function (props) {\n    this.fetchReference(props);\n    this.fetchOptions(props);\n  };\n\n  UnconnectedReferenceInputController.prototype.render = function () {\n    var _a = this.props,\n        input = _a.input,\n        referenceRecord = _a.referenceRecord,\n        matchingReferences = _a.matchingReferences,\n        onChange = _a.onChange,\n        children = _a.children,\n        translate = _a.translate;\n    var _b = this.state,\n        pagination = _b.pagination,\n        sort = _b.sort,\n        filter = _b.filter;\n    var dataStatus = getDataStatus({\n      input: input,\n      matchingReferences: matchingReferences,\n      referenceRecord: referenceRecord,\n      translate: translate\n    });\n    return children({\n      choices: dataStatus.choices,\n      error: dataStatus.error,\n      isLoading: dataStatus.waiting,\n      onChange: onChange,\n      filter: filter,\n      setFilter: this.debouncedSetFilter,\n      pagination: pagination,\n      setPagination: this.setPagination,\n      sort: sort,\n      setSort: this.setSort,\n      warning: dataStatus.warning\n    });\n  };\n\n  UnconnectedReferenceInputController.defaultProps = {\n    allowEmpty: false,\n    filter: {},\n    filterToQuery: function filterToQuery(searchText) {\n      return {\n        q: searchText\n      };\n    },\n    matchingReferences: null,\n    perPage: 25,\n    sort: {\n      field: 'id',\n      order: 'DESC'\n    },\n    referenceRecord: null,\n    referenceSource: defaultReferenceSource\n  };\n  return UnconnectedReferenceInputController;\n}(Component);\n\nexport { UnconnectedReferenceInputController };\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  return createSelector([getReferenceResource, getPossibleReferenceValues, function (_, props) {\n    return props.input.value;\n  }], function (referenceState, possibleValues, inputId) {\n    return {\n      matchingReferences: getPossibleReferences(referenceState, possibleValues, [inputId]),\n      referenceRecord: referenceState && referenceState.data[inputId]\n    };\n  });\n};\n\nvar ReferenceInputController = compose(withTranslate, connect(makeMapStateToProps(), {\n  crudGetManyAccumulate: crudGetManyAccumulateAction,\n  crudGetMatchingAccumulate: crudGetMatchingAccumulateAction\n}))(UnconnectedReferenceInputController);\nReferenceInputController.defaultProps = {\n  referenceSource: defaultReferenceSource\n};\nexport default ReferenceInputController;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/controller/input/ReferenceInputController.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","Component","connect","debounce","compose","createSelector","isEqual","crudGetManyAccumulate","crudGetManyAccumulateAction","crudGetMatchingAccumulate","crudGetMatchingAccumulateAction","getPossibleReferences","getPossibleReferenceValues","getReferenceResource","getStatusForInput","getDataStatus","withTranslate","defaultReferenceSource","resource","source","UnconnectedReferenceInputController","_super","props","_this","setFilter","filter","state","setState","filterToQuery","fetchOptions","setPagination","pagination","setSort","sort","fetchReference","input","reference","id","value","filterFromProps","referenceSource","_a","perPage","page","debouncedSetFilter","bind","componentDidMount","fetchReferenceAndOptions","componentWillReceiveProps","nextProps","record","undefined","render","referenceRecord","matchingReferences","onChange","children","translate","_b","dataStatus","choices","error","isLoading","waiting","warning","defaultProps","allowEmpty","searchText","q","field","order","makeMapStateToProps","_","referenceState","possibleValues","inputId","data","ReferenceInputController"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport debounce from 'lodash/debounce';\nimport compose from 'recompose/compose';\nimport { createSelector } from 'reselect';\nimport isEqual from 'lodash/isEqual';\nimport { crudGetManyAccumulate as crudGetManyAccumulateAction, crudGetMatchingAccumulate as crudGetMatchingAccumulateAction, } from '../../actions/accumulateActions';\nimport { getPossibleReferences, getPossibleReferenceValues, getReferenceResource, } from '../../reducer';\nimport { getStatusForInput as getDataStatus } from './referenceDataStatus';\nimport withTranslate from '../../i18n/translate';\nvar defaultReferenceSource = function (resource, source) {\n    return resource + \"@\" + source;\n};\n/**\n * An Input component for choosing a reference record. Useful for foreign keys.\n *\n * This component fetches the possible values in the reference resource\n * (using the `CRUD_GET_MATCHING` REST method), then delegates rendering\n * to a subcomponent, to which it passes the possible choices\n * as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<AutocompleteInput>`,\n * `<SelectInput>`, or `<RadioButtonGroupInput>`.\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <AutocompleteInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * @example\n * export const CommentEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceInput label=\"Post\" source=\"post_id\" reference=\"posts\">\n *                 <SelectInput optionText=\"title\" />\n *             </ReferenceInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      perPage={100}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      sort={{ field: 'title', order: 'ASC' }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filter={{ is_published: true }}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n *\n * The enclosed component may filter results. ReferenceInput passes a `setFilter`\n * function as prop to its child component. It uses the value to create a filter\n * for the query - by default { q: [searchText] }. You can customize the mapping\n * searchText => searchQuery by setting a custom `filterToQuery` function prop:\n *\n * @example\n * <ReferenceInput\n *      source=\"post_id\"\n *      reference=\"posts\"\n *      filterToQuery={searchText => ({ title: searchText })}>\n *     <SelectInput optionText=\"title\" />\n * </ReferenceInput>\n */\nvar UnconnectedReferenceInputController = /** @class */ (function (_super) {\n    __extends(UnconnectedReferenceInputController, _super);\n    function UnconnectedReferenceInputController(props) {\n        var _this = _super.call(this, props) || this;\n        _this.setFilter = function (filter) {\n            if (filter !== _this.state.filter) {\n                _this.setState({ filter: _this.props.filterToQuery(filter) }, _this.fetchOptions);\n            }\n        };\n        _this.setPagination = function (pagination) {\n            if (pagination !== _this.state.pagination) {\n                _this.setState({ pagination: pagination }, _this.fetchOptions);\n            }\n        };\n        _this.setSort = function (sort) {\n            if (sort !== _this.state.sort) {\n                _this.setState({ sort: sort }, _this.fetchOptions);\n            }\n        };\n        _this.fetchReference = function (props) {\n            if (props === void 0) { props = _this.props; }\n            var crudGetManyAccumulate = props.crudGetManyAccumulate, input = props.input, reference = props.reference;\n            var id = input.value;\n            if (id) {\n                crudGetManyAccumulate(reference, [id]);\n            }\n        };\n        _this.fetchOptions = function (props) {\n            if (props === void 0) { props = _this.props; }\n            var crudGetMatchingAccumulate = props.crudGetMatchingAccumulate, filterFromProps = props.filter, reference = props.reference, referenceSource = props.referenceSource, resource = props.resource, source = props.source;\n            var _a = _this.state, pagination = _a.pagination, sort = _a.sort, filter = _a.filter;\n            crudGetMatchingAccumulate(reference, referenceSource(resource, source), pagination, sort, __assign({}, filterFromProps, filter));\n        };\n        var perPage = props.perPage, sort = props.sort, filter = props.filter;\n        _this.state = { pagination: { page: 1, perPage: perPage }, sort: sort, filter: filter };\n        _this.debouncedSetFilter = debounce(_this.setFilter.bind(_this), 500);\n        return _this;\n    }\n    UnconnectedReferenceInputController.prototype.componentDidMount = function () {\n        this.fetchReferenceAndOptions(this.props);\n    };\n    UnconnectedReferenceInputController.prototype.componentWillReceiveProps = function (nextProps) {\n        if ((this.props.record || { id: undefined }).id !==\n            (nextProps.record || { id: undefined }).id) {\n            this.fetchReferenceAndOptions(nextProps);\n        }\n        else if (this.props.input.value !== nextProps.input.value) {\n            this.fetchReference(nextProps);\n        }\n        else if (!isEqual(nextProps.filter, this.props.filter) ||\n            !isEqual(nextProps.sort, this.props.sort) ||\n            nextProps.perPage !== this.props.perPage) {\n            this.setState(function (state) { return ({\n                filter: nextProps.filter,\n                pagination: __assign({}, state.pagination, { perPage: nextProps.perPage }),\n                sort: nextProps.sort,\n            }); }, this.fetchOptions);\n        }\n    };\n    UnconnectedReferenceInputController.prototype.fetchReferenceAndOptions = function (props) {\n        this.fetchReference(props);\n        this.fetchOptions(props);\n    };\n    UnconnectedReferenceInputController.prototype.render = function () {\n        var _a = this.props, input = _a.input, referenceRecord = _a.referenceRecord, matchingReferences = _a.matchingReferences, onChange = _a.onChange, children = _a.children, translate = _a.translate;\n        var _b = this.state, pagination = _b.pagination, sort = _b.sort, filter = _b.filter;\n        var dataStatus = getDataStatus({\n            input: input,\n            matchingReferences: matchingReferences,\n            referenceRecord: referenceRecord,\n            translate: translate,\n        });\n        return children({\n            choices: dataStatus.choices,\n            error: dataStatus.error,\n            isLoading: dataStatus.waiting,\n            onChange: onChange,\n            filter: filter,\n            setFilter: this.debouncedSetFilter,\n            pagination: pagination,\n            setPagination: this.setPagination,\n            sort: sort,\n            setSort: this.setSort,\n            warning: dataStatus.warning,\n        });\n    };\n    UnconnectedReferenceInputController.defaultProps = {\n        allowEmpty: false,\n        filter: {},\n        filterToQuery: function (searchText) { return ({ q: searchText }); },\n        matchingReferences: null,\n        perPage: 25,\n        sort: { field: 'id', order: 'DESC' },\n        referenceRecord: null,\n        referenceSource: defaultReferenceSource,\n    };\n    return UnconnectedReferenceInputController;\n}(Component));\nexport { UnconnectedReferenceInputController };\nvar makeMapStateToProps = function () {\n    return createSelector([\n        getReferenceResource,\n        getPossibleReferenceValues,\n        function (_, props) { return props.input.value; },\n    ], function (referenceState, possibleValues, inputId) { return ({\n        matchingReferences: getPossibleReferences(referenceState, possibleValues, [inputId]),\n        referenceRecord: referenceState && referenceState.data[inputId],\n    }); });\n};\nvar ReferenceInputController = compose(withTranslate, connect(makeMapStateToProps(), {\n    crudGetManyAccumulate: crudGetManyAccumulateAction,\n    crudGetMatchingAccumulate: crudGetMatchingAccumulateAction,\n}))(UnconnectedReferenceInputController);\nReferenceInputController.defaultProps = {\n    referenceSource: defaultReferenceSource,\n};\nexport default ReferenceInputController;\n"]},"metadata":{},"sourceType":"module"}