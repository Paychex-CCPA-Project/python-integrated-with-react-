{"ast":null,"code":"import { CALL_HISTORY_METHOD } from './actions';\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\n\nexport default function routerMiddleware(history) {\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (action.type !== CALL_HISTORY_METHOD) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n        history[method].apply(history, args);\n      };\n    };\n  };\n}","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/react-router-redux/es/middleware.js"],"names":["CALL_HISTORY_METHOD","routerMiddleware","history","next","action","type","_action$payload","payload","method","args","apply"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,WAApC;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,gBAAT,CAA0BC,OAA1B,EAAmC;AAChD,SAAO,YAAY;AACjB,WAAO,UAAUC,IAAV,EAAgB;AACrB,aAAO,UAAUC,MAAV,EAAkB;AACvB,YAAIA,MAAM,CAACC,IAAP,KAAgBL,mBAApB,EAAyC;AACvC,iBAAOG,IAAI,CAACC,MAAD,CAAX;AACD;;AAED,YAAIE,eAAe,GAAGF,MAAM,CAACG,OAA7B;AAAA,YACIC,MAAM,GAAGF,eAAe,CAACE,MAD7B;AAAA,YAEIC,IAAI,GAAGH,eAAe,CAACG,IAF3B;AAIAP,QAAAA,OAAO,CAACM,MAAD,CAAP,CAAgBE,KAAhB,CAAsBR,OAAtB,EAA+BO,IAA/B;AACD,OAVD;AAWD,KAZD;AAaD,GAdD;AAeD","sourcesContent":["import { CALL_HISTORY_METHOD } from './actions';\n\n/**\n * This middleware captures CALL_HISTORY_METHOD actions to redirect to the\n * provided history object. This will prevent these actions from reaching your\n * reducer or any middleware that comes after this one.\n */\nexport default function routerMiddleware(history) {\n  return function () {\n    return function (next) {\n      return function (action) {\n        if (action.type !== CALL_HISTORY_METHOD) {\n          return next(action);\n        }\n\n        var _action$payload = action.payload,\n            method = _action$payload.method,\n            args = _action$payload.args;\n\n        history[method].apply(history, args);\n      };\n    };\n  };\n}"]},"metadata":{},"sourceType":"module"}