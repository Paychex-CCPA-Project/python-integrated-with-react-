{"ast":null,"code":"import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork, actionChannel, call } from '../io';\nimport { END } from '../channel';\nimport { buffers } from '../buffers';\nimport { delay } from '../utils';\nexport default function throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action = void 0,\n      channel = void 0;\n  var yActionChannel = {\n    done: false,\n    value: actionChannel(pattern, buffers.sliding(1))\n  };\n\n  var yTake = function yTake() {\n    return {\n      done: false,\n      value: take(channel)\n    };\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(undefined, [worker].concat(args, [ac]))\n    };\n  };\n\n  var yDelay = {\n    done: false,\n    value: call(delay, delayLength)\n  };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yActionChannel, setChannel];\n    },\n    q2: function q2() {\n      return ['q3', yTake(), setAction];\n    },\n    q3: function q3() {\n      return action === END ? [qEnd] : ['q4', yFork(action)];\n    },\n    q4: function q4() {\n      return ['q2', yDelay];\n    }\n  }, 'q1', 'throttle(' + safeName(pattern) + ', ' + worker.name + ')');\n}","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/redux-saga/es/internal/sagaHelpers/throttle.js"],"names":["fsmIterator","qEnd","safeName","take","fork","actionChannel","call","END","buffers","delay","throttle","delayLength","pattern","worker","_len","arguments","length","args","Array","_key","action","channel","yActionChannel","done","value","sliding","yTake","yFork","ac","apply","undefined","concat","yDelay","setAction","setChannel","ch","q1","q2","q3","q4","name"],"mappings":"AAAA,OAAOA,WAAP,IAAsBC,IAAtB,EAA4BC,QAA5B,QAA4C,eAA5C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,aAArB,EAAoCC,IAApC,QAAgD,OAAhD;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,eAAe,SAASC,QAAT,CAAkBC,WAAlB,EAA+BC,OAA/B,EAAwCC,MAAxC,EAAgD;AAC7D,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAzC,EAAoEK,IAAI,GAAG,CAAhF,EAAmFA,IAAI,GAAGL,IAA1F,EAAgGK,IAAI,EAApG,EAAwG;AACtGF,IAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,MAAIC,MAAM,GAAG,KAAK,CAAlB;AAAA,MACIC,OAAO,GAAG,KAAK,CADnB;AAGA,MAAIC,cAAc,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAEnB,aAAa,CAACO,OAAD,EAAUJ,OAAO,CAACiB,OAAR,CAAgB,CAAhB,CAAV;AAAnC,GAArB;;AACA,MAAIC,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,WAAO;AAAEH,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAErB,IAAI,CAACkB,OAAD;AAA1B,KAAP;AACD,GAFD;;AAGA,MAAIM,KAAK,GAAG,SAASA,KAAT,CAAeC,EAAf,EAAmB;AAC7B,WAAO;AAAEL,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAEpB,IAAI,CAACyB,KAAL,CAAWC,SAAX,EAAsB,CAACjB,MAAD,EAASkB,MAAT,CAAgBd,IAAhB,EAAsB,CAACW,EAAD,CAAtB,CAAtB;AAAtB,KAAP;AACD,GAFD;;AAGA,MAAII,MAAM,GAAG;AAAET,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAElB,IAAI,CAACG,KAAD,EAAQE,WAAR;AAA1B,GAAb;;AAEA,MAAIsB,SAAS,GAAG,SAASA,SAAT,CAAmBL,EAAnB,EAAuB;AACrC,WAAOR,MAAM,GAAGQ,EAAhB;AACD,GAFD;;AAGA,MAAIM,UAAU,GAAG,SAASA,UAAT,CAAoBC,EAApB,EAAwB;AACvC,WAAOd,OAAO,GAAGc,EAAjB;AACD,GAFD;;AAIA,SAAOnC,WAAW,CAAC;AACjBoC,IAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,aAAO,CAAC,IAAD,EAAOd,cAAP,EAAuBY,UAAvB,CAAP;AACD,KAHgB;AAIjBG,IAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,aAAO,CAAC,IAAD,EAAOX,KAAK,EAAZ,EAAgBO,SAAhB,CAAP;AACD,KANgB;AAOjBK,IAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,aAAOlB,MAAM,KAAKb,GAAX,GAAiB,CAACN,IAAD,CAAjB,GAA0B,CAAC,IAAD,EAAO0B,KAAK,CAACP,MAAD,CAAZ,CAAjC;AACD,KATgB;AAUjBmB,IAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,aAAO,CAAC,IAAD,EAAOP,MAAP,CAAP;AACD;AAZgB,GAAD,EAaf,IAbe,EAaT,cAAc9B,QAAQ,CAACU,OAAD,CAAtB,GAAkC,IAAlC,GAAyCC,MAAM,CAAC2B,IAAhD,GAAuD,GAb9C,CAAlB;AAcD","sourcesContent":["import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork, actionChannel, call } from '../io';\nimport { END } from '../channel';\nimport { buffers } from '../buffers';\nimport { delay } from '../utils';\n\nexport default function throttle(delayLength, pattern, worker) {\n  for (var _len = arguments.length, args = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    args[_key - 3] = arguments[_key];\n  }\n\n  var action = void 0,\n      channel = void 0;\n\n  var yActionChannel = { done: false, value: actionChannel(pattern, buffers.sliding(1)) };\n  var yTake = function yTake() {\n    return { done: false, value: take(channel) };\n  };\n  var yFork = function yFork(ac) {\n    return { done: false, value: fork.apply(undefined, [worker].concat(args, [ac])) };\n  };\n  var yDelay = { done: false, value: call(delay, delayLength) };\n\n  var setAction = function setAction(ac) {\n    return action = ac;\n  };\n  var setChannel = function setChannel(ch) {\n    return channel = ch;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yActionChannel, setChannel];\n    },\n    q2: function q2() {\n      return ['q3', yTake(), setAction];\n    },\n    q3: function q3() {\n      return action === END ? [qEnd] : ['q4', yFork(action)];\n    },\n    q4: function q4() {\n      return ['q2', yDelay];\n    }\n  }, 'q1', 'throttle(' + safeName(pattern) + ', ' + worker.name + ')');\n}"]},"metadata":{},"sourceType":"module"}