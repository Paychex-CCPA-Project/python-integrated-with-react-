{"ast":null,"code":"import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork } from '../io';\nimport { END } from '../channel';\nexport default function takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = {\n    done: false,\n    value: take(patternOrChannel)\n  };\n\n  var yFork = function yFork(ac) {\n    return {\n      done: false,\n      value: fork.apply(undefined, [worker].concat(args, [ac]))\n    };\n  };\n\n  var action = void 0,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yTake, setAction];\n    },\n    q2: function q2() {\n      return action === END ? [qEnd] : ['q1', yFork(action)];\n    }\n  }, 'q1', 'takeEvery(' + safeName(patternOrChannel) + ', ' + worker.name + ')');\n}","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/redux-saga/es/internal/sagaHelpers/takeEvery.js"],"names":["fsmIterator","qEnd","safeName","take","fork","END","takeEvery","patternOrChannel","worker","_len","arguments","length","args","Array","_key","yTake","done","value","yFork","ac","apply","undefined","concat","action","setAction","q1","q2","name"],"mappings":"AAAA,OAAOA,WAAP,IAAsBC,IAAtB,EAA4BC,QAA5B,QAA4C,eAA5C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,OAA3B;AACA,SAASC,GAAT,QAAoB,YAApB;AAEA,eAAe,SAASC,SAAT,CAAmBC,gBAAnB,EAAqCC,MAArC,EAA6C;AAC1D,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAAzC,EAAoEK,IAAI,GAAG,CAAhF,EAAmFA,IAAI,GAAGL,IAA1F,EAAgGK,IAAI,EAApG,EAAwG;AACtGF,IAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,MAAIC,KAAK,GAAG;AAAEC,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,KAAK,EAAEd,IAAI,CAACI,gBAAD;AAA1B,GAAZ;;AACA,MAAIW,KAAK,GAAG,SAASA,KAAT,CAAeC,EAAf,EAAmB;AAC7B,WAAO;AAAEH,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,KAAK,EAAEb,IAAI,CAACgB,KAAL,CAAWC,SAAX,EAAsB,CAACb,MAAD,EAASc,MAAT,CAAgBV,IAAhB,EAAsB,CAACO,EAAD,CAAtB,CAAtB;AAAtB,KAAP;AACD,GAFD;;AAIA,MAAII,MAAM,GAAG,KAAK,CAAlB;AAAA,MACIC,SAAS,GAAG,SAASA,SAAT,CAAmBL,EAAnB,EAAuB;AACrC,WAAOI,MAAM,GAAGJ,EAAhB;AACD,GAHD;;AAKA,SAAOnB,WAAW,CAAC;AACjByB,IAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,aAAO,CAAC,IAAD,EAAOV,KAAP,EAAcS,SAAd,CAAP;AACD,KAHgB;AAIjBE,IAAAA,EAAE,EAAE,SAASA,EAAT,GAAc;AAChB,aAAOH,MAAM,KAAKlB,GAAX,GAAiB,CAACJ,IAAD,CAAjB,GAA0B,CAAC,IAAD,EAAOiB,KAAK,CAACK,MAAD,CAAZ,CAAjC;AACD;AANgB,GAAD,EAOf,IAPe,EAOT,eAAerB,QAAQ,CAACK,gBAAD,CAAvB,GAA4C,IAA5C,GAAmDC,MAAM,CAACmB,IAA1D,GAAiE,GAPxD,CAAlB;AAQD","sourcesContent":["import fsmIterator, { qEnd, safeName } from './fsmIterator';\nimport { take, fork } from '../io';\nimport { END } from '../channel';\n\nexport default function takeEvery(patternOrChannel, worker) {\n  for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    args[_key - 2] = arguments[_key];\n  }\n\n  var yTake = { done: false, value: take(patternOrChannel) };\n  var yFork = function yFork(ac) {\n    return { done: false, value: fork.apply(undefined, [worker].concat(args, [ac])) };\n  };\n\n  var action = void 0,\n      setAction = function setAction(ac) {\n    return action = ac;\n  };\n\n  return fsmIterator({\n    q1: function q1() {\n      return ['q2', yTake, setAction];\n    },\n    q2: function q2() {\n      return action === END ? [qEnd] : ['q1', yFork(action)];\n    }\n  }, 'q1', 'takeEvery(' + safeName(patternOrChannel) + ', ' + worker.name + ')');\n}"]},"metadata":{},"sourceType":"module"}