{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport Autosuggest from 'react-autosuggest';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport compose from 'recompose/compose';\nimport classnames from 'classnames';\nimport { addField, translate, FieldTitle } from 'ra-core';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    container: {\n      flexGrow: 1,\n      position: 'relative'\n    },\n    root: {},\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      marginBottom: theme.spacing.unit * 3,\n      zIndex: 2\n    },\n    suggestionsPaper: {\n      maxHeight: '50vh',\n      overflowY: 'auto'\n    },\n    suggestion: {\n      display: 'block',\n      fontFamily: theme.typography.fontFamily\n    },\n    suggestionText: {\n      fontWeight: 300\n    },\n    highlightedSuggestionText: {\n      fontWeight: 500\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    }\n  });\n};\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <AutoComplete> component\n *\n * @example\n * <AutocompleteInput source=\"author_id\" options={{ fullWidth: true }} />\n */\n\n\nvar AutocompleteInput =\n/** @class */\nfunction (_super) {\n  __extends(AutocompleteInput, _super);\n\n  function AutocompleteInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      dirty: false,\n      inputValue: null,\n      searchText: '',\n      selectedItem: null,\n      suggestions: []\n    };\n    _this.ignoreNextChoicesUpdate = false;\n    _this.inputEl = null;\n    _this.anchorEl = null;\n\n    _this.getSelectedItem = function (_a, inputValue) {\n      var choices = _a.choices;\n      return choices && inputValue ? choices.find(function (choice) {\n        return _this.getSuggestionValue(choice) === inputValue;\n      }) : null;\n    };\n\n    _this.getSuggestionValue = function (suggestion) {\n      return get(suggestion, _this.props.optionValue);\n    };\n\n    _this.getSuggestionText = function (suggestion) {\n      if (!suggestion) return '';\n      var _a = _this.props,\n          optionText = _a.optionText,\n          translate = _a.translate,\n          translateChoice = _a.translateChoice;\n      var suggestionLabel = typeof optionText === 'function' ? optionText(suggestion) : get(suggestion, optionText, ''); // We explicitly call toString here because AutoSuggest expect a string\n\n      return translateChoice ? translate(suggestionLabel, {\n        _: suggestionLabel\n      }).toString() : suggestionLabel.toString();\n    };\n\n    _this.handleSuggestionSelected = function (event, _a) {\n      var suggestion = _a.suggestion,\n          method = _a.method;\n      var input = _this.props.input;\n\n      var inputValue = _this.getSuggestionValue(suggestion);\n\n      if (input && input.onChange) {\n        _this.setState({\n          dirty: false,\n          inputValue: inputValue,\n          selectedItem: suggestion\n        }, function () {\n          input.onChange(inputValue);\n        });\n      }\n\n      if (method === 'enter') {\n        event.preventDefault();\n      }\n    };\n\n    _this.handleSuggestionsFetchRequested = function () {\n      _this.setState(function (_a) {\n        var suggestions = _a.suggestions,\n            prevSuggestions = _a.prevSuggestions;\n        return {\n          suggestions: prevSuggestions ? prevSuggestions : suggestions\n        };\n      });\n    };\n\n    _this.handleSuggestionsClearRequested = function () {\n      _this.updateFilter('');\n    };\n\n    _this.handleMatchSuggestionOrFilter = function (inputValue) {\n      _this.setState({\n        dirty: true,\n        searchText: inputValue\n      });\n\n      _this.updateFilter(inputValue);\n    };\n\n    _this.handleChange = function (event, _a) {\n      var newValue = _a.newValue,\n          method = _a.method;\n\n      if (['type', 'click', 'escape'].includes(method)) {\n        _this.handleMatchSuggestionOrFilter(newValue);\n      }\n    };\n\n    _this.renderInput = function (inputProps) {\n      var _a = _this.props,\n          helperText = _a.helperText,\n          input = _a.input;\n\n      var autoFocus = inputProps.autoFocus,\n          className = inputProps.className,\n          _b = inputProps.classes,\n          classes = _b === void 0 ? {} : _b,\n          isRequired = inputProps.isRequired,\n          label = inputProps.label,\n          meta = inputProps.meta,\n          onChange = inputProps.onChange,\n          resource = inputProps.resource,\n          source = inputProps.source,\n          value = inputProps.value,\n          ref = inputProps.ref,\n          _c = inputProps.options,\n          InputProps = _c.InputProps,\n          suggestionsContainerProps = _c.suggestionsContainerProps,\n          options = __rest(_c, [\"InputProps\", \"suggestionsContainerProps\"]),\n          other = __rest(inputProps, [\"autoFocus\", \"className\", \"classes\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"resource\", \"source\", \"value\", \"ref\", \"options\"]);\n\n      if (typeof meta === 'undefined') {\n        throw new Error(\"The TextInput component wasn't called within a redux-form <Field>. Did you decorate it and forget to add the addField prop to your component? See https://marmelab.com/react-admin/Inputs.html#writing-your-own-input-component for details.\");\n      }\n\n      var touched = meta.touched,\n          error = meta.error; // We need to store the input reference for our Popper element containg the suggestions\n      // but Autosuggest also needs this reference (it provides the ref prop)\n\n      var storeInputRef = function storeInputRef(input) {\n        _this.inputEl = input;\n\n        _this.updateAnchorEl();\n\n        ref(input);\n      };\n\n      return React.createElement(TextField, __assign({\n        label: React.createElement(FieldTitle, {\n          label: label,\n          source: source,\n          resource: resource,\n          isRequired: isRequired\n        }),\n        value: value,\n        onChange: onChange,\n        autoFocus: autoFocus,\n        margin: \"normal\",\n        className: classnames(classes.root, className),\n        inputRef: storeInputRef,\n        error: !!(touched && error),\n        helperText: touched && error || helperText,\n        name: input.name\n      }, options, {\n        InputProps: __assign({\n          classes: {\n            input: classes.input\n          }\n        }, InputProps, other)\n      }));\n    };\n\n    _this.renderSuggestionsContainer = function (autosuggestOptions) {\n      var _a = autosuggestOptions.containerProps,\n          className = _a.className,\n          containerProps = __rest(_a, [\"className\"]),\n          children = autosuggestOptions.children;\n\n      var _b = _this.props,\n          _c = _b.classes,\n          classes = _c === void 0 ? {} : _c,\n          options = _b.options; // Force the Popper component to reposition the popup only when this.inputEl is moved to another location\n\n      _this.updateAnchorEl();\n\n      return React.createElement(Popper, __assign({\n        className: className,\n        open: Boolean(children),\n        anchorEl: _this.anchorEl,\n        placement: \"bottom-start\"\n      }, options.suggestionsContainerProps), React.createElement(Paper, __assign({\n        square: true,\n        className: classes.suggestionsPaper\n      }, containerProps), children));\n    };\n\n    _this.renderSuggestionComponent = function (_a) {\n      var suggestion = _a.suggestion,\n          query = _a.query,\n          isHighlighted = _a.isHighlighted,\n          props = __rest(_a, [\"suggestion\", \"query\", \"isHighlighted\"]);\n\n      return React.createElement(\"div\", __assign({}, props));\n    };\n\n    _this.renderSuggestion = function (suggestion, _a) {\n      var query = _a.query,\n          isHighlighted = _a.isHighlighted;\n\n      var label = _this.getSuggestionText(suggestion);\n\n      var matches = match(label, query);\n      var parts = parse(label, matches);\n      var _b = _this.props,\n          _c = _b.classes,\n          classes = _c === void 0 ? {} : _c,\n          suggestionComponent = _b.suggestionComponent;\n      return React.createElement(MenuItem, {\n        selected: isHighlighted,\n        component: suggestionComponent || _this.renderSuggestionComponent,\n        suggestion: suggestion,\n        query: query,\n        isHighlighted: isHighlighted\n      }, React.createElement(\"div\", null, parts.map(function (part, index) {\n        return part.highlight ? React.createElement(\"span\", {\n          key: index,\n          className: classes.highlightedSuggestionText\n        }, part.text) : React.createElement(\"strong\", {\n          key: index,\n          className: classes.suggestionText\n        }, part.text);\n      })));\n    };\n\n    _this.handleBlur = function () {\n      var _a = _this.state,\n          dirty = _a.dirty,\n          searchText = _a.searchText,\n          selectedItem = _a.selectedItem;\n      var _b = _this.props,\n          allowEmpty = _b.allowEmpty,\n          input = _b.input;\n\n      if (dirty) {\n        if (searchText === '' && allowEmpty) {\n          input && input.onBlur && input.onBlur(null);\n        } else {\n          input && input.onBlur && input.onBlur(_this.state.inputValue);\n\n          _this.setState({\n            dirty: false,\n            searchText: _this.getSuggestionText(selectedItem),\n            suggestions: _this.props.limitChoicesToValue && selectedItem ? [selectedItem] : _this.props.choices\n          });\n        }\n      } else {\n        input && input.onBlur && input.onBlur(_this.state.inputValue);\n      }\n    };\n\n    _this.handleFocus = function () {\n      var input = _this.props.input;\n      input && input.onFocus && input.onFocus();\n    };\n\n    _this.updateFilter = function (value) {\n      var _a = _this.props,\n          setFilter = _a.setFilter,\n          choices = _a.choices;\n\n      if (_this.previousFilterValue !== value) {\n        if (setFilter) {\n          setFilter(value);\n        } else {\n          _this.setState({\n            suggestions: choices.filter(function (choice) {\n              return _this.getSuggestionText(choice).toLowerCase().includes(value.toLowerCase());\n            })\n          });\n        }\n      }\n\n      _this.previousFilterValue = value;\n    };\n\n    _this.shouldRenderSuggestions = function (val) {\n      var shouldRenderSuggestions = _this.props.shouldRenderSuggestions;\n\n      if (shouldRenderSuggestions !== undefined && typeof shouldRenderSuggestions === 'function') {\n        return shouldRenderSuggestions(val);\n      }\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  AutocompleteInput.prototype.componentWillMount = function () {\n    var selectedItem = this.getSelectedItem(this.props, this.props.input.value);\n    this.setState({\n      selectedItem: selectedItem,\n      inputValue: this.props.input.value,\n      searchText: this.getSuggestionText(selectedItem),\n      suggestions: this.props.limitChoicesToValue && selectedItem ? [selectedItem] : this.props.choices\n    });\n  };\n\n  AutocompleteInput.prototype.componentWillReceiveProps = function (nextProps) {\n    var _this = this;\n\n    var choices = nextProps.choices,\n        input = nextProps.input,\n        limitChoicesToValue = nextProps.limitChoicesToValue;\n\n    if (input.value !== this.state.inputValue) {\n      var selectedItem = this.getSelectedItem(nextProps, input.value);\n      this.setState({\n        selectedItem: selectedItem,\n        inputValue: input.value,\n        searchText: this.getSuggestionText(selectedItem),\n        dirty: false,\n        suggestions: limitChoicesToValue && selectedItem ? [selectedItem] : this.props.choices,\n        prevSuggestions: false\n      }); // Avoid displaying the suggestions again when one just has been selected\n\n      this.ignoreNextChoicesUpdate = true; // Ensure to reset the filter\n\n      this.updateFilter('');\n    } else if (!isEqual(choices, this.props.choices)) {\n      if (this.ignoreNextChoicesUpdate) {\n        this.ignoreNextChoicesUpdate = false;\n        return;\n      }\n\n      var selectedItem_1 = this.getSelectedItem(nextProps, this.state.inputValue);\n      this.setState(function (_a) {\n        var dirty = _a.dirty,\n            searchText = _a.searchText;\n        return {\n          selectedItem: selectedItem_1,\n          searchText: dirty ? searchText : _this.getSuggestionText(selectedItem_1),\n          suggestions: limitChoicesToValue && !dirty && selectedItem_1 ? [selectedItem_1] : choices,\n          prevSuggestions: false\n        };\n      });\n    }\n  };\n\n  AutocompleteInput.prototype.updateAnchorEl = function () {\n    if (!this.inputEl) {\n      return;\n    }\n\n    var inputPosition = this.inputEl.getBoundingClientRect();\n\n    if (!this.anchorEl) {\n      this.anchorEl = {\n        getBoundingClientRect: function getBoundingClientRect() {\n          return inputPosition;\n        }\n      };\n    } else {\n      var anchorPosition = this.anchorEl.getBoundingClientRect();\n\n      if (anchorPosition.x !== inputPosition.x || anchorPosition.y !== inputPosition.y) {\n        this.anchorEl = {\n          getBoundingClientRect: function getBoundingClientRect() {\n            return inputPosition;\n          }\n        };\n      }\n    }\n  };\n\n  AutocompleteInput.prototype.render = function () {\n    var _a = this.props,\n        alwaysRenderSuggestions = _a.alwaysRenderSuggestions,\n        _b = _a.classes,\n        classes = _b === void 0 ? {} : _b,\n        isRequired = _a.isRequired,\n        label = _a.label,\n        meta = _a.meta,\n        resource = _a.resource,\n        source = _a.source,\n        className = _a.className,\n        options = _a.options,\n        rest = __rest(_a, [\"alwaysRenderSuggestions\", \"classes\", \"isRequired\", \"label\", \"meta\", \"resource\", \"source\", \"className\", \"options\"]);\n\n    var _c = this.state,\n        suggestions = _c.suggestions,\n        searchText = _c.searchText;\n    return React.createElement(Autosuggest, __assign({\n      theme: {\n        container: classes.container,\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n        suggestionsList: classes.suggestionsList,\n        suggestion: classes.suggestion\n      },\n      renderInputComponent: this.renderInput,\n      suggestions: suggestions,\n      alwaysRenderSuggestions: alwaysRenderSuggestions,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      renderSuggestionsContainer: this.renderSuggestionsContainer,\n      getSuggestionValue: this.getSuggestionText,\n      renderSuggestion: this.renderSuggestion,\n      shouldRenderSuggestions: this.shouldRenderSuggestions,\n      inputProps: {\n        className: className,\n        classes: classes,\n        isRequired: isRequired,\n        label: label,\n        meta: meta,\n        onChange: this.handleChange,\n        resource: resource,\n        source: source,\n        value: searchText,\n        onBlur: this.handleBlur,\n        onFocus: this.handleFocus,\n        options: options\n      }\n    }, rest));\n  };\n\n  return AutocompleteInput;\n}(React.Component);\n\nexport { AutocompleteInput };\nAutocompleteInput.propTypes = {\n  allowEmpty: PropTypes.bool,\n  alwaysRenderSuggestions: PropTypes.bool,\n  choices: PropTypes.arrayOf(PropTypes.object),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  focusInputOnSuggestionClick: PropTypes.bool,\n  InputProps: PropTypes.object,\n  input: PropTypes.object,\n  isRequired: PropTypes.bool,\n  label: PropTypes.string,\n  limitChoicesToValue: PropTypes.bool,\n  meta: PropTypes.object,\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  optionValue: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  setFilter: PropTypes.func,\n  shouldRenderSuggestions: PropTypes.func,\n  source: PropTypes.string,\n  suggestionComponent: PropTypes.func,\n  translate: PropTypes.func.isRequired,\n  translateChoice: PropTypes.bool.isRequired\n};\nAutocompleteInput.defaultProps = {\n  choices: [],\n  focusInputOnSuggestionClick: false,\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  limitChoicesToValue: false,\n  translateChoice: true\n};\nexport default compose(addField, translate, withStyles(styles))(AutocompleteInput);","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-ui-materialui/esm/input/AutocompleteInput.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","React","PropTypes","get","isEqual","Autosuggest","Paper","Popper","TextField","MenuItem","withStyles","createStyles","parse","match","compose","classnames","addField","translate","FieldTitle","styles","theme","container","flexGrow","position","root","suggestionsContainerOpen","marginBottom","spacing","unit","zIndex","suggestionsPaper","maxHeight","overflowY","suggestion","display","fontFamily","typography","suggestionText","fontWeight","highlightedSuggestionText","suggestionsList","margin","padding","listStyleType","AutocompleteInput","_super","_this","state","dirty","inputValue","searchText","selectedItem","suggestions","ignoreNextChoicesUpdate","inputEl","anchorEl","getSelectedItem","_a","choices","find","choice","getSuggestionValue","props","optionValue","getSuggestionText","optionText","translateChoice","suggestionLabel","_","toString","handleSuggestionSelected","event","method","input","onChange","setState","preventDefault","handleSuggestionsFetchRequested","prevSuggestions","handleSuggestionsClearRequested","updateFilter","handleMatchSuggestionOrFilter","handleChange","newValue","includes","renderInput","inputProps","helperText","autoFocus","className","_b","classes","isRequired","label","meta","resource","source","value","ref","_c","options","InputProps","suggestionsContainerProps","other","Error","touched","error","storeInputRef","updateAnchorEl","createElement","inputRef","name","renderSuggestionsContainer","autosuggestOptions","containerProps","children","open","Boolean","placement","square","renderSuggestionComponent","query","isHighlighted","renderSuggestion","matches","parts","suggestionComponent","selected","component","map","part","index","highlight","key","text","handleBlur","allowEmpty","onBlur","limitChoicesToValue","handleFocus","onFocus","setFilter","previousFilterValue","filter","toLowerCase","shouldRenderSuggestions","val","undefined","componentWillMount","componentWillReceiveProps","nextProps","selectedItem_1","inputPosition","getBoundingClientRect","anchorPosition","x","y","render","alwaysRenderSuggestions","rest","renderInputComponent","onSuggestionSelected","onSuggestionsFetchRequested","onSuggestionsClearRequested","Component","propTypes","bool","arrayOf","object","string","focusInputOnSuggestionClick","oneOfType","func","defaultProps"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport Autosuggest from 'react-autosuggest';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport compose from 'recompose/compose';\nimport classnames from 'classnames';\nimport { addField, translate, FieldTitle } from 'ra-core';\nvar styles = function (theme) {\n    return createStyles({\n        container: {\n            flexGrow: 1,\n            position: 'relative',\n        },\n        root: {},\n        suggestionsContainerOpen: {\n            position: 'absolute',\n            marginBottom: theme.spacing.unit * 3,\n            zIndex: 2,\n        },\n        suggestionsPaper: {\n            maxHeight: '50vh',\n            overflowY: 'auto',\n        },\n        suggestion: {\n            display: 'block',\n            fontFamily: theme.typography.fontFamily,\n        },\n        suggestionText: { fontWeight: 300 },\n        highlightedSuggestionText: { fontWeight: 500 },\n        suggestionsList: {\n            margin: 0,\n            padding: 0,\n            listStyleType: 'none',\n        },\n    });\n};\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <AutoComplete> component\n *\n * @example\n * <AutocompleteInput source=\"author_id\" options={{ fullWidth: true }} />\n */\nvar AutocompleteInput = /** @class */ (function (_super) {\n    __extends(AutocompleteInput, _super);\n    function AutocompleteInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            dirty: false,\n            inputValue: null,\n            searchText: '',\n            selectedItem: null,\n            suggestions: [],\n        };\n        _this.ignoreNextChoicesUpdate = false;\n        _this.inputEl = null;\n        _this.anchorEl = null;\n        _this.getSelectedItem = function (_a, inputValue) {\n            var choices = _a.choices;\n            return choices && inputValue\n                ? choices.find(function (choice) { return _this.getSuggestionValue(choice) === inputValue; })\n                : null;\n        };\n        _this.getSuggestionValue = function (suggestion) { return get(suggestion, _this.props.optionValue); };\n        _this.getSuggestionText = function (suggestion) {\n            if (!suggestion)\n                return '';\n            var _a = _this.props, optionText = _a.optionText, translate = _a.translate, translateChoice = _a.translateChoice;\n            var suggestionLabel = typeof optionText === 'function'\n                ? optionText(suggestion)\n                : get(suggestion, optionText, '');\n            // We explicitly call toString here because AutoSuggest expect a string\n            return translateChoice\n                ? translate(suggestionLabel, { _: suggestionLabel }).toString()\n                : suggestionLabel.toString();\n        };\n        _this.handleSuggestionSelected = function (event, _a) {\n            var suggestion = _a.suggestion, method = _a.method;\n            var input = _this.props.input;\n            var inputValue = _this.getSuggestionValue(suggestion);\n            if (input && input.onChange) {\n                _this.setState({\n                    dirty: false,\n                    inputValue: inputValue,\n                    selectedItem: suggestion,\n                }, function () {\n                    input.onChange(inputValue);\n                });\n            }\n            if (method === 'enter') {\n                event.preventDefault();\n            }\n        };\n        _this.handleSuggestionsFetchRequested = function () {\n            _this.setState(function (_a) {\n                var suggestions = _a.suggestions, prevSuggestions = _a.prevSuggestions;\n                return ({\n                    suggestions: prevSuggestions ? prevSuggestions : suggestions,\n                });\n            });\n        };\n        _this.handleSuggestionsClearRequested = function () {\n            _this.updateFilter('');\n        };\n        _this.handleMatchSuggestionOrFilter = function (inputValue) {\n            _this.setState({\n                dirty: true,\n                searchText: inputValue,\n            });\n            _this.updateFilter(inputValue);\n        };\n        _this.handleChange = function (event, _a) {\n            var newValue = _a.newValue, method = _a.method;\n            if (['type', 'click', 'escape'].includes(method)) {\n                _this.handleMatchSuggestionOrFilter(newValue);\n            }\n        };\n        _this.renderInput = function (inputProps) {\n            var _a = _this.props, helperText = _a.helperText, input = _a.input;\n            var autoFocus = inputProps.autoFocus, className = inputProps.className, _b = inputProps.classes, classes = _b === void 0 ? {} : _b, isRequired = inputProps.isRequired, label = inputProps.label, meta = inputProps.meta, onChange = inputProps.onChange, resource = inputProps.resource, source = inputProps.source, value = inputProps.value, ref = inputProps.ref, _c = inputProps.options, InputProps = _c.InputProps, suggestionsContainerProps = _c.suggestionsContainerProps, options = __rest(_c, [\"InputProps\", \"suggestionsContainerProps\"]), other = __rest(inputProps, [\"autoFocus\", \"className\", \"classes\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"resource\", \"source\", \"value\", \"ref\", \"options\"]);\n            if (typeof meta === 'undefined') {\n                throw new Error(\"The TextInput component wasn't called within a redux-form <Field>. Did you decorate it and forget to add the addField prop to your component? See https://marmelab.com/react-admin/Inputs.html#writing-your-own-input-component for details.\");\n            }\n            var touched = meta.touched, error = meta.error;\n            // We need to store the input reference for our Popper element containg the suggestions\n            // but Autosuggest also needs this reference (it provides the ref prop)\n            var storeInputRef = function (input) {\n                _this.inputEl = input;\n                _this.updateAnchorEl();\n                ref(input);\n            };\n            return (React.createElement(TextField, __assign({ label: React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired }), value: value, onChange: onChange, autoFocus: autoFocus, margin: \"normal\", className: classnames(classes.root, className), inputRef: storeInputRef, error: !!(touched && error), helperText: (touched && error) || helperText, name: input.name }, options, { InputProps: __assign({ classes: {\n                        input: classes.input,\n                    } }, InputProps, other) })));\n        };\n        _this.renderSuggestionsContainer = function (autosuggestOptions) {\n            var _a = autosuggestOptions.containerProps, className = _a.className, containerProps = __rest(_a, [\"className\"]), children = autosuggestOptions.children;\n            var _b = _this.props, _c = _b.classes, classes = _c === void 0 ? {} : _c, options = _b.options;\n            // Force the Popper component to reposition the popup only when this.inputEl is moved to another location\n            _this.updateAnchorEl();\n            return (React.createElement(Popper, __assign({ className: className, open: Boolean(children), anchorEl: _this.anchorEl, placement: \"bottom-start\" }, options.suggestionsContainerProps),\n                React.createElement(Paper, __assign({ square: true, className: classes.suggestionsPaper }, containerProps), children)));\n        };\n        _this.renderSuggestionComponent = function (_a) {\n            var suggestion = _a.suggestion, query = _a.query, isHighlighted = _a.isHighlighted, props = __rest(_a, [\"suggestion\", \"query\", \"isHighlighted\"]);\n            return React.createElement(\"div\", __assign({}, props));\n        };\n        _this.renderSuggestion = function (suggestion, _a) {\n            var query = _a.query, isHighlighted = _a.isHighlighted;\n            var label = _this.getSuggestionText(suggestion);\n            var matches = match(label, query);\n            var parts = parse(label, matches);\n            var _b = _this.props, _c = _b.classes, classes = _c === void 0 ? {} : _c, suggestionComponent = _b.suggestionComponent;\n            return (React.createElement(MenuItem, { selected: isHighlighted, component: suggestionComponent || _this.renderSuggestionComponent, suggestion: suggestion, query: query, isHighlighted: isHighlighted },\n                React.createElement(\"div\", null, parts.map(function (part, index) {\n                    return part.highlight ? (React.createElement(\"span\", { key: index, className: classes.highlightedSuggestionText }, part.text)) : (React.createElement(\"strong\", { key: index, className: classes.suggestionText }, part.text));\n                }))));\n        };\n        _this.handleBlur = function () {\n            var _a = _this.state, dirty = _a.dirty, searchText = _a.searchText, selectedItem = _a.selectedItem;\n            var _b = _this.props, allowEmpty = _b.allowEmpty, input = _b.input;\n            if (dirty) {\n                if (searchText === '' && allowEmpty) {\n                    input && input.onBlur && input.onBlur(null);\n                }\n                else {\n                    input && input.onBlur && input.onBlur(_this.state.inputValue);\n                    _this.setState({\n                        dirty: false,\n                        searchText: _this.getSuggestionText(selectedItem),\n                        suggestions: _this.props.limitChoicesToValue && selectedItem\n                            ? [selectedItem]\n                            : _this.props.choices,\n                    });\n                }\n            }\n            else {\n                input && input.onBlur && input.onBlur(_this.state.inputValue);\n            }\n        };\n        _this.handleFocus = function () {\n            var input = _this.props.input;\n            input && input.onFocus && input.onFocus();\n        };\n        _this.updateFilter = function (value) {\n            var _a = _this.props, setFilter = _a.setFilter, choices = _a.choices;\n            if (_this.previousFilterValue !== value) {\n                if (setFilter) {\n                    setFilter(value);\n                }\n                else {\n                    _this.setState({\n                        suggestions: choices.filter(function (choice) {\n                            return _this.getSuggestionText(choice)\n                                .toLowerCase()\n                                .includes(value.toLowerCase());\n                        }),\n                    });\n                }\n            }\n            _this.previousFilterValue = value;\n        };\n        _this.shouldRenderSuggestions = function (val) {\n            var shouldRenderSuggestions = _this.props.shouldRenderSuggestions;\n            if (shouldRenderSuggestions !== undefined &&\n                typeof shouldRenderSuggestions === 'function') {\n                return shouldRenderSuggestions(val);\n            }\n            return true;\n        };\n        return _this;\n    }\n    AutocompleteInput.prototype.componentWillMount = function () {\n        var selectedItem = this.getSelectedItem(this.props, this.props.input.value);\n        this.setState({\n            selectedItem: selectedItem,\n            inputValue: this.props.input.value,\n            searchText: this.getSuggestionText(selectedItem),\n            suggestions: this.props.limitChoicesToValue && selectedItem\n                ? [selectedItem]\n                : this.props.choices,\n        });\n    };\n    AutocompleteInput.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n        var choices = nextProps.choices, input = nextProps.input, limitChoicesToValue = nextProps.limitChoicesToValue;\n        if (input.value !== this.state.inputValue) {\n            var selectedItem = this.getSelectedItem(nextProps, input.value);\n            this.setState({\n                selectedItem: selectedItem,\n                inputValue: input.value,\n                searchText: this.getSuggestionText(selectedItem),\n                dirty: false,\n                suggestions: limitChoicesToValue && selectedItem\n                    ? [selectedItem]\n                    : this.props.choices,\n                prevSuggestions: false,\n            });\n            // Avoid displaying the suggestions again when one just has been selected\n            this.ignoreNextChoicesUpdate = true;\n            // Ensure to reset the filter\n            this.updateFilter('');\n        }\n        else if (!isEqual(choices, this.props.choices)) {\n            if (this.ignoreNextChoicesUpdate) {\n                this.ignoreNextChoicesUpdate = false;\n                return;\n            }\n            var selectedItem_1 = this.getSelectedItem(nextProps, this.state.inputValue);\n            this.setState(function (_a) {\n                var dirty = _a.dirty, searchText = _a.searchText;\n                return ({\n                    selectedItem: selectedItem_1,\n                    searchText: dirty\n                        ? searchText\n                        : _this.getSuggestionText(selectedItem_1),\n                    suggestions: limitChoicesToValue && !dirty && selectedItem_1\n                        ? [selectedItem_1]\n                        : choices,\n                    prevSuggestions: false,\n                });\n            });\n        }\n    };\n    AutocompleteInput.prototype.updateAnchorEl = function () {\n        if (!this.inputEl) {\n            return;\n        }\n        var inputPosition = this.inputEl.getBoundingClientRect();\n        if (!this.anchorEl) {\n            this.anchorEl = { getBoundingClientRect: function () { return inputPosition; } };\n        }\n        else {\n            var anchorPosition = this.anchorEl.getBoundingClientRect();\n            if (anchorPosition.x !== inputPosition.x ||\n                anchorPosition.y !== inputPosition.y) {\n                this.anchorEl = { getBoundingClientRect: function () { return inputPosition; } };\n            }\n        }\n    };\n    AutocompleteInput.prototype.render = function () {\n        var _a = this.props, alwaysRenderSuggestions = _a.alwaysRenderSuggestions, _b = _a.classes, classes = _b === void 0 ? {} : _b, isRequired = _a.isRequired, label = _a.label, meta = _a.meta, resource = _a.resource, source = _a.source, className = _a.className, options = _a.options, rest = __rest(_a, [\"alwaysRenderSuggestions\", \"classes\", \"isRequired\", \"label\", \"meta\", \"resource\", \"source\", \"className\", \"options\"]);\n        var _c = this.state, suggestions = _c.suggestions, searchText = _c.searchText;\n        return (React.createElement(Autosuggest, __assign({ theme: {\n                container: classes.container,\n                suggestionsContainerOpen: classes.suggestionsContainerOpen,\n                suggestionsList: classes.suggestionsList,\n                suggestion: classes.suggestion,\n            }, renderInputComponent: this.renderInput, suggestions: suggestions, alwaysRenderSuggestions: alwaysRenderSuggestions, onSuggestionSelected: this.handleSuggestionSelected, onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested, onSuggestionsClearRequested: this.handleSuggestionsClearRequested, renderSuggestionsContainer: this.renderSuggestionsContainer, getSuggestionValue: this.getSuggestionText, renderSuggestion: this.renderSuggestion, shouldRenderSuggestions: this.shouldRenderSuggestions, inputProps: {\n                className: className,\n                classes: classes,\n                isRequired: isRequired,\n                label: label,\n                meta: meta,\n                onChange: this.handleChange,\n                resource: resource,\n                source: source,\n                value: searchText,\n                onBlur: this.handleBlur,\n                onFocus: this.handleFocus,\n                options: options,\n            } }, rest)));\n    };\n    return AutocompleteInput;\n}(React.Component));\nexport { AutocompleteInput };\nAutocompleteInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    alwaysRenderSuggestions: PropTypes.bool,\n    choices: PropTypes.arrayOf(PropTypes.object),\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    focusInputOnSuggestionClick: PropTypes.bool,\n    InputProps: PropTypes.object,\n    input: PropTypes.object,\n    isRequired: PropTypes.bool,\n    label: PropTypes.string,\n    limitChoicesToValue: PropTypes.bool,\n    meta: PropTypes.object,\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n        .isRequired,\n    optionValue: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    setFilter: PropTypes.func,\n    shouldRenderSuggestions: PropTypes.func,\n    source: PropTypes.string,\n    suggestionComponent: PropTypes.func,\n    translate: PropTypes.func.isRequired,\n    translateChoice: PropTypes.bool.isRequired,\n};\nAutocompleteInput.defaultProps = {\n    choices: [],\n    focusInputOnSuggestionClick: false,\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    limitChoicesToValue: false,\n    translateChoice: true,\n};\nexport default compose(addField, translate, withStyles(styles))(AutocompleteInput);\n"]},"metadata":{},"sourceType":"module"}