{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport Autosuggest from 'react-autosuggest';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport blue from '@material-ui/core/colors/blue';\nimport compose from 'recompose/compose';\nimport classNames from 'classnames';\nimport { addField, translate, FieldTitle } from 'ra-core';\nimport AutocompleteArrayInputChip from './AutocompleteArrayInputChip';\n\nvar styles = function styles(theme) {\n  return createStyles({\n    container: {\n      flexGrow: 1,\n      position: 'relative'\n    },\n    root: {},\n    suggestionsContainerOpen: {\n      position: 'absolute',\n      marginBottom: theme.spacing.unit * 3,\n      zIndex: 2\n    },\n    suggestionsPaper: {\n      maxHeight: '50vh',\n      overflowY: 'auto'\n    },\n    suggestion: {\n      display: 'block',\n      fontFamily: theme.typography.fontFamily\n    },\n    suggestionText: {\n      fontWeight: 300\n    },\n    highlightedSuggestionText: {\n      fontWeight: 500\n    },\n    suggestionsList: {\n      margin: 0,\n      padding: 0,\n      listStyleType: 'none'\n    },\n    chip: {\n      marginRight: theme.spacing.unit,\n      marginTop: theme.spacing.unit\n    },\n    chipDisabled: {\n      pointerEvents: 'none'\n    },\n    chipFocused: {\n      backgroundColor: blue[300]\n    }\n  });\n};\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <AutoComplete> component\n *\n * @example\n * <AutocompleteArrayInput source=\"author_id\" options={{ fullWidthInput: true }} />\n */\n\n\nvar AutocompleteArrayInput =\n/** @class */\nfunction (_super) {\n  __extends(AutocompleteArrayInput, _super);\n\n  function AutocompleteArrayInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.initialInputValue = [];\n    _this.state = {\n      dirty: false,\n      inputValue: _this.initialInputValue,\n      searchText: '',\n      suggestions: []\n    };\n    _this.inputEl = null;\n    _this.anchorEl = null;\n\n    _this.getInputValue = function (inputValue) {\n      return inputValue === '' ? _this.initialInputValue : inputValue;\n    };\n\n    _this.getSuggestionValue = function (suggestion) {\n      return get(suggestion, _this.props.optionValue);\n    };\n\n    _this.getSuggestionText = function (suggestion) {\n      if (!suggestion) return '';\n      var _a = _this.props,\n          optionText = _a.optionText,\n          translate = _a.translate,\n          translateChoice = _a.translateChoice;\n      var suggestionLabel = typeof optionText === 'function' ? optionText(suggestion) : get(suggestion, optionText); // We explicitly call toString here because AutoSuggest expect a string\n\n      return translateChoice ? translate(suggestionLabel, {\n        _: suggestionLabel\n      }).toString() : suggestionLabel.toString();\n    };\n\n    _this.handleSuggestionSelected = function (event, _a) {\n      var suggestion = _a.suggestion,\n          method = _a.method;\n      var input = _this.props.input;\n      input.onChange((_this.state.inputValue || []).concat([_this.getSuggestionValue(suggestion)]));\n\n      if (method === 'enter') {\n        event.preventDefault();\n      }\n    };\n\n    _this.handleSuggestionsFetchRequested = function () {\n      var _a = _this.props,\n          choices = _a.choices,\n          inputValueMatcher = _a.inputValueMatcher;\n\n      _this.setState(function (_a) {\n        var searchText = _a.searchText;\n        return {\n          suggestions: choices.filter(function (suggestion) {\n            return inputValueMatcher(searchText, suggestion, _this.getSuggestionText);\n          })\n        };\n      });\n    };\n\n    _this.handleSuggestionsClearRequested = function () {\n      _this.updateFilter('');\n    };\n\n    _this.handleMatchSuggestionOrFilter = function (inputValue) {\n      _this.setState({\n        dirty: true,\n        searchText: inputValue\n      });\n\n      _this.updateFilter(inputValue);\n    };\n\n    _this.handleChange = function (event, _a) {\n      var newValue = _a.newValue,\n          method = _a.method;\n\n      if (['type', 'escape'].includes(method)) {\n        _this.handleMatchSuggestionOrFilter(newValue);\n      }\n    };\n\n    _this.renderInput = function (inputProps) {\n      var _a = _this.props,\n          input = _a.input,\n          fullWidth = _a.fullWidth,\n          _b = _a.options,\n          InputProps = _b.InputProps,\n          suggestionsContainerProps = _b.suggestionsContainerProps,\n          options = __rest(_b, [\"InputProps\", \"suggestionsContainerProps\"]);\n\n      var autoFocus = inputProps.autoFocus,\n          className = inputProps.className,\n          classes = inputProps.classes,\n          isRequired = inputProps.isRequired,\n          label = inputProps.label,\n          meta = inputProps.meta,\n          onChange = inputProps.onChange,\n          resource = inputProps.resource,\n          source = inputProps.source,\n          value = inputProps.value,\n          ref = inputProps.ref,\n          other = __rest(inputProps, [\"autoFocus\", \"className\", \"classes\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"resource\", \"source\", \"value\", \"ref\"]);\n\n      if (typeof meta === 'undefined') {\n        throw new Error(\"The TextInput component wasn't called within a redux-form <Field>. Did you decorate it and forget to add the addField prop to your component? See https://marmelab.com/react-admin/Inputs.html#writing-your-own-input-component for details.\");\n      }\n\n      var touched = meta.touched,\n          error = meta.error,\n          _c = meta.helperText,\n          helperText = _c === void 0 ? false : _c; // We need to store the input reference for our Popper element containg the suggestions\n      // but Autosuggest also needs this reference (it provides the ref prop)\n\n      var storeInputRef = function storeInputRef(input) {\n        _this.inputEl = input;\n\n        _this.updateAnchorEl();\n\n        ref(input);\n      };\n\n      var finalOptions = __assign({\n        fullWidth: fullWidth\n      }, options);\n\n      return React.createElement(AutocompleteArrayInputChip, __assign({\n        clearInputValueOnChange: true,\n        onUpdateInput: onChange,\n        onAdd: _this.handleAdd,\n        onDelete: _this.handleDelete,\n        value: _this.getInputValue(input.value),\n        inputRef: storeInputRef,\n        error: !!(touched && error),\n        helperText: touched && error || helperText,\n        chipRenderer: _this.renderChip,\n        label: React.createElement(FieldTitle, {\n          label: label,\n          source: source,\n          resource: resource,\n          isRequired: isRequired\n        })\n      }, other, finalOptions));\n    };\n\n    _this.renderChip = function (_a, key) {\n      var value = _a.value,\n          isFocused = _a.isFocused,\n          isDisabled = _a.isDisabled,\n          handleClick = _a.handleClick,\n          handleDelete = _a.handleDelete;\n\n      var _b;\n\n      var _c = _this.props,\n          _d = _c.classes,\n          classes = _d === void 0 ? {} : _d,\n          choices = _c.choices;\n      var suggestion = choices.find(function (choice) {\n        return _this.getSuggestionValue(choice) === value;\n      });\n      return React.createElement(Chip, {\n        key: key,\n        className: classNames(classes.chip, (_b = {}, _b[classes.chipDisabled] = isDisabled, _b[classes.chipFocused] = isFocused, _b)),\n        onClick: handleClick,\n        onDelete: handleDelete,\n        label: _this.getSuggestionText(suggestion)\n      });\n    };\n\n    _this.handleAdd = function (chip) {\n      var _a = _this.props,\n          choices = _a.choices,\n          input = _a.input,\n          limitChoicesToValue = _a.limitChoicesToValue,\n          inputValueMatcher = _a.inputValueMatcher;\n      var filteredChoices = choices.filter(function (choice) {\n        return inputValueMatcher(chip, choice, _this.getSuggestionText);\n      });\n      var choice = filteredChoices.length === 1 ? filteredChoices[0] : filteredChoices.find(function (c) {\n        return _this.getSuggestionValue(c) === chip;\n      });\n\n      if (choice) {\n        return input.onChange((_this.state.inputValue || []).concat([_this.getSuggestionValue(choice)]));\n      }\n\n      if (limitChoicesToValue) {\n        // Ensure to reset the filter\n        _this.updateFilter('');\n\n        return;\n      }\n\n      input.onChange(_this.state.inputValue.concat([chip]));\n    };\n\n    _this.handleDelete = function (chip) {\n      var input = _this.props.input;\n      input.onChange(_this.state.inputValue.filter(function (value) {\n        return value !== chip;\n      }));\n    };\n\n    _this.renderSuggestionsContainer = function (autosuggestOptions) {\n      var _a = autosuggestOptions.containerProps,\n          className = _a.className,\n          containerProps = __rest(_a, [\"className\"]),\n          children = autosuggestOptions.children;\n\n      var _b = _this.props,\n          _c = _b.classes,\n          classes = _c === void 0 ? {} : _c,\n          options = _b.options; // Force the Popper component to reposition the popup only when this.inputEl is moved to another location\n\n      _this.updateAnchorEl();\n\n      return React.createElement(Popper, __assign({\n        className: className,\n        open: Boolean(children),\n        anchorEl: _this.anchorEl,\n        placement: \"bottom-start\"\n      }, options.suggestionsContainerProps), React.createElement(Paper, __assign({\n        square: true,\n        className: classes.suggestionsPaper\n      }, containerProps), children));\n    };\n\n    _this.renderSuggestionComponent = function (_a) {\n      var suggestion = _a.suggestion,\n          query = _a.query,\n          isHighlighted = _a.isHighlighted,\n          props = __rest(_a, [\"suggestion\", \"query\", \"isHighlighted\"]);\n\n      return React.createElement(\"div\", __assign({}, props));\n    };\n\n    _this.renderSuggestion = function (suggestion, _a) {\n      var query = _a.query,\n          isHighlighted = _a.isHighlighted;\n\n      var label = _this.getSuggestionText(suggestion);\n\n      var matches = match(label, query);\n      var parts = parse(label, matches);\n      var _b = _this.props,\n          _c = _b.classes,\n          classes = _c === void 0 ? {} : _c,\n          suggestionComponent = _b.suggestionComponent;\n      return React.createElement(MenuItem, {\n        selected: isHighlighted,\n        component: suggestionComponent || _this.renderSuggestionComponent,\n        suggestion: suggestion,\n        query: query,\n        isHighlighted: isHighlighted\n      }, React.createElement(\"div\", null, parts.map(function (part, index) {\n        return part.highlight ? React.createElement(\"span\", {\n          key: index,\n          className: classes.highlightedSuggestionText\n        }, part.text) : React.createElement(\"strong\", {\n          key: index,\n          className: classes.suggestionText\n        }, part.text);\n      })));\n    };\n\n    _this.handleFocus = function () {\n      var input = _this.props.input;\n      input && input.onFocus && input.onFocus();\n    };\n\n    _this.updateFilter = function (value) {\n      var _a = _this.props,\n          setFilter = _a.setFilter,\n          choices = _a.choices;\n\n      if (_this.previousFilterValue !== value) {\n        if (setFilter) {\n          setFilter(value);\n        } else {\n          _this.setState({\n            searchText: value,\n            suggestions: choices.filter(function (choice) {\n              return _this.getSuggestionText(choice).toLowerCase().includes(value.toLowerCase());\n            })\n          });\n        }\n      }\n\n      _this.previousFilterValue = value;\n    };\n\n    _this.shouldRenderSuggestions = function (val) {\n      var shouldRenderSuggestions = _this.props.shouldRenderSuggestions;\n\n      if (shouldRenderSuggestions !== undefined && typeof shouldRenderSuggestions === 'function') {\n        return shouldRenderSuggestions(val);\n      }\n\n      return true;\n    };\n\n    return _this;\n  }\n\n  AutocompleteArrayInput.prototype.componentWillMount = function () {\n    this.setState({\n      inputValue: this.getInputValue(this.props.input.value),\n      suggestions: this.props.choices\n    });\n  };\n\n  AutocompleteArrayInput.prototype.componentWillReceiveProps = function (nextProps) {\n    var _this = this;\n\n    var choices = nextProps.choices,\n        input = nextProps.input,\n        inputValueMatcher = nextProps.inputValueMatcher;\n\n    if (!isEqual(this.getInputValue(input.value), this.state.inputValue)) {\n      this.setState({\n        inputValue: this.getInputValue(input.value),\n        dirty: false,\n        suggestions: this.props.choices\n      }); // Ensure to reset the filter\n\n      this.updateFilter('');\n    } else if (!isEqual(choices, this.props.choices)) {\n      this.setState(function (_a) {\n        var searchText = _a.searchText;\n        return {\n          suggestions: choices.filter(function (suggestion) {\n            return inputValueMatcher(searchText, suggestion, _this.getSuggestionText);\n          })\n        };\n      });\n    }\n  };\n\n  AutocompleteArrayInput.prototype.updateAnchorEl = function () {\n    if (!this.inputEl) {\n      return;\n    }\n\n    var inputPosition = this.inputEl.getBoundingClientRect();\n\n    if (!this.anchorEl) {\n      this.anchorEl = {\n        getBoundingClientRect: function getBoundingClientRect() {\n          return inputPosition;\n        }\n      };\n    } else {\n      var anchorPosition = this.anchorEl.getBoundingClientRect();\n\n      if (anchorPosition.x !== inputPosition.x || anchorPosition.y !== inputPosition.y) {\n        this.anchorEl = {\n          getBoundingClientRect: function getBoundingClientRect() {\n            return inputPosition;\n          }\n        };\n      }\n    }\n  };\n\n  AutocompleteArrayInput.prototype.render = function () {\n    var _a = this.props,\n        alwaysRenderSuggestions = _a.alwaysRenderSuggestions,\n        _b = _a.classes,\n        classes = _b === void 0 ? {} : _b,\n        isRequired = _a.isRequired,\n        label = _a.label,\n        meta = _a.meta,\n        resource = _a.resource,\n        source = _a.source,\n        className = _a.className,\n        options = _a.options;\n    var _c = this.state,\n        suggestions = _c.suggestions,\n        searchText = _c.searchText;\n    return React.createElement(Autosuggest, {\n      theme: {\n        container: classes.container,\n        suggestionsContainerOpen: classes.suggestionsContainerOpen,\n        suggestionsList: classes.suggestionsList,\n        suggestion: classes.suggestion\n      },\n      renderInputComponent: this.renderInput,\n      suggestions: suggestions,\n      alwaysRenderSuggestions: alwaysRenderSuggestions,\n      onSuggestionSelected: this.handleSuggestionSelected,\n      onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.handleSuggestionsClearRequested,\n      renderSuggestionsContainer: this.renderSuggestionsContainer,\n      getSuggestionValue: this.getSuggestionText,\n      renderSuggestion: this.renderSuggestion,\n      shouldRenderSuggestions: this.shouldRenderSuggestions,\n      inputProps: {\n        blurBehavior: 'add',\n        className: className,\n        classes: classes,\n        isRequired: isRequired,\n        label: label,\n        meta: meta,\n        onChange: this.handleChange,\n        resource: resource,\n        source: source,\n        value: searchText,\n        onFocus: this.handleFocus,\n        options: options\n      }\n    });\n  };\n\n  return AutocompleteArrayInput;\n}(React.Component);\n\nexport { AutocompleteArrayInput };\nAutocompleteArrayInput.propTypes = {\n  allowEmpty: PropTypes.bool,\n  alwaysRenderSuggestions: PropTypes.bool,\n  choices: PropTypes.arrayOf(PropTypes.object),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  InputProps: PropTypes.object,\n  input: PropTypes.object,\n  inputValueMatcher: PropTypes.func,\n  isRequired: PropTypes.bool,\n  label: PropTypes.string,\n  limitChoicesToValue: PropTypes.bool,\n  meta: PropTypes.object,\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  optionValue: PropTypes.string.isRequired,\n  resource: PropTypes.string,\n  setFilter: PropTypes.func,\n  shouldRenderSuggestions: PropTypes.func,\n  source: PropTypes.string,\n  suggestionComponent: PropTypes.func,\n  translate: PropTypes.func.isRequired,\n  translateChoice: PropTypes.bool.isRequired\n};\nAutocompleteArrayInput.defaultProps = {\n  choices: [],\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  limitChoicesToValue: false,\n  translateChoice: true,\n  inputValueMatcher: function inputValueMatcher(input, suggestion, getOptionText) {\n    return getOptionText(suggestion).toLowerCase().trim().includes(input.toLowerCase().trim());\n  }\n};\nexport default compose(addField, translate, withStyles(styles))(AutocompleteArrayInput);","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-ui-materialui/esm/input/AutocompleteArrayInput.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","React","PropTypes","get","isEqual","Autosuggest","Chip","Paper","Popper","MenuItem","withStyles","createStyles","parse","match","blue","compose","classNames","addField","translate","FieldTitle","AutocompleteArrayInputChip","styles","theme","container","flexGrow","position","root","suggestionsContainerOpen","marginBottom","spacing","unit","zIndex","suggestionsPaper","maxHeight","overflowY","suggestion","display","fontFamily","typography","suggestionText","fontWeight","highlightedSuggestionText","suggestionsList","margin","padding","listStyleType","chip","marginRight","marginTop","chipDisabled","pointerEvents","chipFocused","backgroundColor","AutocompleteArrayInput","_super","_this","initialInputValue","state","dirty","inputValue","searchText","suggestions","inputEl","anchorEl","getInputValue","getSuggestionValue","props","optionValue","getSuggestionText","_a","optionText","translateChoice","suggestionLabel","_","toString","handleSuggestionSelected","event","method","input","onChange","concat","preventDefault","handleSuggestionsFetchRequested","choices","inputValueMatcher","setState","filter","handleSuggestionsClearRequested","updateFilter","handleMatchSuggestionOrFilter","handleChange","newValue","includes","renderInput","inputProps","fullWidth","_b","options","InputProps","suggestionsContainerProps","autoFocus","className","classes","isRequired","label","meta","resource","source","value","ref","other","Error","touched","error","_c","helperText","storeInputRef","updateAnchorEl","finalOptions","createElement","clearInputValueOnChange","onUpdateInput","onAdd","handleAdd","onDelete","handleDelete","inputRef","chipRenderer","renderChip","key","isFocused","isDisabled","handleClick","_d","find","choice","onClick","limitChoicesToValue","filteredChoices","c","renderSuggestionsContainer","autosuggestOptions","containerProps","children","open","Boolean","placement","square","renderSuggestionComponent","query","isHighlighted","renderSuggestion","matches","parts","suggestionComponent","selected","component","map","part","index","highlight","text","handleFocus","onFocus","setFilter","previousFilterValue","toLowerCase","shouldRenderSuggestions","val","undefined","componentWillMount","componentWillReceiveProps","nextProps","inputPosition","getBoundingClientRect","anchorPosition","x","y","render","alwaysRenderSuggestions","renderInputComponent","onSuggestionSelected","onSuggestionsFetchRequested","onSuggestionsClearRequested","blurBehavior","Component","propTypes","allowEmpty","bool","arrayOf","object","string","func","oneOfType","defaultProps","getOptionText","trim"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport Autosuggest from 'react-autosuggest';\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles, createStyles } from '@material-ui/core/styles';\nimport parse from 'autosuggest-highlight/parse';\nimport match from 'autosuggest-highlight/match';\nimport blue from '@material-ui/core/colors/blue';\nimport compose from 'recompose/compose';\nimport classNames from 'classnames';\nimport { addField, translate, FieldTitle } from 'ra-core';\nimport AutocompleteArrayInputChip from './AutocompleteArrayInputChip';\nvar styles = function (theme) {\n    return createStyles({\n        container: {\n            flexGrow: 1,\n            position: 'relative',\n        },\n        root: {},\n        suggestionsContainerOpen: {\n            position: 'absolute',\n            marginBottom: theme.spacing.unit * 3,\n            zIndex: 2,\n        },\n        suggestionsPaper: {\n            maxHeight: '50vh',\n            overflowY: 'auto',\n        },\n        suggestion: {\n            display: 'block',\n            fontFamily: theme.typography.fontFamily,\n        },\n        suggestionText: { fontWeight: 300 },\n        highlightedSuggestionText: { fontWeight: 500 },\n        suggestionsList: {\n            margin: 0,\n            padding: 0,\n            listStyleType: 'none',\n        },\n        chip: {\n            marginRight: theme.spacing.unit,\n            marginTop: theme.spacing.unit,\n        },\n        chipDisabled: {\n            pointerEvents: 'none',\n        },\n        chipFocused: {\n            backgroundColor: blue[300],\n        },\n    });\n};\n/**\n * An Input component for an autocomplete field, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property an the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <AutocompleteArrayInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <AutocompleteArrayInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <AutocompleteArrayInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <AutoComplete> component\n *\n * @example\n * <AutocompleteArrayInput source=\"author_id\" options={{ fullWidthInput: true }} />\n */\nvar AutocompleteArrayInput = /** @class */ (function (_super) {\n    __extends(AutocompleteArrayInput, _super);\n    function AutocompleteArrayInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.initialInputValue = [];\n        _this.state = {\n            dirty: false,\n            inputValue: _this.initialInputValue,\n            searchText: '',\n            suggestions: [],\n        };\n        _this.inputEl = null;\n        _this.anchorEl = null;\n        _this.getInputValue = function (inputValue) {\n            return inputValue === '' ? _this.initialInputValue : inputValue;\n        };\n        _this.getSuggestionValue = function (suggestion) { return get(suggestion, _this.props.optionValue); };\n        _this.getSuggestionText = function (suggestion) {\n            if (!suggestion)\n                return '';\n            var _a = _this.props, optionText = _a.optionText, translate = _a.translate, translateChoice = _a.translateChoice;\n            var suggestionLabel = typeof optionText === 'function'\n                ? optionText(suggestion)\n                : get(suggestion, optionText);\n            // We explicitly call toString here because AutoSuggest expect a string\n            return translateChoice\n                ? translate(suggestionLabel, { _: suggestionLabel }).toString()\n                : suggestionLabel.toString();\n        };\n        _this.handleSuggestionSelected = function (event, _a) {\n            var suggestion = _a.suggestion, method = _a.method;\n            var input = _this.props.input;\n            input.onChange((_this.state.inputValue || []).concat([\n                _this.getSuggestionValue(suggestion),\n            ]));\n            if (method === 'enter') {\n                event.preventDefault();\n            }\n        };\n        _this.handleSuggestionsFetchRequested = function () {\n            var _a = _this.props, choices = _a.choices, inputValueMatcher = _a.inputValueMatcher;\n            _this.setState(function (_a) {\n                var searchText = _a.searchText;\n                return ({\n                    suggestions: choices.filter(function (suggestion) {\n                        return inputValueMatcher(searchText, suggestion, _this.getSuggestionText);\n                    }),\n                });\n            });\n        };\n        _this.handleSuggestionsClearRequested = function () {\n            _this.updateFilter('');\n        };\n        _this.handleMatchSuggestionOrFilter = function (inputValue) {\n            _this.setState({\n                dirty: true,\n                searchText: inputValue,\n            });\n            _this.updateFilter(inputValue);\n        };\n        _this.handleChange = function (event, _a) {\n            var newValue = _a.newValue, method = _a.method;\n            if (['type', 'escape'].includes(method)) {\n                _this.handleMatchSuggestionOrFilter(newValue);\n            }\n        };\n        _this.renderInput = function (inputProps) {\n            var _a = _this.props, input = _a.input, fullWidth = _a.fullWidth, _b = _a.options, InputProps = _b.InputProps, suggestionsContainerProps = _b.suggestionsContainerProps, options = __rest(_b, [\"InputProps\", \"suggestionsContainerProps\"]);\n            var autoFocus = inputProps.autoFocus, className = inputProps.className, classes = inputProps.classes, isRequired = inputProps.isRequired, label = inputProps.label, meta = inputProps.meta, onChange = inputProps.onChange, resource = inputProps.resource, source = inputProps.source, value = inputProps.value, ref = inputProps.ref, other = __rest(inputProps, [\"autoFocus\", \"className\", \"classes\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"resource\", \"source\", \"value\", \"ref\"]);\n            if (typeof meta === 'undefined') {\n                throw new Error(\"The TextInput component wasn't called within a redux-form <Field>. Did you decorate it and forget to add the addField prop to your component? See https://marmelab.com/react-admin/Inputs.html#writing-your-own-input-component for details.\");\n            }\n            var touched = meta.touched, error = meta.error, _c = meta.helperText, helperText = _c === void 0 ? false : _c;\n            // We need to store the input reference for our Popper element containg the suggestions\n            // but Autosuggest also needs this reference (it provides the ref prop)\n            var storeInputRef = function (input) {\n                _this.inputEl = input;\n                _this.updateAnchorEl();\n                ref(input);\n            };\n            var finalOptions = __assign({ fullWidth: fullWidth }, options);\n            return (React.createElement(AutocompleteArrayInputChip, __assign({ clearInputValueOnChange: true, onUpdateInput: onChange, onAdd: _this.handleAdd, onDelete: _this.handleDelete, value: _this.getInputValue(input.value), inputRef: storeInputRef, error: !!(touched && error), helperText: (touched && error) || helperText, chipRenderer: _this.renderChip, label: React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired }) }, other, finalOptions)));\n        };\n        _this.renderChip = function (_a, key) {\n            var value = _a.value, isFocused = _a.isFocused, isDisabled = _a.isDisabled, handleClick = _a.handleClick, handleDelete = _a.handleDelete;\n            var _b;\n            var _c = _this.props, _d = _c.classes, classes = _d === void 0 ? {} : _d, choices = _c.choices;\n            var suggestion = choices.find(function (choice) { return _this.getSuggestionValue(choice) === value; });\n            return (React.createElement(Chip, { key: key, className: classNames(classes.chip, (_b = {},\n                    _b[classes.chipDisabled] = isDisabled,\n                    _b[classes.chipFocused] = isFocused,\n                    _b)), onClick: handleClick, onDelete: handleDelete, label: _this.getSuggestionText(suggestion) }));\n        };\n        _this.handleAdd = function (chip) {\n            var _a = _this.props, choices = _a.choices, input = _a.input, limitChoicesToValue = _a.limitChoicesToValue, inputValueMatcher = _a.inputValueMatcher;\n            var filteredChoices = choices.filter(function (choice) {\n                return inputValueMatcher(chip, choice, _this.getSuggestionText);\n            });\n            var choice = filteredChoices.length === 1\n                ? filteredChoices[0]\n                : filteredChoices.find(function (c) { return _this.getSuggestionValue(c) === chip; });\n            if (choice) {\n                return input.onChange((_this.state.inputValue || []).concat([\n                    _this.getSuggestionValue(choice),\n                ]));\n            }\n            if (limitChoicesToValue) {\n                // Ensure to reset the filter\n                _this.updateFilter('');\n                return;\n            }\n            input.onChange(_this.state.inputValue.concat([chip]));\n        };\n        _this.handleDelete = function (chip) {\n            var input = _this.props.input;\n            input.onChange(_this.state.inputValue.filter(function (value) { return value !== chip; }));\n        };\n        _this.renderSuggestionsContainer = function (autosuggestOptions) {\n            var _a = autosuggestOptions.containerProps, className = _a.className, containerProps = __rest(_a, [\"className\"]), children = autosuggestOptions.children;\n            var _b = _this.props, _c = _b.classes, classes = _c === void 0 ? {} : _c, options = _b.options;\n            // Force the Popper component to reposition the popup only when this.inputEl is moved to another location\n            _this.updateAnchorEl();\n            return (React.createElement(Popper, __assign({ className: className, open: Boolean(children), anchorEl: _this.anchorEl, placement: \"bottom-start\" }, options.suggestionsContainerProps),\n                React.createElement(Paper, __assign({ square: true, className: classes.suggestionsPaper }, containerProps), children)));\n        };\n        _this.renderSuggestionComponent = function (_a) {\n            var suggestion = _a.suggestion, query = _a.query, isHighlighted = _a.isHighlighted, props = __rest(_a, [\"suggestion\", \"query\", \"isHighlighted\"]);\n            return React.createElement(\"div\", __assign({}, props));\n        };\n        _this.renderSuggestion = function (suggestion, _a) {\n            var query = _a.query, isHighlighted = _a.isHighlighted;\n            var label = _this.getSuggestionText(suggestion);\n            var matches = match(label, query);\n            var parts = parse(label, matches);\n            var _b = _this.props, _c = _b.classes, classes = _c === void 0 ? {} : _c, suggestionComponent = _b.suggestionComponent;\n            return (React.createElement(MenuItem, { selected: isHighlighted, component: suggestionComponent || _this.renderSuggestionComponent, suggestion: suggestion, query: query, isHighlighted: isHighlighted },\n                React.createElement(\"div\", null, parts.map(function (part, index) {\n                    return part.highlight ? (React.createElement(\"span\", { key: index, className: classes.highlightedSuggestionText }, part.text)) : (React.createElement(\"strong\", { key: index, className: classes.suggestionText }, part.text));\n                }))));\n        };\n        _this.handleFocus = function () {\n            var input = _this.props.input;\n            input && input.onFocus && input.onFocus();\n        };\n        _this.updateFilter = function (value) {\n            var _a = _this.props, setFilter = _a.setFilter, choices = _a.choices;\n            if (_this.previousFilterValue !== value) {\n                if (setFilter) {\n                    setFilter(value);\n                }\n                else {\n                    _this.setState({\n                        searchText: value,\n                        suggestions: choices.filter(function (choice) {\n                            return _this.getSuggestionText(choice)\n                                .toLowerCase()\n                                .includes(value.toLowerCase());\n                        }),\n                    });\n                }\n            }\n            _this.previousFilterValue = value;\n        };\n        _this.shouldRenderSuggestions = function (val) {\n            var shouldRenderSuggestions = _this.props.shouldRenderSuggestions;\n            if (shouldRenderSuggestions !== undefined &&\n                typeof shouldRenderSuggestions === 'function') {\n                return shouldRenderSuggestions(val);\n            }\n            return true;\n        };\n        return _this;\n    }\n    AutocompleteArrayInput.prototype.componentWillMount = function () {\n        this.setState({\n            inputValue: this.getInputValue(this.props.input.value),\n            suggestions: this.props.choices,\n        });\n    };\n    AutocompleteArrayInput.prototype.componentWillReceiveProps = function (nextProps) {\n        var _this = this;\n        var choices = nextProps.choices, input = nextProps.input, inputValueMatcher = nextProps.inputValueMatcher;\n        if (!isEqual(this.getInputValue(input.value), this.state.inputValue)) {\n            this.setState({\n                inputValue: this.getInputValue(input.value),\n                dirty: false,\n                suggestions: this.props.choices,\n            });\n            // Ensure to reset the filter\n            this.updateFilter('');\n        }\n        else if (!isEqual(choices, this.props.choices)) {\n            this.setState(function (_a) {\n                var searchText = _a.searchText;\n                return ({\n                    suggestions: choices.filter(function (suggestion) {\n                        return inputValueMatcher(searchText, suggestion, _this.getSuggestionText);\n                    }),\n                });\n            });\n        }\n    };\n    AutocompleteArrayInput.prototype.updateAnchorEl = function () {\n        if (!this.inputEl) {\n            return;\n        }\n        var inputPosition = this.inputEl.getBoundingClientRect();\n        if (!this.anchorEl) {\n            this.anchorEl = { getBoundingClientRect: function () { return inputPosition; } };\n        }\n        else {\n            var anchorPosition = this.anchorEl.getBoundingClientRect();\n            if (anchorPosition.x !== inputPosition.x ||\n                anchorPosition.y !== inputPosition.y) {\n                this.anchorEl = { getBoundingClientRect: function () { return inputPosition; } };\n            }\n        }\n    };\n    AutocompleteArrayInput.prototype.render = function () {\n        var _a = this.props, alwaysRenderSuggestions = _a.alwaysRenderSuggestions, _b = _a.classes, classes = _b === void 0 ? {} : _b, isRequired = _a.isRequired, label = _a.label, meta = _a.meta, resource = _a.resource, source = _a.source, className = _a.className, options = _a.options;\n        var _c = this.state, suggestions = _c.suggestions, searchText = _c.searchText;\n        return (React.createElement(Autosuggest, { theme: {\n                container: classes.container,\n                suggestionsContainerOpen: classes.suggestionsContainerOpen,\n                suggestionsList: classes.suggestionsList,\n                suggestion: classes.suggestion,\n            }, renderInputComponent: this.renderInput, suggestions: suggestions, alwaysRenderSuggestions: alwaysRenderSuggestions, onSuggestionSelected: this.handleSuggestionSelected, onSuggestionsFetchRequested: this.handleSuggestionsFetchRequested, onSuggestionsClearRequested: this.handleSuggestionsClearRequested, renderSuggestionsContainer: this.renderSuggestionsContainer, getSuggestionValue: this.getSuggestionText, renderSuggestion: this.renderSuggestion, shouldRenderSuggestions: this.shouldRenderSuggestions, inputProps: {\n                blurBehavior: 'add',\n                className: className,\n                classes: classes,\n                isRequired: isRequired,\n                label: label,\n                meta: meta,\n                onChange: this.handleChange,\n                resource: resource,\n                source: source,\n                value: searchText,\n                onFocus: this.handleFocus,\n                options: options,\n            } }));\n    };\n    return AutocompleteArrayInput;\n}(React.Component));\nexport { AutocompleteArrayInput };\nAutocompleteArrayInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    alwaysRenderSuggestions: PropTypes.bool,\n    choices: PropTypes.arrayOf(PropTypes.object),\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    InputProps: PropTypes.object,\n    input: PropTypes.object,\n    inputValueMatcher: PropTypes.func,\n    isRequired: PropTypes.bool,\n    label: PropTypes.string,\n    limitChoicesToValue: PropTypes.bool,\n    meta: PropTypes.object,\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n        .isRequired,\n    optionValue: PropTypes.string.isRequired,\n    resource: PropTypes.string,\n    setFilter: PropTypes.func,\n    shouldRenderSuggestions: PropTypes.func,\n    source: PropTypes.string,\n    suggestionComponent: PropTypes.func,\n    translate: PropTypes.func.isRequired,\n    translateChoice: PropTypes.bool.isRequired,\n};\nAutocompleteArrayInput.defaultProps = {\n    choices: [],\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    limitChoicesToValue: false,\n    translateChoice: true,\n    inputValueMatcher: function (input, suggestion, getOptionText) {\n        return getOptionText(suggestion)\n            .toLowerCase()\n            .trim()\n            .includes(input.toLowerCase().trim());\n    },\n};\nexport default compose(addField, translate, withStyles(styles))(AutocompleteArrayInput);\n"]},"metadata":{},"sourceType":"module"}