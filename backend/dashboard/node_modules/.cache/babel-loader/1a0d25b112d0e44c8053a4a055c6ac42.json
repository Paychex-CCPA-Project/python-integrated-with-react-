{"ast":null,"code":"import { combineReducers } from 'redux';\nimport resources, { getResources as resourceGetResources, getReferenceResource as resourceGetReferenceResource } from './resource';\nimport loading from './loading';\nimport notifications from './notifications';\nimport record from './record';\nimport references, { getPossibleReferenceValues as referencesGetPossibleReferenceValues } from './references';\nimport saving from './saving';\nimport ui from './ui';\nimport auth, { isLoggedIn as authIsLoggedIn } from './auth';\nexport default combineReducers({\n  resources: resources,\n  loading: loading,\n  notifications: notifications,\n  record: record,\n  references: references,\n  saving: saving,\n  ui: ui,\n  auth: auth\n});\nexport var getPossibleReferenceValues = function getPossibleReferenceValues(state, props) {\n  return referencesGetPossibleReferenceValues(state.references, props);\n};\nexport var getResources = function getResources(state) {\n  return resourceGetResources(state.resources);\n};\nexport var getReferenceResource = function getReferenceResource(state, props) {\n  return resourceGetReferenceResource(state.resources, props);\n};\nexport var isLoggedIn = function isLoggedIn(state) {\n  return authIsLoggedIn(state.auth);\n};\nexport { getPossibleReferences } from './references';","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/reducer/admin/index.js"],"names":["combineReducers","resources","getResources","resourceGetResources","getReferenceResource","resourceGetReferenceResource","loading","notifications","record","references","getPossibleReferenceValues","referencesGetPossibleReferenceValues","saving","ui","auth","isLoggedIn","authIsLoggedIn","state","props","getPossibleReferences"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,SAAP,IAAoBC,YAAY,IAAIC,oBAApC,EAA0DC,oBAAoB,IAAIC,4BAAlF,QAAuH,YAAvH;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,IAAqBC,0BAA0B,IAAIC,oCAAnD,QAAgG,cAAhG;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,IAAP,IAAeC,UAAU,IAAIC,cAA7B,QAAmD,QAAnD;AACA,eAAehB,eAAe,CAAC;AAC3BC,EAAAA,SAAS,EAAEA,SADgB;AAE3BK,EAAAA,OAAO,EAAEA,OAFkB;AAG3BC,EAAAA,aAAa,EAAEA,aAHY;AAI3BC,EAAAA,MAAM,EAAEA,MAJmB;AAK3BC,EAAAA,UAAU,EAAEA,UALe;AAM3BG,EAAAA,MAAM,EAAEA,MANmB;AAO3BC,EAAAA,EAAE,EAAEA,EAPuB;AAQ3BC,EAAAA,IAAI,EAAEA;AARqB,CAAD,CAA9B;AAUA,OAAO,IAAIJ,0BAA0B,GAAG,SAA7BA,0BAA6B,CAAUO,KAAV,EAAiBC,KAAjB,EAAwB;AAC5D,SAAOP,oCAAoC,CAACM,KAAK,CAACR,UAAP,EAAmBS,KAAnB,CAA3C;AACH,CAFM;AAGP,OAAO,IAAIhB,YAAY,GAAG,SAAfA,YAAe,CAAUe,KAAV,EAAiB;AAAE,SAAOd,oBAAoB,CAACc,KAAK,CAAChB,SAAP,CAA3B;AAA+C,CAArF;AACP,OAAO,IAAIG,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAUa,KAAV,EAAiBC,KAAjB,EAAwB;AACtD,SAAOb,4BAA4B,CAACY,KAAK,CAAChB,SAAP,EAAkBiB,KAAlB,CAAnC;AACH,CAFM;AAGP,OAAO,IAAIH,UAAU,GAAG,SAAbA,UAAa,CAAUE,KAAV,EAAiB;AAAE,SAAOD,cAAc,CAACC,KAAK,CAACH,IAAP,CAArB;AAAoC,CAAxE;AACP,SAASK,qBAAT,QAAsC,cAAtC","sourcesContent":["import { combineReducers } from 'redux';\nimport resources, { getResources as resourceGetResources, getReferenceResource as resourceGetReferenceResource, } from './resource';\nimport loading from './loading';\nimport notifications from './notifications';\nimport record from './record';\nimport references, { getPossibleReferenceValues as referencesGetPossibleReferenceValues, } from './references';\nimport saving from './saving';\nimport ui from './ui';\nimport auth, { isLoggedIn as authIsLoggedIn } from './auth';\nexport default combineReducers({\n    resources: resources,\n    loading: loading,\n    notifications: notifications,\n    record: record,\n    references: references,\n    saving: saving,\n    ui: ui,\n    auth: auth,\n});\nexport var getPossibleReferenceValues = function (state, props) {\n    return referencesGetPossibleReferenceValues(state.references, props);\n};\nexport var getResources = function (state) { return resourceGetResources(state.resources); };\nexport var getReferenceResource = function (state, props) {\n    return resourceGetReferenceResource(state.resources, props);\n};\nexport var isLoggedIn = function (state) { return authIsLoggedIn(state.auth); };\nexport { getPossibleReferences } from './references';\n"]},"metadata":{},"sourceType":"module"}