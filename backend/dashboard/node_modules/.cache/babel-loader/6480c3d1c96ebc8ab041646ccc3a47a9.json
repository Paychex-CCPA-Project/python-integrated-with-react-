{"ast":null,"code":"import { SET_LIST_SELECTED_IDS, TOGGLE_LIST_ITEM, CRUD_DELETE_SUCCESS } from '../../../../actions';\nimport { DELETE, DELETE_MANY } from '../../../../dataFetchActions';\nvar initialState = [];\n\nvar selectedIdsReducer = function selectedIdsReducer(previousState, action) {\n  if (previousState === void 0) {\n    previousState = initialState;\n  }\n\n  if (action.type === SET_LIST_SELECTED_IDS) {\n    return action.payload;\n  }\n\n  if (action.type === TOGGLE_LIST_ITEM) {\n    var index = previousState.indexOf(action.payload);\n\n    if (index > -1) {\n      return previousState.slice(0, index).concat(previousState.slice(index + 1));\n    } else {\n      return previousState.concat([action.payload]);\n    }\n  }\n\n  if (action.type === CRUD_DELETE_SUCCESS) {\n    var index = previousState.indexOf(action.payload.data.id);\n\n    if (index > -1) {\n      return previousState.slice(0, index).concat(previousState.slice(index + 1));\n    }\n  }\n\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === DELETE) {\n      var index = previousState.indexOf(action.payload.id);\n\n      if (index === -1) {\n        return previousState;\n      }\n\n      return previousState.slice(0, index).concat(previousState.slice(index + 1));\n    }\n\n    if (action.meta.fetch === DELETE_MANY) {\n      return previousState.filter(function (id) {\n        return !action.payload.ids.includes(id);\n      });\n    }\n  }\n\n  return action.meta && action.meta.unselectAll ? initialState : previousState;\n};\n\nexport default selectedIdsReducer;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/reducer/admin/resource/list/selectedIds.js"],"names":["SET_LIST_SELECTED_IDS","TOGGLE_LIST_ITEM","CRUD_DELETE_SUCCESS","DELETE","DELETE_MANY","initialState","selectedIdsReducer","previousState","action","type","payload","index","indexOf","slice","concat","data","id","meta","optimistic","fetch","filter","ids","includes","unselectAll"],"mappings":"AAAA,SAASA,qBAAT,EAAgCC,gBAAhC,EAAkDC,mBAAlD,QAA8E,qBAA9E;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,8BAApC;AACA,IAAIC,YAAY,GAAG,EAAnB;;AACA,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAUC,aAAV,EAAyBC,MAAzB,EAAiC;AACtD,MAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAGF,YAAhB;AAA+B;;AAC/D,MAAIG,MAAM,CAACC,IAAP,KAAgBT,qBAApB,EAA2C;AACvC,WAAOQ,MAAM,CAACE,OAAd;AACH;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgBR,gBAApB,EAAsC;AAClC,QAAIU,KAAK,GAAGJ,aAAa,CAACK,OAAd,CAAsBJ,MAAM,CAACE,OAA7B,CAAZ;;AACA,QAAIC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,aAAOJ,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAuBF,KAAvB,EAA8BG,MAA9B,CAAqCP,aAAa,CAACM,KAAd,CAAoBF,KAAK,GAAG,CAA5B,CAArC,CAAP;AACH,KAFD,MAGK;AACD,aAAOJ,aAAa,CAACO,MAAd,CAAqB,CAACN,MAAM,CAACE,OAAR,CAArB,CAAP;AACH;AACJ;;AACD,MAAIF,MAAM,CAACC,IAAP,KAAgBP,mBAApB,EAAyC;AACrC,QAAIS,KAAK,GAAGJ,aAAa,CAACK,OAAd,CAAsBJ,MAAM,CAACE,OAAP,CAAeK,IAAf,CAAoBC,EAA1C,CAAZ;;AACA,QAAIL,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ,aAAOJ,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAuBF,KAAvB,EAA8BG,MAA9B,CAAqCP,aAAa,CAACM,KAAd,CAAoBF,KAAK,GAAG,CAA5B,CAArC,CAAP;AACH;AACJ;;AACD,MAAIH,MAAM,CAACS,IAAP,IAAeT,MAAM,CAACS,IAAP,CAAYC,UAA/B,EAA2C;AACvC,QAAIV,MAAM,CAACS,IAAP,CAAYE,KAAZ,KAAsBhB,MAA1B,EAAkC;AAC9B,UAAIQ,KAAK,GAAGJ,aAAa,CAACK,OAAd,CAAsBJ,MAAM,CAACE,OAAP,CAAeM,EAArC,CAAZ;;AACA,UAAIL,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,eAAOJ,aAAP;AACH;;AACD,aAAOA,aAAa,CAACM,KAAd,CAAoB,CAApB,EAAuBF,KAAvB,EAA8BG,MAA9B,CAAqCP,aAAa,CAACM,KAAd,CAAoBF,KAAK,GAAG,CAA5B,CAArC,CAAP;AACH;;AACD,QAAIH,MAAM,CAACS,IAAP,CAAYE,KAAZ,KAAsBf,WAA1B,EAAuC;AACnC,aAAOG,aAAa,CAACa,MAAd,CAAqB,UAAUJ,EAAV,EAAc;AAAE,eAAO,CAACR,MAAM,CAACE,OAAP,CAAeW,GAAf,CAAmBC,QAAnB,CAA4BN,EAA5B,CAAR;AAA0C,OAA/E,CAAP;AACH;AACJ;;AACD,SAAOR,MAAM,CAACS,IAAP,IAAeT,MAAM,CAACS,IAAP,CAAYM,WAA3B,GACDlB,YADC,GAEDE,aAFN;AAGH,CAnCD;;AAoCA,eAAeD,kBAAf","sourcesContent":["import { SET_LIST_SELECTED_IDS, TOGGLE_LIST_ITEM, CRUD_DELETE_SUCCESS, } from '../../../../actions';\nimport { DELETE, DELETE_MANY } from '../../../../dataFetchActions';\nvar initialState = [];\nvar selectedIdsReducer = function (previousState, action) {\n    if (previousState === void 0) { previousState = initialState; }\n    if (action.type === SET_LIST_SELECTED_IDS) {\n        return action.payload;\n    }\n    if (action.type === TOGGLE_LIST_ITEM) {\n        var index = previousState.indexOf(action.payload);\n        if (index > -1) {\n            return previousState.slice(0, index).concat(previousState.slice(index + 1));\n        }\n        else {\n            return previousState.concat([action.payload]);\n        }\n    }\n    if (action.type === CRUD_DELETE_SUCCESS) {\n        var index = previousState.indexOf(action.payload.data.id);\n        if (index > -1) {\n            return previousState.slice(0, index).concat(previousState.slice(index + 1));\n        }\n    }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === DELETE) {\n            var index = previousState.indexOf(action.payload.id);\n            if (index === -1) {\n                return previousState;\n            }\n            return previousState.slice(0, index).concat(previousState.slice(index + 1));\n        }\n        if (action.meta.fetch === DELETE_MANY) {\n            return previousState.filter(function (id) { return !action.payload.ids.includes(id); });\n        }\n    }\n    return action.meta && action.meta.unselectAll\n        ? initialState\n        : previousState;\n};\nexport default selectedIdsReducer;\n"]},"metadata":{},"sourceType":"module"}