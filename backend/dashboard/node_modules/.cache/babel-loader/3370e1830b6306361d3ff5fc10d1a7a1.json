{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { crudGetMany, crudGetMatching } from './dataActions';\nexport var CRUD_GET_MANY_ACCUMULATE = 'RA/CRUD_GET_MANY_ACCUMULATE';\nexport var crudGetManyAccumulate = function crudGetManyAccumulate(resource, ids) {\n  return {\n    type: CRUD_GET_MANY_ACCUMULATE,\n    payload: {\n      resource: resource,\n      ids: ids\n    },\n    meta: {\n      accumulate: crudGetMany\n    }\n  };\n};\nexport var CRUD_GET_MATCHING_ACCUMULATE = 'RA/CRUD_GET_MATCHING_ACCUMULATE';\nexport var crudGetMatchingAccumulate = function crudGetMatchingAccumulate(reference, relatedTo, pagination, sort, filter) {\n  var action = crudGetMatching(reference, relatedTo, pagination, sort, filter);\n  return {\n    type: CRUD_GET_MATCHING_ACCUMULATE,\n    meta: {\n      accumulate: function accumulate() {\n        return action;\n      },\n      accumulateValues: function accumulateValues() {\n        return true;\n      },\n      accumulateKey: JSON.stringify(__assign({\n        resource: reference,\n        relatedTo: relatedTo\n      }, action.payload))\n    }\n  };\n};","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-core/esm/actions/accumulateActions.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","crudGetMany","crudGetMatching","CRUD_GET_MANY_ACCUMULATE","crudGetManyAccumulate","resource","ids","type","payload","meta","accumulate","CRUD_GET_MATCHING_ACCUMULATE","crudGetMatchingAccumulate","reference","relatedTo","pagination","sort","filter","action","accumulateValues","accumulateKey","JSON","stringify"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,WAAT,EAAsBC,eAAtB,QAA6C,eAA7C;AACA,OAAO,IAAIC,wBAAwB,GAAG,6BAA/B;AACP,OAAO,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAUC,QAAV,EAAoBC,GAApB,EAAyB;AAAE,SAAQ;AAClEC,IAAAA,IAAI,EAAEJ,wBAD4D;AAElEK,IAAAA,OAAO,EAAE;AAAEH,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,MAAAA,GAAG,EAAEA;AAA3B,KAFyD;AAGlEG,IAAAA,IAAI,EAAE;AAAEC,MAAAA,UAAU,EAAET;AAAd;AAH4D,GAAR;AAIzD,CAJE;AAKP,OAAO,IAAIU,4BAA4B,GAAG,iCAAnC;AACP,OAAO,IAAIC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAUC,SAAV,EAAqBC,SAArB,EAAgCC,UAAhC,EAA4CC,IAA5C,EAAkDC,MAAlD,EAA0D;AAC7F,MAAIC,MAAM,GAAGhB,eAAe,CAACW,SAAD,EAAYC,SAAZ,EAAuBC,UAAvB,EAAmCC,IAAnC,EAAyCC,MAAzC,CAA5B;AACA,SAAO;AACHV,IAAAA,IAAI,EAAEI,4BADH;AAEHF,IAAAA,IAAI,EAAE;AACFC,MAAAA,UAAU,EAAE,sBAAY;AAAE,eAAOQ,MAAP;AAAgB,OADxC;AAEFC,MAAAA,gBAAgB,EAAE,4BAAY;AAAE,eAAO,IAAP;AAAc,OAF5C;AAGFC,MAAAA,aAAa,EAAEC,IAAI,CAACC,SAAL,CAAenC,QAAQ,CAAC;AAAEkB,QAAAA,QAAQ,EAAEQ,SAAZ;AAAuBC,QAAAA,SAAS,EAAEA;AAAlC,OAAD,EAAgDI,MAAM,CAACV,OAAvD,CAAvB;AAHb;AAFH,GAAP;AAQH,CAVM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { crudGetMany, crudGetMatching } from './dataActions';\nexport var CRUD_GET_MANY_ACCUMULATE = 'RA/CRUD_GET_MANY_ACCUMULATE';\nexport var crudGetManyAccumulate = function (resource, ids) { return ({\n    type: CRUD_GET_MANY_ACCUMULATE,\n    payload: { resource: resource, ids: ids },\n    meta: { accumulate: crudGetMany },\n}); };\nexport var CRUD_GET_MATCHING_ACCUMULATE = 'RA/CRUD_GET_MATCHING_ACCUMULATE';\nexport var crudGetMatchingAccumulate = function (reference, relatedTo, pagination, sort, filter) {\n    var action = crudGetMatching(reference, relatedTo, pagination, sort, filter);\n    return {\n        type: CRUD_GET_MATCHING_ACCUMULATE,\n        meta: {\n            accumulate: function () { return action; },\n            accumulateValues: function () { return true; },\n            accumulateKey: JSON.stringify(__assign({ resource: reference, relatedTo: relatedTo }, action.payload)),\n        },\n    };\n};\n"]},"metadata":{},"sourceType":"module"}