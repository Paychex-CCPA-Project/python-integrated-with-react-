{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport get from 'lodash/get';\nimport { crudGetManyAccumulate as crudGetManyAccumulateAction } from '../../actions';\nimport { getReferencesByIds } from '../../reducer/admin/references/oneToMany';\n/**\n * A container component that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * You must define the fields to be passed to the iterator component as children.\n *\n * @example Display all the products of the current order as datagrid\n * // order = {\n * //   id: 123,\n * //   product_ids: [456, 457, 458],\n * // }\n * <ReferenceArrayField label=\"Products\" reference=\"products\" source=\"product_ids\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"description\" />\n *         <NumberField source=\"price\" options={{ style: 'currency', currency: 'USD' }} />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceArrayField>\n *\n * @example Display all the categories of the current product as a list of chips\n * // product = {\n * //   id: 456,\n * //   category_ids: [11, 22, 33],\n * // }\n * <ReferenceArrayField label=\"Categories\" reference=\"categories\" source=\"category_ids\">\n *     <SingleFieldList>\n *         <ChipField source=\"name\" />\n *     </SingleFieldList>\n * </ReferenceArrayField>\n *\n */\n\nvar UnconnectedReferenceArrayFieldController =\n/** @class */\nfunction (_super) {\n  __extends(UnconnectedReferenceArrayFieldController, _super);\n\n  function UnconnectedReferenceArrayFieldController() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  UnconnectedReferenceArrayFieldController.prototype.componentDidMount = function () {\n    this.fetchReferences();\n  };\n\n  UnconnectedReferenceArrayFieldController.prototype.componentWillReceiveProps = function (nextProps) {\n    if ((this.props.record || {\n      id: undefined\n    }).id !== (nextProps.record || {}).id) {\n      this.fetchReferences(nextProps);\n    }\n  };\n\n  UnconnectedReferenceArrayFieldController.prototype.fetchReferences = function (_a) {\n    var _b = _a === void 0 ? this.props : _a,\n        crudGetManyAccumulate = _b.crudGetManyAccumulate,\n        reference = _b.reference,\n        ids = _b.ids;\n\n    crudGetManyAccumulate(reference, ids);\n  };\n\n  UnconnectedReferenceArrayFieldController.prototype.render = function () {\n    var _a = this.props,\n        resource = _a.resource,\n        reference = _a.reference,\n        data = _a.data,\n        ids = _a.ids,\n        children = _a.children,\n        basePath = _a.basePath;\n    var referenceBasePath = basePath.replace(resource, reference); // FIXME obviously very weak\n\n    return children({\n      loadedOnce: data != undefined,\n      ids: ids,\n      data: data,\n      referenceBasePath: referenceBasePath,\n      currentSort: {\n        field: 'id',\n        order: 'ASC'\n      }\n    });\n  };\n\n  return UnconnectedReferenceArrayFieldController;\n}(Component);\n\nexport { UnconnectedReferenceArrayFieldController };\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var record = props.record,\n      source = props.source,\n      reference = props.reference;\n  var ids = get(record, source) || [];\n  return {\n    data: getReferencesByIds(state, reference, ids),\n    ids: ids\n  };\n};\n\nvar ReferenceArrayFieldController = connect(mapStateToProps, {\n  crudGetManyAccumulate: crudGetManyAccumulateAction\n})(UnconnectedReferenceArrayFieldController);\nexport default ReferenceArrayFieldController;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/controller/field/ReferenceArrayFieldController.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Component","connect","get","crudGetManyAccumulate","crudGetManyAccumulateAction","getReferencesByIds","UnconnectedReferenceArrayFieldController","_super","apply","arguments","componentDidMount","fetchReferences","componentWillReceiveProps","nextProps","props","record","id","undefined","_a","_b","reference","ids","render","resource","data","children","basePath","referenceBasePath","replace","loadedOnce","currentSort","field","order","mapStateToProps","state","source","ReferenceArrayFieldController"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Component } from 'react';\nimport { connect } from 'react-redux';\nimport get from 'lodash/get';\nimport { crudGetManyAccumulate as crudGetManyAccumulateAction } from '../../actions';\nimport { getReferencesByIds } from '../../reducer/admin/references/oneToMany';\n/**\n * A container component that fetches records from another resource specified\n * by an array of *ids* in current record.\n *\n * You must define the fields to be passed to the iterator component as children.\n *\n * @example Display all the products of the current order as datagrid\n * // order = {\n * //   id: 123,\n * //   product_ids: [456, 457, 458],\n * // }\n * <ReferenceArrayField label=\"Products\" reference=\"products\" source=\"product_ids\">\n *     <Datagrid>\n *         <TextField source=\"id\" />\n *         <TextField source=\"description\" />\n *         <NumberField source=\"price\" options={{ style: 'currency', currency: 'USD' }} />\n *         <EditButton />\n *     </Datagrid>\n * </ReferenceArrayField>\n *\n * @example Display all the categories of the current product as a list of chips\n * // product = {\n * //   id: 456,\n * //   category_ids: [11, 22, 33],\n * // }\n * <ReferenceArrayField label=\"Categories\" reference=\"categories\" source=\"category_ids\">\n *     <SingleFieldList>\n *         <ChipField source=\"name\" />\n *     </SingleFieldList>\n * </ReferenceArrayField>\n *\n */\nvar UnconnectedReferenceArrayFieldController = /** @class */ (function (_super) {\n    __extends(UnconnectedReferenceArrayFieldController, _super);\n    function UnconnectedReferenceArrayFieldController() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UnconnectedReferenceArrayFieldController.prototype.componentDidMount = function () {\n        this.fetchReferences();\n    };\n    UnconnectedReferenceArrayFieldController.prototype.componentWillReceiveProps = function (nextProps) {\n        if ((this.props.record || { id: undefined }).id !==\n            (nextProps.record || {}).id) {\n            this.fetchReferences(nextProps);\n        }\n    };\n    UnconnectedReferenceArrayFieldController.prototype.fetchReferences = function (_a) {\n        var _b = _a === void 0 ? this.props : _a, crudGetManyAccumulate = _b.crudGetManyAccumulate, reference = _b.reference, ids = _b.ids;\n        crudGetManyAccumulate(reference, ids);\n    };\n    UnconnectedReferenceArrayFieldController.prototype.render = function () {\n        var _a = this.props, resource = _a.resource, reference = _a.reference, data = _a.data, ids = _a.ids, children = _a.children, basePath = _a.basePath;\n        var referenceBasePath = basePath.replace(resource, reference); // FIXME obviously very weak\n        return children({\n            loadedOnce: data != undefined,\n            ids: ids,\n            data: data,\n            referenceBasePath: referenceBasePath,\n            currentSort: {\n                field: 'id',\n                order: 'ASC',\n            },\n        });\n    };\n    return UnconnectedReferenceArrayFieldController;\n}(Component));\nexport { UnconnectedReferenceArrayFieldController };\nvar mapStateToProps = function (state, props) {\n    var record = props.record, source = props.source, reference = props.reference;\n    var ids = get(record, source) || [];\n    return {\n        data: getReferencesByIds(state, reference, ids),\n        ids: ids,\n    };\n};\nvar ReferenceArrayFieldController = connect(mapStateToProps, {\n    crudGetManyAccumulate: crudGetManyAccumulateAction,\n})(UnconnectedReferenceArrayFieldController);\nexport default ReferenceArrayFieldController;\n"]},"metadata":{},"sourceType":"module"}