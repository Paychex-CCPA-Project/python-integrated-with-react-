{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport pure from 'recompose/pure';\nimport Typography from '@material-ui/core/Typography';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport { fieldPropTypes } from './types';\n\nvar toLocaleStringSupportsLocales = function () {\n  // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n  try {\n    new Date().toLocaleString('i');\n  } catch (error) {\n    return error instanceof RangeError;\n  }\n\n  return false;\n}();\n/**\n * Display a date value as a locale string.\n *\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n * @example\n * <DateField source=\"published_at\" />\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\n * <span>07/11/2012</span>\n *\n * <DateField source=\"published_at\" className=\"red\" />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span class=\"red\">07/11/2012</span>\n *\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>Wednesday, November 7, 2012</span>\n *\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>mercredi 7 novembre 2012</span>\n */\n\n\nexport var DateField = function DateField(_a) {\n  var className = _a.className,\n      locales = _a.locales,\n      options = _a.options,\n      record = _a.record,\n      _b = _a.showTime,\n      showTime = _b === void 0 ? false : _b,\n      source = _a.source,\n      rest = __rest(_a, [\"className\", \"locales\", \"options\", \"record\", \"showTime\", \"source\"]);\n\n  if (!record) {\n    return null;\n  }\n\n  var value = get(record, source);\n\n  if (value == null) {\n    return null;\n  }\n\n  var date = value instanceof Date ? value : new Date(value);\n  var dateString = showTime ? toLocaleStringSupportsLocales ? date.toLocaleString(locales, options) : date.toLocaleString() : toLocaleStringSupportsLocales ? date.toLocaleDateString(locales, options) : date.toLocaleDateString();\n  return React.createElement(Typography, __assign({\n    component: \"span\",\n    variant: \"body1\",\n    className: className\n  }, sanitizeRestProps(rest)), dateString);\n};\nvar EnhancedDateField = pure(DateField);\nEnhancedDateField.defaultProps = {\n  addLabel: true\n};\nEnhancedDateField.propTypes = __assign({}, Typography.propTypes, fieldPropTypes, {\n  locales: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)]),\n  options: PropTypes.object,\n  showTime: PropTypes.bool\n});\nEnhancedDateField.displayName = 'EnhancedDateField';\nexport default EnhancedDateField;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-ui-materialui/esm/field/DateField.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","React","PropTypes","get","pure","Typography","sanitizeRestProps","fieldPropTypes","toLocaleStringSupportsLocales","Date","toLocaleString","error","RangeError","DateField","_a","className","locales","options","record","_b","showTime","source","rest","value","date","dateString","toLocaleDateString","createElement","component","variant","EnhancedDateField","defaultProps","addLabel","propTypes","oneOfType","string","arrayOf","object","bool","displayName"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport pure from 'recompose/pure';\nimport Typography from '@material-ui/core/Typography';\nimport sanitizeRestProps from './sanitizeRestProps';\nimport { fieldPropTypes } from './types';\nvar toLocaleStringSupportsLocales = (function () {\n    // from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n    try {\n        new Date().toLocaleString('i');\n    }\n    catch (error) {\n        return error instanceof RangeError;\n    }\n    return false;\n})();\n/**\n * Display a date value as a locale string.\n *\n * Uses Intl.DateTimeFormat() if available, passing the locales and options props as arguments.\n * If Intl is not available, it outputs date as is (and ignores the locales and options props).\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleString\n * @example\n * <DateField source=\"published_at\" />\n * // renders the record { id: 1234, published_at: new Date('2012-11-07') } as\n * <span>07/11/2012</span>\n *\n * <DateField source=\"published_at\" className=\"red\" />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span class=\"red\">07/11/2012</span>\n *\n * <DateField source=\"share\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>Wednesday, November 7, 2012</span>\n *\n * <DateField source=\"price\" locales=\"fr-FR\" options={{ weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }} />\n * // renders the record { id: 1234, new Date('2012-11-07') } as\n * <span>mercredi 7 novembre 2012</span>\n */\nexport var DateField = function (_a) {\n    var className = _a.className, locales = _a.locales, options = _a.options, record = _a.record, _b = _a.showTime, showTime = _b === void 0 ? false : _b, source = _a.source, rest = __rest(_a, [\"className\", \"locales\", \"options\", \"record\", \"showTime\", \"source\"]);\n    if (!record) {\n        return null;\n    }\n    var value = get(record, source);\n    if (value == null) {\n        return null;\n    }\n    var date = value instanceof Date ? value : new Date(value);\n    var dateString = showTime\n        ? toLocaleStringSupportsLocales\n            ? date.toLocaleString(locales, options)\n            : date.toLocaleString()\n        : toLocaleStringSupportsLocales\n            ? date.toLocaleDateString(locales, options)\n            : date.toLocaleDateString();\n    return (React.createElement(Typography, __assign({ component: \"span\", variant: \"body1\", className: className }, sanitizeRestProps(rest)), dateString));\n};\nvar EnhancedDateField = pure(DateField);\nEnhancedDateField.defaultProps = {\n    addLabel: true,\n};\nEnhancedDateField.propTypes = __assign({}, Typography.propTypes, fieldPropTypes, { locales: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.arrayOf(PropTypes.string),\n    ]), options: PropTypes.object, showTime: PropTypes.bool });\nEnhancedDateField.displayName = 'EnhancedDateField';\nexport default EnhancedDateField;\n"]},"metadata":{},"sourceType":"module"}