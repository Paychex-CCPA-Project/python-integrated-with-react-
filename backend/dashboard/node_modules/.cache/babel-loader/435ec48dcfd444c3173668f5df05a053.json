{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { addField, translate, ReferenceArrayInputController } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Labeled from '../input/Labeled';\nimport ReferenceError from './ReferenceError';\n\nvar sanitizeRestProps = function sanitizeRestProps(_a) {\n  var alwaysOn = _a.alwaysOn,\n      basePath = _a.basePath,\n      component = _a.component,\n      crudGetMany = _a.crudGetMany,\n      crudGetMatching = _a.crudGetMatching,\n      defaultValue = _a.defaultValue,\n      filterToQuery = _a.filterToQuery,\n      formClassName = _a.formClassName,\n      initializeForm = _a.initializeForm,\n      input = _a.input,\n      isRequired = _a.isRequired,\n      label = _a.label,\n      locale = _a.locale,\n      meta = _a.meta,\n      optionText = _a.optionText,\n      optionValue = _a.optionValue,\n      perPage = _a.perPage,\n      record = _a.record,\n      referenceSource = _a.referenceSource,\n      resource = _a.resource,\n      allowEmpty = _a.allowEmpty,\n      source = _a.source,\n      textAlign = _a.textAlign,\n      translate = _a.translate,\n      translateChoice = _a.translateChoice,\n      rest = __rest(_a, [\"alwaysOn\", \"basePath\", \"component\", \"crudGetMany\", \"crudGetMatching\", \"defaultValue\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"locale\", \"meta\", \"optionText\", \"optionValue\", \"perPage\", \"record\", \"referenceSource\", \"resource\", \"allowEmpty\", \"source\", \"textAlign\", \"translate\", \"translateChoice\"]);\n\n  return rest;\n};\n\nexport var ReferenceArrayInputView = function ReferenceArrayInputView(_a) {\n  var allowEmpty = _a.allowEmpty,\n      basePath = _a.basePath,\n      children = _a.children,\n      choices = _a.choices,\n      className = _a.className,\n      error = _a.error,\n      input = _a.input,\n      isLoading = _a.isLoading,\n      isRequired = _a.isRequired,\n      label = _a.label,\n      meta = _a.meta,\n      onChange = _a.onChange,\n      options = _a.options,\n      resource = _a.resource,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      source = _a.source,\n      translate = _a.translate,\n      warning = _a.warning,\n      rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"className\", \"error\", \"input\", \"isLoading\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"options\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"translate\", \"warning\"]);\n\n  var translatedLabel = translate(label || \"resources.\" + resource + \".fields.\" + source, {\n    _: label\n  });\n\n  if (isLoading) {\n    return React.createElement(Labeled, {\n      label: translatedLabel,\n      source: source,\n      resource: resource,\n      className: className,\n      isRequired: isRequired\n    }, React.createElement(LinearProgress, null));\n  }\n\n  if (error) {\n    return React.createElement(ReferenceError, {\n      label: translatedLabel,\n      error: error\n    });\n  }\n\n  return React.cloneElement(children, __assign({\n    allowEmpty: allowEmpty,\n    basePath: basePath,\n    choices: choices,\n    className: className,\n    error: error,\n    input: input,\n    isRequired: isRequired,\n    label: translatedLabel,\n    meta: __assign({}, meta, {\n      helperText: warning || false\n    }),\n    onChange: onChange,\n    options: options,\n    resource: resource,\n    setFilter: setFilter,\n    setPagination: setPagination,\n    setSort: setSort,\n    source: source,\n    translateChoice: false,\n    limitChoicesToValue: true\n  }, sanitizeRestProps(rest), children.props));\n};\nReferenceArrayInputView.propTypes = {\n  allowEmpty: PropTypes.bool,\n  basePath: PropTypes.string,\n  children: PropTypes.element,\n  choices: PropTypes.array,\n  className: PropTypes.string,\n  error: PropTypes.string,\n  isLoading: PropTypes.bool,\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  onChange: PropTypes.func,\n  options: PropTypes.object,\n  resource: PropTypes.string.isRequired,\n  setFilter: PropTypes.func,\n  setPagination: PropTypes.func,\n  setSort: PropTypes.func,\n  source: PropTypes.string,\n  translate: PropTypes.func.isRequired,\n  warning: PropTypes.string\n};\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using the\n * `CRUD_GET_MANY` REST method) as well as possible resources (using the\n * `CRUD_GET_MATCHING` REST method) in the reference endpoint. It then\n * delegates rendering to a subcomponent, to which it passes the possible\n * choices as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput passes a\n * `setFilter` function as prop to its child component. It uses the value to\n * create a filter for the query - by default { q: [searchText] }. You can\n * customize the mapping searchText => searchQuery by setting a custom\n * `filterToQuery` function prop:\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filterToQuery={searchText => ({ name: searchText })}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n */\n\nexport var ReferenceArrayInput = function ReferenceArrayInput(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceArrayInput> only accepts a single child (like <Datagrid>)');\n  }\n\n  return React.createElement(ReferenceArrayInputController, __assign({}, props), function (controllerProps) {\n    return React.createElement(ReferenceArrayInputView, __assign({}, props, __assign({\n      children: children\n    }, controllerProps)));\n  });\n};\nReferenceArrayInput.propTypes = {\n  allowEmpty: PropTypes.bool.isRequired,\n  basePath: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  className: PropTypes.string,\n  filter: PropTypes.object,\n  filterToQuery: PropTypes.func.isRequired,\n  input: PropTypes.object.isRequired,\n  label: PropTypes.string,\n  meta: PropTypes.object,\n  perPage: PropTypes.number,\n  reference: PropTypes.string.isRequired,\n  resource: PropTypes.string.isRequired,\n  sort: PropTypes.shape({\n    field: PropTypes.string,\n    order: PropTypes.oneOf(['ASC', 'DESC'])\n  }),\n  source: PropTypes.string,\n  translate: PropTypes.func.isRequired\n};\nReferenceArrayInput.defaultProps = {\n  allowEmpty: false,\n  filter: {},\n  filterToQuery: function filterToQuery(searchText) {\n    return {\n      q: searchText\n    };\n  },\n  perPage: 25,\n  sort: {\n    field: 'id',\n    order: 'DESC'\n  }\n};\nvar EnhancedReferenceArrayInput = compose(addField, translate)(ReferenceArrayInput);\nexport default EnhancedReferenceArrayInput;","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-ui-materialui/esm/input/ReferenceArrayInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","React","PropTypes","compose","addField","translate","ReferenceArrayInputController","LinearProgress","Labeled","ReferenceError","sanitizeRestProps","_a","alwaysOn","basePath","component","crudGetMany","crudGetMatching","defaultValue","filterToQuery","formClassName","initializeForm","input","isRequired","label","locale","meta","optionText","optionValue","perPage","record","referenceSource","resource","allowEmpty","source","textAlign","translateChoice","rest","ReferenceArrayInputView","children","choices","className","error","isLoading","onChange","options","setFilter","setPagination","setSort","warning","translatedLabel","_","createElement","cloneElement","helperText","limitChoicesToValue","props","propTypes","bool","string","element","array","object","func","ReferenceArrayInput","Children","count","Error","controllerProps","filter","number","reference","sort","shape","field","order","oneOf","defaultProps","searchText","q","EnhancedReferenceArrayInput"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport compose from 'recompose/compose';\nimport { addField, translate, ReferenceArrayInputController } from 'ra-core';\nimport LinearProgress from '../layout/LinearProgress';\nimport Labeled from '../input/Labeled';\nimport ReferenceError from './ReferenceError';\nvar sanitizeRestProps = function (_a) {\n    var alwaysOn = _a.alwaysOn, basePath = _a.basePath, component = _a.component, crudGetMany = _a.crudGetMany, crudGetMatching = _a.crudGetMatching, defaultValue = _a.defaultValue, filterToQuery = _a.filterToQuery, formClassName = _a.formClassName, initializeForm = _a.initializeForm, input = _a.input, isRequired = _a.isRequired, label = _a.label, locale = _a.locale, meta = _a.meta, optionText = _a.optionText, optionValue = _a.optionValue, perPage = _a.perPage, record = _a.record, referenceSource = _a.referenceSource, resource = _a.resource, allowEmpty = _a.allowEmpty, source = _a.source, textAlign = _a.textAlign, translate = _a.translate, translateChoice = _a.translateChoice, rest = __rest(_a, [\"alwaysOn\", \"basePath\", \"component\", \"crudGetMany\", \"crudGetMatching\", \"defaultValue\", \"filterToQuery\", \"formClassName\", \"initializeForm\", \"input\", \"isRequired\", \"label\", \"locale\", \"meta\", \"optionText\", \"optionValue\", \"perPage\", \"record\", \"referenceSource\", \"resource\", \"allowEmpty\", \"source\", \"textAlign\", \"translate\", \"translateChoice\"]);\n    return rest;\n};\nexport var ReferenceArrayInputView = function (_a) {\n    var allowEmpty = _a.allowEmpty, basePath = _a.basePath, children = _a.children, choices = _a.choices, className = _a.className, error = _a.error, input = _a.input, isLoading = _a.isLoading, isRequired = _a.isRequired, label = _a.label, meta = _a.meta, onChange = _a.onChange, options = _a.options, resource = _a.resource, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, source = _a.source, translate = _a.translate, warning = _a.warning, rest = __rest(_a, [\"allowEmpty\", \"basePath\", \"children\", \"choices\", \"className\", \"error\", \"input\", \"isLoading\", \"isRequired\", \"label\", \"meta\", \"onChange\", \"options\", \"resource\", \"setFilter\", \"setPagination\", \"setSort\", \"source\", \"translate\", \"warning\"]);\n    var translatedLabel = translate(label || \"resources.\" + resource + \".fields.\" + source, { _: label });\n    if (isLoading) {\n        return (React.createElement(Labeled, { label: translatedLabel, source: source, resource: resource, className: className, isRequired: isRequired },\n            React.createElement(LinearProgress, null)));\n    }\n    if (error) {\n        return React.createElement(ReferenceError, { label: translatedLabel, error: error });\n    }\n    return React.cloneElement(children, __assign({ allowEmpty: allowEmpty,\n        basePath: basePath,\n        choices: choices,\n        className: className,\n        error: error,\n        input: input,\n        isRequired: isRequired, label: translatedLabel, meta: __assign({}, meta, { helperText: warning || false }), onChange: onChange,\n        options: options,\n        resource: resource,\n        setFilter: setFilter,\n        setPagination: setPagination,\n        setSort: setSort,\n        source: source, translateChoice: false, limitChoicesToValue: true }, sanitizeRestProps(rest), children.props));\n};\nReferenceArrayInputView.propTypes = {\n    allowEmpty: PropTypes.bool,\n    basePath: PropTypes.string,\n    children: PropTypes.element,\n    choices: PropTypes.array,\n    className: PropTypes.string,\n    error: PropTypes.string,\n    isLoading: PropTypes.bool,\n    input: PropTypes.object.isRequired,\n    label: PropTypes.string,\n    meta: PropTypes.object,\n    onChange: PropTypes.func,\n    options: PropTypes.object,\n    resource: PropTypes.string.isRequired,\n    setFilter: PropTypes.func,\n    setPagination: PropTypes.func,\n    setSort: PropTypes.func,\n    source: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n    warning: PropTypes.string,\n};\n/**\n * An Input component for fields containing a list of references to another resource.\n * Useful for 'hasMany' relationship.\n *\n * @example\n * The post object has many tags, so the post resource looks like:\n * {\n *    id: 1234,\n *    tag_ids: [ \"1\", \"23\", \"4\" ]\n * }\n *\n * ReferenceArrayInput component fetches the current resources (using the\n * `CRUD_GET_MANY` REST method) as well as possible resources (using the\n * `CRUD_GET_MATCHING` REST method) in the reference endpoint. It then\n * delegates rendering to a subcomponent, to which it passes the possible\n * choices as the `choices` attribute.\n *\n * Use it with a selector component as child, like `<SelectArrayInput>`\n * or <CheckboxGroupInput>.\n *\n * @example\n * export const PostEdit = (props) => (\n *     <Edit {...props}>\n *         <SimpleForm>\n *             <ReferenceArrayInput source=\"tag_ids\" reference=\"tags\">\n *                 <SelectArrayInput optionText=\"name\" />\n *             </ReferenceArrayInput>\n *         </SimpleForm>\n *     </Edit>\n * );\n *\n * By default, restricts the possible values to 25. You can extend this limit\n * by setting the `perPage` prop.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      perPage={100}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * By default, orders the possible values by id desc. You can change this order\n * by setting the `sort` prop (an object with `field` and `order` properties).\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      sort={{ field: 'name', order: 'ASC' }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * Also, you can filter the query used to populate the possible values. Use the\n * `filter` prop for that.\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filter={{ is_public: true }}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n *\n * The enclosed component may filter results. ReferenceArrayInput passes a\n * `setFilter` function as prop to its child component. It uses the value to\n * create a filter for the query - by default { q: [searchText] }. You can\n * customize the mapping searchText => searchQuery by setting a custom\n * `filterToQuery` function prop:\n *\n * @example\n * <ReferenceArrayInput\n *      source=\"tag_ids\"\n *      reference=\"tags\"\n *      filterToQuery={searchText => ({ name: searchText })}>\n *     <SelectArrayInput optionText=\"name\" />\n * </ReferenceArrayInput>\n */\nexport var ReferenceArrayInput = function (_a) {\n    var children = _a.children, props = __rest(_a, [\"children\"]);\n    if (React.Children.count(children) !== 1) {\n        throw new Error('<ReferenceArrayInput> only accepts a single child (like <Datagrid>)');\n    }\n    return (React.createElement(ReferenceArrayInputController, __assign({}, props), function (controllerProps) { return (React.createElement(ReferenceArrayInputView, __assign({}, props, __assign({ children: children }, controllerProps)))); }));\n};\nReferenceArrayInput.propTypes = {\n    allowEmpty: PropTypes.bool.isRequired,\n    basePath: PropTypes.string,\n    children: PropTypes.element.isRequired,\n    className: PropTypes.string,\n    filter: PropTypes.object,\n    filterToQuery: PropTypes.func.isRequired,\n    input: PropTypes.object.isRequired,\n    label: PropTypes.string,\n    meta: PropTypes.object,\n    perPage: PropTypes.number,\n    reference: PropTypes.string.isRequired,\n    resource: PropTypes.string.isRequired,\n    sort: PropTypes.shape({\n        field: PropTypes.string,\n        order: PropTypes.oneOf(['ASC', 'DESC']),\n    }),\n    source: PropTypes.string,\n    translate: PropTypes.func.isRequired,\n};\nReferenceArrayInput.defaultProps = {\n    allowEmpty: false,\n    filter: {},\n    filterToQuery: function (searchText) { return ({ q: searchText }); },\n    perPage: 25,\n    sort: { field: 'id', order: 'DESC' },\n};\nvar EnhancedReferenceArrayInput = compose(addField, translate)(ReferenceArrayInput);\nexport default EnhancedReferenceArrayInput;\n"]},"metadata":{},"sourceType":"module"}