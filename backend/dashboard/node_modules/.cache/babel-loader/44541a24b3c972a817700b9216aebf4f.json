{"ast":null,"code":"import uniq from 'lodash/uniq';\nimport { CRUD_GET_LIST_SUCCESS, CRUD_GET_MANY_SUCCESS, CRUD_GET_MANY_REFERENCE_SUCCESS, CRUD_GET_ONE_SUCCESS, CRUD_CREATE_SUCCESS, CRUD_UPDATE_SUCCESS } from '../../../../actions/dataActions';\nimport getFetchedAt from '../../../../util/getFetchedAt';\nimport { DELETE, DELETE_MANY } from '../../../../dataFetchActions';\nexport var addRecordIdsFactory = function addRecordIdsFactory(getFetchedAtCallback) {\n  return function (newRecordIds, oldRecordIds) {\n    if (newRecordIds === void 0) {\n      newRecordIds = [];\n    }\n\n    var newFetchedAt = getFetchedAtCallback(newRecordIds, oldRecordIds.fetchedAt);\n    var recordIds = uniq(oldRecordIds.filter(function (id) {\n      return !!newFetchedAt[id];\n    }).concat(newRecordIds));\n    Object.defineProperty(recordIds, 'fetchedAt', {\n      value: newFetchedAt\n    }); // non enumerable by default\n\n    return recordIds;\n  };\n};\nvar addRecordIds = addRecordIdsFactory(getFetchedAt);\n\nvar idsReducer = function idsReducer(previousState, action) {\n  if (previousState === void 0) {\n    previousState = [];\n  }\n\n  if (action.meta && action.meta.optimistic) {\n    if (action.meta.fetch === DELETE) {\n      var index = previousState.map(function (el) {\n        return el === action.payload.id;\n      }) // eslint-disable-line eqeqeq\n      .indexOf(true);\n\n      if (index === -1) {\n        return previousState;\n      }\n\n      var newState = previousState.slice(0, index).concat(previousState.slice(index + 1));\n      Object.defineProperty(newState, 'fetchedAt', {\n        value: previousState.fetchedAt\n      });\n      return newState;\n    }\n\n    if (action.meta.fetch === DELETE_MANY) {\n      var newState = previousState.filter(function (el) {\n        return !action.payload.ids.includes(el);\n      });\n      Object.defineProperty(newState, 'fetchedAt', {\n        value: previousState.fetchedAt\n      });\n      return newState;\n    }\n  }\n\n  switch (action.type) {\n    case CRUD_GET_LIST_SUCCESS:\n      return addRecordIds(action.payload.data.map(function (_a) {\n        var id = _a.id;\n        return id;\n      }), []);\n\n    case CRUD_GET_MANY_SUCCESS:\n    case CRUD_GET_MANY_REFERENCE_SUCCESS:\n      return addRecordIds(action.payload.data.map(function (_a) {\n        var id = _a.id;\n        return id;\n      }).filter(function (id) {\n        return previousState.indexOf(id) !== -1;\n      }), previousState);\n\n    case CRUD_GET_ONE_SUCCESS:\n    case CRUD_CREATE_SUCCESS:\n    case CRUD_UPDATE_SUCCESS:\n      return addRecordIds([action.payload.data.id], previousState);\n\n    default:\n      return previousState;\n  }\n};\n\nexport default idsReducer;\nexport var getIds = function getIds(state) {\n  return state;\n};","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/reducer/admin/resource/list/ids.js"],"names":["uniq","CRUD_GET_LIST_SUCCESS","CRUD_GET_MANY_SUCCESS","CRUD_GET_MANY_REFERENCE_SUCCESS","CRUD_GET_ONE_SUCCESS","CRUD_CREATE_SUCCESS","CRUD_UPDATE_SUCCESS","getFetchedAt","DELETE","DELETE_MANY","addRecordIdsFactory","getFetchedAtCallback","newRecordIds","oldRecordIds","newFetchedAt","fetchedAt","recordIds","filter","id","concat","Object","defineProperty","value","addRecordIds","idsReducer","previousState","action","meta","optimistic","fetch","index","map","el","payload","indexOf","newState","slice","ids","includes","type","data","_a","getIds","state"],"mappings":"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","sourcesContent":["import uniq from 'lodash/uniq';\nimport { CRUD_GET_LIST_SUCCESS, CRUD_GET_MANY_SUCCESS, CRUD_GET_MANY_REFERENCE_SUCCESS, CRUD_GET_ONE_SUCCESS, CRUD_CREATE_SUCCESS, CRUD_UPDATE_SUCCESS, } from '../../../../actions/dataActions';\nimport getFetchedAt from '../../../../util/getFetchedAt';\nimport { DELETE, DELETE_MANY } from '../../../../dataFetchActions';\nexport var addRecordIdsFactory = function (getFetchedAtCallback) { return function (newRecordIds, oldRecordIds) {\n    if (newRecordIds === void 0) { newRecordIds = []; }\n    var newFetchedAt = getFetchedAtCallback(newRecordIds, oldRecordIds.fetchedAt);\n    var recordIds = uniq(oldRecordIds.filter(function (id) { return !!newFetchedAt[id]; }).concat(newRecordIds));\n    Object.defineProperty(recordIds, 'fetchedAt', {\n        value: newFetchedAt,\n    }); // non enumerable by default\n    return recordIds;\n}; };\nvar addRecordIds = addRecordIdsFactory(getFetchedAt);\nvar idsReducer = function (previousState, action) {\n    if (previousState === void 0) { previousState = []; }\n    if (action.meta && action.meta.optimistic) {\n        if (action.meta.fetch === DELETE) {\n            var index = previousState\n                .map(function (el) { return el === action.payload.id; }) // eslint-disable-line eqeqeq\n                .indexOf(true);\n            if (index === -1) {\n                return previousState;\n            }\n            var newState = previousState.slice(0, index).concat(previousState.slice(index + 1));\n            Object.defineProperty(newState, 'fetchedAt', {\n                value: previousState.fetchedAt,\n            });\n            return newState;\n        }\n        if (action.meta.fetch === DELETE_MANY) {\n            var newState = previousState.filter(function (el) { return !action.payload.ids.includes(el); });\n            Object.defineProperty(newState, 'fetchedAt', {\n                value: previousState.fetchedAt,\n            });\n            return newState;\n        }\n    }\n    switch (action.type) {\n        case CRUD_GET_LIST_SUCCESS:\n            return addRecordIds(action.payload.data.map(function (_a) {\n                var id = _a.id;\n                return id;\n            }), []);\n        case CRUD_GET_MANY_SUCCESS:\n        case CRUD_GET_MANY_REFERENCE_SUCCESS:\n            return addRecordIds(action.payload.data\n                .map(function (_a) {\n                var id = _a.id;\n                return id;\n            })\n                .filter(function (id) { return previousState.indexOf(id) !== -1; }), previousState);\n        case CRUD_GET_ONE_SUCCESS:\n        case CRUD_CREATE_SUCCESS:\n        case CRUD_UPDATE_SUCCESS:\n            return addRecordIds([action.payload.data.id], previousState);\n        default:\n            return previousState;\n    }\n};\nexport default idsReducer;\nexport var getIds = function (state) { return state; };\n"]},"metadata":{},"sourceType":"module"}