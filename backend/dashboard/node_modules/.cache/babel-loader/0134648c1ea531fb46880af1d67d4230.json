{"ast":null,"code":"function _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport { is, check, object, createSetContextWarning } from './utils';\nimport { emitter } from './channel';\nimport { ident } from './utils';\nimport { runSaga } from './runSaga';\nexport default function sagaMiddlewareFactory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _ref$context = _ref.context,\n      context = _ref$context === undefined ? {} : _ref$context,\n      options = _objectWithoutProperties(_ref, ['context']);\n\n  var sagaMonitor = options.sagaMonitor,\n      logger = options.logger,\n      onError = options.onError;\n\n  if (is.func(options)) {\n    if (process.env.NODE_ENV === 'production') {\n      throw new Error('Saga middleware no longer accept Generator functions. Use sagaMiddleware.run instead');\n    } else {\n      throw new Error('You passed a function to the Saga middleware. You are likely trying to start a        Saga by directly passing it to the middleware. This is no longer possible starting from 0.10.0.        To run a Saga, you must do it dynamically AFTER mounting the middleware into the store.\\n        Example:\\n          import createSagaMiddleware from \\'redux-saga\\'\\n          ... other imports\\n\\n          const sagaMiddleware = createSagaMiddleware()\\n          const store = createStore(reducer, applyMiddleware(sagaMiddleware))\\n          sagaMiddleware.run(saga, ...args)\\n      ');\n    }\n  }\n\n  if (logger && !is.func(logger)) {\n    throw new Error('`options.logger` passed to the Saga middleware is not a function!');\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.onerror) {\n    throw new Error('`options.onerror` was removed. Use `options.onError` instead.');\n  }\n\n  if (onError && !is.func(onError)) {\n    throw new Error('`options.onError` passed to the Saga middleware is not a function!');\n  }\n\n  if (options.emitter && !is.func(options.emitter)) {\n    throw new Error('`options.emitter` passed to the Saga middleware is not a function!');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n    var sagaEmitter = emitter();\n    sagaEmitter.emit = (options.emitter || ident)(sagaEmitter.emit);\n    sagaMiddleware.run = runSaga.bind(null, {\n      context: context,\n      subscribe: sagaEmitter.subscribe,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor,\n      logger: logger,\n      onError: onError\n    });\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n\n        var result = next(action); // hit reducers\n\n        sagaEmitter.emit(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    check(props, is.object, createSetContextWarning('sagaMiddleware', props));\n    object.assign(context, props);\n  };\n\n  return sagaMiddleware;\n}","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/redux-saga/es/internal/middleware.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","is","check","object","createSetContextWarning","emitter","ident","runSaga","sagaMiddlewareFactory","_ref","arguments","length","undefined","_ref$context","context","options","sagaMonitor","logger","onError","func","process","env","NODE_ENV","Error","onerror","sagaMiddleware","_ref2","getState","dispatch","sagaEmitter","emit","run","bind","subscribe","next","action","actionDispatched","result","setContext","props","assign"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport { is, check, object, createSetContextWarning } from './utils';\nimport { emitter } from './channel';\nimport { ident } from './utils';\nimport { runSaga } from './runSaga';\n\nexport default function sagaMiddlewareFactory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var _ref$context = _ref.context,\n      context = _ref$context === undefined ? {} : _ref$context,\n      options = _objectWithoutProperties(_ref, ['context']);\n\n  var sagaMonitor = options.sagaMonitor,\n      logger = options.logger,\n      onError = options.onError;\n\n\n  if (is.func(options)) {\n    if (process.env.NODE_ENV === 'production') {\n      throw new Error('Saga middleware no longer accept Generator functions. Use sagaMiddleware.run instead');\n    } else {\n      throw new Error('You passed a function to the Saga middleware. You are likely trying to start a        Saga by directly passing it to the middleware. This is no longer possible starting from 0.10.0.        To run a Saga, you must do it dynamically AFTER mounting the middleware into the store.\\n        Example:\\n          import createSagaMiddleware from \\'redux-saga\\'\\n          ... other imports\\n\\n          const sagaMiddleware = createSagaMiddleware()\\n          const store = createStore(reducer, applyMiddleware(sagaMiddleware))\\n          sagaMiddleware.run(saga, ...args)\\n      ');\n    }\n  }\n\n  if (logger && !is.func(logger)) {\n    throw new Error('`options.logger` passed to the Saga middleware is not a function!');\n  }\n\n  if (process.env.NODE_ENV === 'development' && options.onerror) {\n    throw new Error('`options.onerror` was removed. Use `options.onError` instead.');\n  }\n\n  if (onError && !is.func(onError)) {\n    throw new Error('`options.onError` passed to the Saga middleware is not a function!');\n  }\n\n  if (options.emitter && !is.func(options.emitter)) {\n    throw new Error('`options.emitter` passed to the Saga middleware is not a function!');\n  }\n\n  function sagaMiddleware(_ref2) {\n    var getState = _ref2.getState,\n        dispatch = _ref2.dispatch;\n\n    var sagaEmitter = emitter();\n    sagaEmitter.emit = (options.emitter || ident)(sagaEmitter.emit);\n\n    sagaMiddleware.run = runSaga.bind(null, {\n      context: context,\n      subscribe: sagaEmitter.subscribe,\n      dispatch: dispatch,\n      getState: getState,\n      sagaMonitor: sagaMonitor,\n      logger: logger,\n      onError: onError\n    });\n\n    return function (next) {\n      return function (action) {\n        if (sagaMonitor && sagaMonitor.actionDispatched) {\n          sagaMonitor.actionDispatched(action);\n        }\n        var result = next(action); // hit reducers\n        sagaEmitter.emit(action);\n        return result;\n      };\n    };\n  }\n\n  sagaMiddleware.run = function () {\n    throw new Error('Before running a Saga, you must mount the Saga middleware on the Store using applyMiddleware');\n  };\n\n  sagaMiddleware.setContext = function (props) {\n    check(props, is.object, createSetContextWarning('sagaMiddleware', props));\n    object.assign(context, props);\n  };\n\n  return sagaMiddleware;\n}"]},"metadata":{},"sourceType":"module"}