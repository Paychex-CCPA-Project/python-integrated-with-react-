{"ast":null,"code":"import { actionTypes } from 'redux-form';\nimport { LOCATION_CHANGE } from 'react-router-redux';\nimport { CRUD_CREATE, CRUD_CREATE_SUCCESS, CRUD_CREATE_FAILURE, CRUD_UPDATE, CRUD_UPDATE_SUCCESS, CRUD_UPDATE_FAILURE } from '../../actions';\nexport default (function (previousState, _a) {\n  if (previousState === void 0) {\n    previousState = false;\n  }\n\n  var type = _a.type,\n      meta = _a.meta;\n\n  switch (type) {\n    case CRUD_CREATE:\n    case CRUD_UPDATE:\n      return {\n        redirect: meta.onSuccess && meta.onSuccess.redirectTo\n      };\n\n    case LOCATION_CHANGE:\n    case actionTypes.SET_SUBMIT_FAILED:\n    case CRUD_CREATE_SUCCESS:\n    case CRUD_CREATE_FAILURE:\n    case CRUD_UPDATE_SUCCESS:\n    case CRUD_UPDATE_FAILURE:\n      return false;\n\n    default:\n      return previousState;\n  }\n});","map":{"version":3,"sources":["/Users/masonkirby/Desktop/backed/backend/dashboard/node_modules/ra-data-drf/node_modules/ra-core/esm/reducer/admin/saving.js"],"names":["actionTypes","LOCATION_CHANGE","CRUD_CREATE","CRUD_CREATE_SUCCESS","CRUD_CREATE_FAILURE","CRUD_UPDATE","CRUD_UPDATE_SUCCESS","CRUD_UPDATE_FAILURE","previousState","_a","type","meta","redirect","onSuccess","redirectTo","SET_SUBMIT_FAILED"],"mappings":"AAAA,SAASA,WAAT,QAA4B,YAA5B;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SAASC,WAAT,EAAsBC,mBAAtB,EAA2CC,mBAA3C,EAAgEC,WAAhE,EAA6EC,mBAA7E,EAAkGC,mBAAlG,QAA8H,eAA9H;AACA,gBAAgB,UAAUC,aAAV,EAAyBC,EAAzB,EAA6B;AACzC,MAAID,aAAa,KAAK,KAAK,CAA3B,EAA8B;AAAEA,IAAAA,aAAa,GAAG,KAAhB;AAAwB;;AACxD,MAAIE,IAAI,GAAGD,EAAE,CAACC,IAAd;AAAA,MAAoBC,IAAI,GAAGF,EAAE,CAACE,IAA9B;;AACA,UAAQD,IAAR;AACI,SAAKR,WAAL;AACA,SAAKG,WAAL;AACI,aAAO;AACHO,QAAAA,QAAQ,EAAED,IAAI,CAACE,SAAL,IAAkBF,IAAI,CAACE,SAAL,CAAeC;AADxC,OAAP;;AAGJ,SAAKb,eAAL;AACA,SAAKD,WAAW,CAACe,iBAAjB;AACA,SAAKZ,mBAAL;AACA,SAAKC,mBAAL;AACA,SAAKE,mBAAL;AACA,SAAKC,mBAAL;AACI,aAAO,KAAP;;AACJ;AACI,aAAOC,aAAP;AAdR;AAgBH,CAnBD","sourcesContent":["import { actionTypes } from 'redux-form';\nimport { LOCATION_CHANGE } from 'react-router-redux';\nimport { CRUD_CREATE, CRUD_CREATE_SUCCESS, CRUD_CREATE_FAILURE, CRUD_UPDATE, CRUD_UPDATE_SUCCESS, CRUD_UPDATE_FAILURE, } from '../../actions';\nexport default (function (previousState, _a) {\n    if (previousState === void 0) { previousState = false; }\n    var type = _a.type, meta = _a.meta;\n    switch (type) {\n        case CRUD_CREATE:\n        case CRUD_UPDATE:\n            return {\n                redirect: meta.onSuccess && meta.onSuccess.redirectTo,\n            };\n        case LOCATION_CHANGE:\n        case actionTypes.SET_SUBMIT_FAILED:\n        case CRUD_CREATE_SUCCESS:\n        case CRUD_CREATE_FAILURE:\n        case CRUD_UPDATE_SUCCESS:\n        case CRUD_UPDATE_FAILURE:\n            return false;\n        default:\n            return previousState;\n    }\n});\n"]},"metadata":{},"sourceType":"module"}